{{

  "language": "Solidity",

  "sources": {

    "contracts/FABU.sol": {

      "content": "\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title: Fabula Photography\n/// @author: manifold.xyz\n\nimport \"./ERC721Creator.sol\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                                                                                                                //\n//                                                                                                                                                                                                                //\n//    ···········▄▄▄ ▄▄▄· ▄▄▄▄· ▄• ▄▌▄▄▌   ▄▄▄·                                                                                                                                                                   //\n//    ··········▐▄▄·▐█ ▀█ ▐█ ▀█▪█▪██▌██•  ▐█ ▀█                                                                                                                                                                   //\n//    ··········██▪ ▄█▀▀█ ▐█▀▀█▄█▌▐█▌██▪  ▄█▀▀█                                                                                                                                                                   //\n//    ··········██▌.▐█ ▪▐▌██▄▪▐█▐█▄█▌▐█▌▐▌▐█ ▪▐▌                                                                                                                                                                  //\n//    ··········▀▀▀  ▀  ▀ ·▀▀▀▀  ▀▀▀ .▀▀▀  ▀  ▀                                                                                                                                                                   //\n//    ccclcccccccc:::cccccccllllcllllllllllllcc::ccllllccccccccccc:::::::::ccc::::::::::::::;;;;;;,,;::::::::;;;;;;;;;;;;;;;;;;;;;;,,,;;;;;;,,'''',,,,,,,,,,,,,,,''''.......''................................    //\n//    lllllllllllcc:ccccccllllllllllllllllllllcccccllllllllllllllc:;;:ccccccccccccccc:;;;;;;,;;;;,'',;;;,,,;;;,',,,,,,,,;,,,,,,,,,,,,,,;:;;;;,,,'',,,,,,,,''','''''''''..'''''''''............................    //\n//    lllllllllllccccccclllllllllllllllllllllllllllllllllllllllllc:;;:llllc:;;:cllcccc;,,;:::::c:::;;::::;;::::;;::::::::::::::::::::;;;::;;;;,,,',,'',,,'''','''''''''''''.''''''............................    //\n//    llllllllllccccccccllloooolllllllllllllllllllccllllllllllllllc::cllllc:;;;cllcccc:;,;:::cccc:::;;::::::::::::::::::::::::::;;;;;;;;;;;;;;;;;,,,,,,,,,,,,,,''',,,,'''''.'','''''..........................    //\n//    llllllllllcccccccllloooooolloooollllllllllllllllllllllllllllllllllcccccccccccc::::::::;;:::::;;;;;;::::;;;;;;,,;;;;;;;;;;;;;;;;;,,,'''',,,,,;;;;;;;,,,,,,,,,,,,,,''',,,,,,,,''.......     ..............    //\n//    llllllllllccccclllloooooooooooolllloooolllllloolllllllllllllllllllcccccccccccc::::::::;;:::::;,,;;;;;;;;;,,,,'',;;,,;;;;,,,,,,,,,,,'..'''''',;;;,,,,,,,,,,,,,,,,,,,,,,,,,,,'........      ..............    //\n//    lllllllllllccccllllooooooooooolllllllllllllllllllllllllllllllllllcccllccccccccccc:::::::::::;;,;;;;;;::::;;;;;;;::::::::::;;;;;;;;,,''',,''',;;;,,,''''',''''..''',,,,,,''''........   ...........''....    //\n//    llllllllllcccclllllooooooolllllllcllllllclllccllclllllllllllllllllcllccccccccccc:::::;;;;:::;;,,;;;;;;::::::;;;::::::::::::::::::;,,,,,,,,,,;;;;;;,,,''''''.....'''.................      ..............    //\n//    llllllllllllllllllllllllolllllcccclllllllllcccllllllllllllllllllllccccccccccccc:;;;;;,,',;;;,,,,,,,;;;;;;;;;;,;;:::;;,,;;;;::::;,''',,'',,,,;;;;;;,''''''.....''''......'''''..........    .............    //\n//    llllllllllllcllloooooooooolc;,,,;;;::cclllllllllllllllllllllllllolllllllccllllc:::;;;;;;;:::;;;;;;;;;;;;;;;::::::::::;;::::::::;;,,;;;;;;;:::::;;;;;;,,,''......''''''',,,,,,,''''........    ..........    //\n//    llllllllllllllloooooooooooo:,...........',:cooooooooooooooollllllollloooooooollcccc::::;;:::c:::::::::::::::::::cccc::::::::::::;;;;;;;;;;;;::::::;;;,,,,''.......'...'',,,,,,,,,,''......     .........    //\n//    llllllllllllllloooooooooooo:'..........    .':loooooooooooooooooolllllllllooollccccc::;;;;:ccccccccccccccccccllllllccccccccccccccccccccc::::cccccc::;;;;;;,,''....'.....,,;;;,,,,,,'''....      ........    //\n//    llllllllllllllloooooooddddl;'...........      .';cooddddddoooooooolllllllllllllccccc:::;;;:::::cccc::ccccccccllcclllllcllllllccccccccccccc::ccccccc:;;;;;;,,,'......'...',,,,,,,'''.....     ...........    //\n//    llllllllllllllooooooodddddl;'..........        . ..;lodddddddoooooolllllllcccccccccc:::;;;;:::::::::::::c:::cccc:ccccccccclcc::::::;;::::ccccc:::::;;;;;;,,,,'......'....',,,,,,,,'.....................    //\n//    llllllllllllloooooooooooooc,''........       .;;,....'codddddddoooooolllllccclllccccc:::::::cccc::ccc:::::::ccc:ccccccc::cccc:::::::::cc:::::;;;;;;;;;;;,,,,,'.......''...';;;;;;;,''.........   .......    //\n//    lllllllllllllooooooooddddoc,''........      .:oolc;;,,,:odddddoooooollllllcccllllllccccc:ccccccc::c:cc:::ccccc::clccccc::ccc:;;,,;;;;:ccc:::;::;;;;;;;;;;,,,,,'......'''...';::::;;;,,,'...    .........    //\n//    lllllllllllllllooooooooooo:'''.......      .;oddooc:cooloddddooooooollllllllloolllllllcccccccc:;,,;:ccc:::ccccccclcccccccccc:;;;;:::cccccc::::::::;;;;;;;;;,;,'.......''....';:::;;;,,,'.....  ......'''    //\n//    lllllllllllllllloooooooool;''.......       ,ooc:lllc;:odddddddoooodoollllloooooollcccclllccccc:;:;:cccccccccccccllc:::cc:::::;::ccccccccccccccc:::;;;;;;;;,;;,'''..''',,''...';:;;;,,,',''.'..........''    //\n//    lllllllllllllllllcccccc::;''........      .lo,.:c;,:c:lddddddddooddollooodddooool:;:;;llllllc::::;:clcccccccccccccccccccccc::::cccccccccc::::::::::;;::::;;;;;;;;;;;,,''......';::;;;,,,'''''........'''    //\n//    ccllllllllllllllllcc::;;,'.........      .;do;;olc;:cloooodddddddddooooddddddoolcc:ccclllll:;;::::clllc::ccc:::ccccc:::::::::::::::::ccc:::;::::::::::::::::::;;;;;;,,'.......';::;;;,,,''.''.   ...''''    //\n//    cccllllllllllllooooollc::;,,..           .ldl;col:,:odddddddddddoodddoooddddol:cccccoolllcc::cc::cllllc::::cc::ccccc::::::::::;::;;;;:cc::;;;:;;;;;::;;;;;;::;;,,,,,''''.......,::;;,,,,''''''.....'''..    //\n//    ccccllllclllllllllollooll::;'..          .:c:,''..,ldxxdddddxddooddxdolodddo:,,::c:;colc::;:cllllloollc::::::::cccccc:::::::::::::::::ccc::::::;;:::;;,,'',,,;;,,,;;,,,,'.......;:;;,,,''..  ....'''''..    //\n//    cccllllllllllllllllcc:cclllc:;,'....     .........;oxxdddddddddoodxxdlloddo:,;:;;cl:;cl:;:::llllllllllc::ccllllllllllccccccc:::::::::ccc::::::::::::;;;,'''...',,,,;;,,,''''....,;:;;;,,'...... ..''''''    //\n//    cccllllllllllllllllllc;::cccccc::::,.. ..,'.......'ldddddddxdddoodddoooddo:,:c,;l:;c:,;coolllccclooooolclloooooolllllllccccc:;;;;;;;;;:::::;;;;::::::;;;,,,'''''''''',,,,,,,'...'::::::;;;;,'...........    //\n//    clllllllllllllllllllll:,,,;:cllllll;...;llllc;,'...,oddddddddddooddddooool;:o:.;l:.,cclodddooolllllllloooooooolllccccc::::::;;,,,;;;;;:::::::::::::::;;;;,,'.',,''.....''',''...,:cccccc::;'.... ..'''''    //\n//    llllllllllcc:::cccccccc;,...'cooool;',clollllllcc:;;:llooolccllooddddddodc:od;'cl,.,:cdddddolcccllllllcccccccc:::::::::;;;;;;;;,;;;:ccccccc:::::::::::;;;;,'',,,,''........'.'',::ccc::::::;,,'...,,,,''    //\n//    cllcllllcccc:::::::;:::::;,,coooolc,,cllllc:::;;:cccccccccccc::coddddddddl:lc;:l;'';lollodddoooolcccccccccllllllcccccccc:::::::;;;;:ccccccc::::::cc:::;;;;;;;,,,,,,'.........';::cccc::::;'......',;,'''    //\n//    clc:cccllllllccclllllllclloodddo:....;llc:,'.....',coooollloollccllooollooc:;:c;,:lolcclodddolcccloodddddooooooooolllllccccccc::::::ccccccc:::::::cc::;;;,;;;;,,'',,,,'....  .,:ccccc::::;,'....',;;,,''    //\n//    cllllllllllllllllllllollloddddxo'....:xxxxol::;;,'',clccccccccc::cccccc:cllc:cccloooloddolc::clodddddddddddddddoolllcllccccccc:;;;;;;::cccc::;;::cc::::;;;;;;:::;;;;;;;,;,...  .,:::;;;::;,'''',;;;;,,''    //\n//    llllllloooolllcclllloolllloddddo;....cxxxxxxddol:;'',:ccccccccc:ccllllllllllooooooooolcc::clodddxxxxxxxxxddddddooolllllllclllc:;;;;:::ccclcc::::ccccc:::::::::::;;:;;;;;;;;,..  ..,;;;;::;,,,'''',;,,,''    //\n//    llllllooolllllllllooooooooodddddol,.'oxkxdlc:;;,''...:odddddddddooodddoooodddollccccccclodxxxxxxxxxxxxxdddddddooooooolllloooollccllccccccllcccccccccccccccc:::::::::;;;;;;,,''.....::::::;;;,,,,,,,,,,''    //\n//    llllllllllllllllllooooooooolc:;;;;;',cllc;'..........;oxdddddddddxxxxxxxxxxxxdddooodddddddxxxddddddddddddoooooooooooolllooooolcccccccccccccc::;;:cccc:;::::::::::::::::::::;;;,....':ccc:::::::;',,;;,,,    //\n//    lllllllcclllllllllloooooollol:'............',;;;,'...;oxxxxxxxxxxxxxxxxxxxxxxdddddddooddddxxxddddddddddddooooooooooollllllllll::cccccc::ccc::;;;:ccc::;;,,;;;::;;,,,;;::cc::::;','..':cc:::::::;,,,;;;,,    //\n//    lllc:::::cccllllllloooolcloooooc;........  ...',;;,',codddddddddddoooooddddddooddddddddddxxxdddddddddddddooooooooooolllllcccllc:c:::::;:cccc:;:;:cccc:::;;;:::::;;;;,;;:::;;;;;,,'. .';::::::::;,,;;;:;;    //\n//    clcccccc:cllllllooolooollloooolc;'...,:,...............',,;;coddddoooooddddddddddddddddxxxxxdddddddddddddddddooooooolllllllllolccc::::::cccc::c::ccccc::::::::::::;;;;:::;;;;;;,'..  .';:c::c:::;,;;::::    //\n//    llllllccc::cllcloooooooddddddoool:,,:oo:......... ..........,ldxxdddddddddddddddddxxxxddddddddddddddddddddddddooooooollllllllllccccc:::ccccccccc:ccccc:;;;;;:;;;;;;;,;:::::;;,'.....  .,:c::::::;,,;::::    //\n//    lllllllccc::cc:ccloooddddolcccccccloddo;..................',cdxxxxddxxxxxxxxxxxxxxxxxxxxxxxxdddddddddddddddddddooooooooolllllllllllcccccllccccccccccc:::;;;;;;;;;,,,,;::::::;'''........;cccccc:;,,;::c:    //\n//    llooooollcllccc::clloool:;,,:oooddddddo:...............',;::looddoddddddddddddddddoooddddddxxdddxxxxxxxxxxxxdddddooooooollllooollllllccllllllccllclcccc:;,',,,;;;,'',;::::::;;,,'''.....':ccccc:;;;:::::    //\n//    lllooooooolllccccc::cc;'',codl;',clolll:,'''.....'',;,;:cccllloodddddddddddxxxdddoooddddddxxxxxxkkkxxxxxxxxxxxdddddddoooooooooollllllllllollllllllllcccccc::;;;;;,,,;;::c:::;,,;:;;,.....,ccccc:::::::::    //\n//    lllloooooollc:::ccc:;'.':oooool:,'';;;;:ccc:;,'',:loddooooooooooddxxxxxxxxxxxxxxxxxxxxddxxxxxxxxxxxddddddddddddoooodooooooooooollllllllllllllllllllllcccc:;,'';:;,',,,;::::;;;::::;;,.....:ccccc:::::cc:    //\n//    ccccllolllooollccccc:,',ldl,,cddolc:;'';::;,'.':ldxdxxdxxxxxxxddxxxxxxxxxddddddxxxxxxxxxxxxxxxdddddddddooooooooooooooooooooooolllllllllllllcccccclllllccc:;,,;:::;;;,',;::::ccc:::;;;,....;cccccccccccc:    //\n//    cccclllllloooddoollc;,',:loc;,,,:odc'.......'coddddooodddxxxxxxxxxxxxxxxdddddxxxddddddddddddddddoooooooooooooooooooooooooooooollllllllllllcc:::;:llllcccccc::::c:,,,;:::::ccllccc::::;'...,clcccccclllc:    //\n//    llllllollloddddddoc;''''.':lol,..';'..''....:dxxxxddddddxxxxxxxxxddddddddooodddddoooodddddddddddddddddoooodddooooooooooooooooollllllllcclccc::c::cllllccccccc:;:::::;;::cclllllllcccc:,...,cllllllllllc:    //\n//    lllllloollooodoo:,''.'''...,:c,',,',;::,....':oxxxxxxxxxxxxkkkkkkxddddddddddddxxddddddxxxxxxxxxxxxxxddddddddooooollllllllllllllllccccccclccccccccllllllcclllc:;,,;::;;:::llollllllccc;'...;llllllloollc:    //\n//    llllllllllooool:,',;'',,'....'.,clllc;'.......,cdxxxxxdddddxxxxxxxdddddxddooddxxxxxxxxkkkkkkkkkkxxxddddoooooollooooolllllllllcccc:::cccllccccccccllllccclllcc;;,,;:cccc:cloooollllccc:'...:lllllllllllc:    //\n//    llllclllc::cllc;,;c:,.,;;'....''..........,,..'';oxxxxxxxxxxxddddddxdxxxxdddxxxxxxxxxkkkkkkkkkkkxddoooollloolllloolllllllllccccccccccccllccccccccllllccccc:::;;,,,;:ccccclloollllcccc;...,cllllllllllcc:    //\n//    llccccc;;;:clc;,,;cc,.'::;'..,:;......''',::'';,',cdxxxxxxxxxdddddddddddddddddddooooodddxxxxxxxxxxddddoooooooooollllllllcccllllllccccccllcc::cc:;:lllccccc:::ccc:,,:clllllllllcc::cc:,...;llllllllllllc:    //\n//    lccc;,,;:ccll:,,,:c:,.':c;'.'':c,.....;,';c:'.,:;,';ldxxddddoooooddddooooooooodolcccclooooodddxxddddddoooooooooooooolllllllllllllllcccclc:;;;:c:;;ccc:::ccccccccc::clllllclllllc::cc:'..,cllllllllllllc:    //\n//    cc:;,:cllcll:,,,;cc;'.':c:,''.':c,...';;',::,'',;''',cdxxxxxxxdddxxxdxddddddddddoooooodooodxxxxxxdddddooollllccccllllllcclloollllllcccllc;,;,;:;,;ccc:;,,;:cc::cclllllllcccllllccccc;'..;lllllllllllllcc    //\n//    c:,;clllc:cc;,,,:cl;'.';cc;,,'.;lc;...,:,,:c;;;',;,,,;lddxxxxxxxxxxxxxxxkxkkkkkxxkkkkkkkkkkkkkkxxdoooolllllcc:::ccccccccclodooolllllllllc:;;;;:;,;ccc::;;;;:::::clllllllccccllc::cc:,..,clllllllllllllcc    //\n//    ;'':lllc::cc,'',:lc,'''':cc;,'.',,,...,:,';c:,;;'',;,,,cllllooddddddddoooooooddddddddddddxxxxxddoolllllllllccccclllllllloodddoollllcclll:;;;,;:,',:cc:;;;,,:c:;:clllllllcccllc::::;,..':llllllllllllllcc    //\n//    ..'cllc:;:cc;',;cc:;,''',cc;'',:,.','.,:;',cl;';;'',;;,;:ccclloodddddolllllllodolllllloooooooooooooooooooooolooooooooollllooooolllllclllccc::::;,;:ccccc::::::;:clllllllccccccccc:'..':lllllllllllllllcc    //\n//    ..,llc:clllc,',;ccclc,,,,:cc,'';:'.,;,,::'';lc,':;'',;:::loloodddddddoooollloodoooooooooodddddddddddddddddddooooooooooooooooolllllllccclc::;,;:;,;:ccc:::,;:::;:clllllllcccccccc:,...:lollllllllllllllcc    //\n//    '.:cc::llol:,',:::col;,;,;cc:,.';;'...,::,''co:',:;';;,:lolloodxddddooooooooooddddddddddddxdddddddddddddddddoollllllllllooooolllllllccccccc::cc;',:cccccc::c:;;;:cllllllcccccc:;'..':looolllllllllllllcc    //\n//    ',clccllool:,',:;:lol:,;,,:cc;'.':l:'.';::,';ll;,:;',;,;loooooddddddoooddddddxxddxxxkxxxxkxxxxdddddoooddddddddoooooodddddddddoooooolllccccc::cc;,,:cccccccc::;;;:cllcccccccccc:,..,cloooollllllllllllllc    //\n//    ':llllooool;',;;;cool:,:;,;cl:'..;cl;.,;;::,;loc,;c,';;;coddddddxxxdddxxxxxxxxxddxkOOOkkkkkkkkkkkkkkkkkkkkkxxxxxxxxxxxxxxxdddddddolllllllllccccc:cclcccccc:::;:::ccccc:::ccccc;..;cooollllllllllllllllcc    //\n//    ,clcclooooc;,;c:;coool:::,;clc,'..,::,,:;,:;,col;,:c,';;;cloooddddoooooooooooooooddddddddxxxxxxxxxkkkkkkkkkkxxxxxxxxxxxxddddddooollllllllllcccccccccccccccc::;;::ccccc::cccc:;'';looooolllllllllllllllcc    //\n//    ,llllloool:,;:l:,:odoolc:;;cc;,,'..,:;';:;,,,coo:,;c:',;:;;::cloooooolloooooooooooloooooooddddddoddxxxxxxxxddddddddddddoooooooooollllclllllllllcccccccccllcccc::cccccc:::::;,'':lollllllllllllllllllllcc    //\n//    :llloooooc;,;clc;;loooc::;:c;,,::'.';:'',c:'';loc,,cl;,,;:;;::ccllccclooddddddddddddxxxxxxxxxxddodxxxxxddddddddoooooooooooooooooollllllcccccclcc::;:cccccccc:;;:ccccc:::;,'..,clllllllllllccccclllllllcc    //\n//    clllooool:,,:clc:;:looc::;;;;,,:c,..,:;,';c;',:oo:,:lc;,,::;;:ccllc;;cloooooooooooooddooddddddolloddddddooooooollllooooooooooooooollllcc::cllllcc::ccllllccc:;;:ccc:::;;'..';cllllllllllllccccccccclllcc    //\n//    ccclllllc,',:lllc::clllc:;;;;;;''...':c;''::,,;loc;;;cc;,,::;;cllllccoddxxxxxxxdddddddoooddddoollooddddooooooollllllollloolllllollllcccccclllllllllllllllcc::::::::;;,'..';clllllllllllllcccccccccccllcc    //\n//    ,;::clcc;'',:cllllllloolc:;;;::;;'...,::,.,c;';coc:c:;cc:;;cc:lollloollooddxxxxxxxxxxxxxxxxxxxxxxxxxxxxxdddddddoooooooooooooooooollcccccclloollccccccllllcc:::::::;,'..,;clllllllllllllllcccc:ccccccllcc    //\n//    ::cclll:,',;:lc:cllooollc:;:cc:::;'';;:c;'':;',coc;cl:;clc::cc;,:ldddddooolooddxxxxxxxxxxddddddddddddddddddddddddoddddddoddddddooolllllllloollc:::::cllllccc:::;,'..',:cllloololllllllllllccccccccccclcc    //\n//    ;:cllll:,,;;clc;;::cllllc:::::;;::,';::c:,.;:,,:ooc:ll:;cllcc:,;lxxxdooodddooooodddxxxxxxxxxxddddddooooooooooolllllllllllloddddddooooollllolllc:ccccclcccc:;;,'...,;:ccccclllllllllccllllcccccc:::::cccc    //\n//    :cllllc;,;:cclc;;,,;cllllc:;,;:cl:'.';::c;.,:;,:odl:col::cloolc:cdxxxoc:cldddddddddxxxxxxxxxxxxxxxxxxxxdddddoooolooolllllloddddooolllllllllllllcccclcc:;,,'...',;cllc::;,,:clllclllllllllcccccc::::::ccc    //\n//    :cllll:,;:clllc;::::cllllc:;,,::c;'....;c:''::,;ldo::loc:cclodolclodxxxddxxkkxxdddxdddddoooddxxxxxxxxxxxxxxxxxxxdddddddoooooooooollclllllllllllccc:;,''...',;;:clllc:;;;,,;:cc:::ccclllllccccccc:::::ccc    //\n//    :clllc;;:cclllc::::cllllc:;;;;:::,..,;,,cc'.;:,;ldoc:lol:cl:codddlclodxxxxxxdoodxxxdoooooolloodddxxxkxxxxxxxxxxxdddddddooooooooooolllllllllcc:;;;;;;;;;::::::::cccc:;;;;,',;,'',:::ccclllcccccccc:::::cc    //\n//    :llll:,;:clllcc:;;;:clllcc;,,,;:c,....',cc,.;:,;oddlclll::lc;:codddolodxxdolloxkkkxddooooolooddollodxxdddddddddddoooooooooollllllcc:::::;;;;;;;::cccccccc:;;;;:cccc;,,,,,.''......,;:cccccccccc:::::::cc    //\n//    clllc;,:cllolccc:::ccllllc;',;ccc,.....:lc,';,':ddollc;cc,:l:'';coddolccc:codkkkkkkkxdxkkkkxxxxdddddddddoolllllllllllllclcccccccc::::::ccccllllccccccc::c:;,,;::cc:;;;,,'.........,;;:ccccccccc::::::::c    //\n//    clll:;:clooooooooooooooooc;;;;;;;,''..;loc:;,',lddolc,,cc;,cl:'',::,;c:;:cloxOOOOOOkkxdoloooolcclloddxxxddddddooooooooooooooooollllllloooolllllccccccc::cc:;;::cc;,,,,'..... ..,::ccc::cccccc:::::::::::    //\n//    lllc;;cllooooooooooooooolc;,'..';,.',:llc:;,'':loool;,;;;;,,::,,;:;..',;ccclxkOOOOOOkkxxxxkkxdoddddddxxxxdxxxxxxxxxxxddddddddoooollllooooooolllllllcccccc::::::::,.'','....  .,:::ccc::::c::::::::::::::    //\n//    lllc;:lloolcccc::ccllollc;'',;::,.';::cl;'',;;,;ldl;,;;.',,,,'';;'.....'';okkkkkkkxxxxxxxxxdoooolllodxxxxxdxxxxxxxxddddooooolllllllllllllllcccccccc:::::;;;;;,,,,'......... ..;::cccc:;,;:::::::::::::::    //\n//    ool::clllllccc:cccclllllc:,;;:;'.,;,,:c;',cc;',loc;,;;''''',;,...........,cokkkkkxxxxxxkkkkxxddddddxxxxxdllooooddddddoollcccccllcc:::::::::::;;::::::;:::;;;;;;;;'.'....... ..;ccccccc:;::::::::::::::::    //\n//    oolcccllllllllllllllllool::cc:',;;',::;,clc,';lo:,;c:'','.';;;,...........';okkkxxxkkkkkkkkkkkkxxxxxxxxoclodolcc                                                                                            //\n//                                                                                                                                                                                                                //\n//                                                                                                                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\ncontract FABU is ERC721Creator {\n    constructor() ERC721Creator(\"Fabula Photography\", \"FABU\") {}\n}\n"

    },

    "contracts/ERC721Creator.sol": {

      "content": "\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\ncontract ERC721Creator is Proxy {\n    \n    constructor(string memory name, string memory symbol) {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a;\n        Address.functionDelegateCall(\n            0xe4E4003afE3765Aca8149a82fc064C0b125B9e5a,\n            abi.encodeWithSignature(\"initialize(string,string)\", name, symbol)\n        );\n    }\n        \n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n     function implementation() public view returns (address) {\n        return _implementation();\n    }\n\n    function _implementation() internal override view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }    \n\n}\n"

    },

    "@openzeppelin/contracts/proxy/Proxy.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internall call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internall call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overriden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"

    },

    "@openzeppelin/contracts/utils/Address.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"

    },

    "@openzeppelin/contracts/utils/StorageSlot.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"

    }

  },

  "settings": {

    "optimizer": {

      "enabled": true,

      "runs": 300

    },

    "outputSelection": {

      "*": {

        "*": [

          "evm.bytecode",

          "evm.deployedBytecode",

          "devdoc",

          "userdoc",

          "metadata",

          "abi"

        ]

      }

    },

    "libraries": {}

  }

}}