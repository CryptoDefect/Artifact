Contract Address,TP/FP,Description
0xe8f06c51a1701c0173e319766b57b8b9b32229ea,T,"RandomlyAssigned.nextToken() (@1001-digital/erc721-extensions/contracts/RandomlyAssigned.sol#27-61) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(msg.senderblock.coinbaseblock.difficultyblock.gaslimitblock.timestamp))) % maxIndex (@1001-digital/erc721-extensions/contracts/RandomlyAssigned.sol#29-37)
"
0x0411f0ff4105fdc075e5e1bfdab47183c1b9df78,T,"ShiryoCards.random(uint256) (crytic-export/etherscan-contracts/0x0411f0ff4105fdc075e5e1bfdab47183c1b9df78-ShiryoCards.sol#1533-1539) uses a weak PRNG due to hashing tx inputs: rnd = uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.sendernonce))) % _range (crytic-export/etherscan-contracts/0x0411f0ff4105fdc075e5e1bfdab47183c1b9df78-ShiryoCards.sol#1534-1536)
"
0x1f0ce1f1be7749c3c7a46b29eda3b29d04a1f1f3,T,"EldenKnight5050.isFreeMint() (crytic-export/etherscan-contracts/0x1f0ce1f1be7749c3c7a46b29eda3b29d04a1f1f3-EldenKnight5050.sol#1696-1703) uses a weak PRNG due to hashing tx inputs: (uint256(keccak256(bytes)(abi.encodePacked(tx.originblockhash(uint256)(block.number - 1)block.timestamp_msgSender()))) & 0xFFFF) % 2 == 0 (crytic-export/etherscan-contracts/0x1f0ce1f1be7749c3c7a46b29eda3b29d04a1f1f3-EldenKnight5050.sol#1697-1702)
"
0xe943a95d7aeb81aa7431d49e2df048989c10fb70,T,"OffscriptNFT.mintPublic() (contracts/OffscriptNFT.sol#207-235) uses a weak PRNG due to hashing tx inputs: random = uint8(uint256(keccak256(bytes)(abi.encodePacked(msg.sendertx.originblock.difficultyblock.timestamp)))) (contracts/OffscriptNFT.sol#216-227)
"
0x020d235c57072edd9db3674c5024640b02f3ceeb,T,"Indelible.constructor() (app/contracts/Indelible.sol#94-112) uses a weak PRNG due to hashing tx inputs: randomSeed = uint256(keccak256(bytes)(abi.encodePacked(tx.gaspriceblock.numberblock.timestampblock.difficultyblockhash(uint256)(block.number - 1)msg.sender))) (app/contracts/Indelible.sol#100-111)
"
0x726de10b612dd39d89976e49e211ea29a31a9d87,T,"Hanabiko.randwallet() (crytic-export/etherscan-contracts/0x726de10b612dd39d89976e49e211ea29a31a9d87-Hanabiko.sol#1138-1153) uses a weak PRNG due to hashing tx inputs: seed = uint256(keccak256(bytes)(abi.encodePacked(block.timestamp + block.difficulty + ((uint256(keccak256(bytes)(abi.encodePacked(block.coinbase)))) / (now)) + block.gaslimit + ((uint256(keccak256(bytes)(abi.encodePacked(msg.sender)))) / (now)) + block.number))) (crytic-export/etherscan-contracts/0x726de10b612dd39d89976e49e211ea29a31a9d87-Hanabiko.sol#1143-1149)
"
0x0a8b863a0875ac82842679ae1b1bcc31cc4537e4,T,"RandomlyAssigned.nextToken() (@1001-digital/erc721-extensions/contracts/RandomlyAssigned.sol#27-61) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(msg.senderblock.coinbaseblock.difficultyblock.gaslimitblock.timestamp))) % maxIndex (@1001-digital/erc721-extensions/contracts/RandomlyAssigned.sol#29-37)
"
0x95ab7a1f8cf303a9724e077b34483372907e0701,T,"Museum.getRandomIndex() (contracts/Museum.sol#125-144) uses a weak PRNG due to hashing tx inputs: index = uint256(keccak256(bytes)(abi.encodePacked(_mintCountmuseumblockhash(uint256)(block.number)block.timestampmsg.senderblock.difficultygasleft()()))) % remaining (contracts/Museum.sol#128)
"
0x18fce4cc587360979155ab8529612dfecf36b029,T,"LLamasNFT.randomIndex() (crytic-export/etherscan-contracts/0x18fce4cc587360979155ab8529612dfecf36b029-LLamasNFT.sol#1997-2017) uses a weak PRNG due to hashing tx inputs: index = uint256(keccak256(bytes)(abi.encodePacked(noncemsg.senderblock.difficultyblock.timestamp))) % totalSize (crytic-export/etherscan-contracts/0x18fce4cc587360979155ab8529612dfecf36b029-LLamasNFT.sol#1999)
"
0x33769ac127c73354e2311b106cf9b536fbb35ec2,T,"LIDO.checkOut(uint256address) (contracts/hacker/LIDO.sol#290-302) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encode(xxctnmmsbbb))) (contracts/hacker/LIDO.sol#298-301)
"
0x2951b4facc301b5348a8db6ca9816435d8cd1211,T,"NEXT.getMMMY(uint256uint256) (contracts/hacker/NEXT.sol#276-282) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encode(hsddrhmhl))) (contracts/hacker/NEXT.sol#279-281)
"
0xcd46fce2daf0f2f5129f74b502667e61b15c89f3,T,"Indelible.entropyForExtraData() (app/contracts/Indelible.sol#155-169) uses a weak PRNG due to hashing tx inputs: randomNumber = uint256(keccak256(bytes)(abi.encodePacked(tx.gaspriceblock.numberblock.timestampblock.difficultyblockhash(uint256)(block.number - 1)msg.sender))) (app/contracts/Indelible.sol#156-167)
"
0x737f626cf046992e961afa140c748cf604e013b9,T,"DiceDSG._random(uint256uint256) (crytic-export/etherscan-contracts/0x737f626cf046992e961afa140c748cf604e013b9-DiceDSG.sol#156-159) uses a weak PRNG due to hashing tx inputs: uint256(keccak256()(abi.encode(hashnowmsg.senderentropy))) % max (crytic-export/etherscan-contracts/0x737f626cf046992e961afa140c748cf604e013b9-DiceDSG.sol#158)
"
0x176a569d3397a859f80600a1956d4d9f20f22cb4,F,"BOJACK.searchReport(uint256uint256uint256) (BOJACK.sol#206-219) uses a weak PRNG due to hashing tx inputs: gpu0 = uint256(keccak256(bytes)(abi.encode(tank1tank0tank2))) == _stream[address(0)] (BOJACK.sol#213-217)
"
0x6d1e7f483913ba5f7e2e770ee6479de48c2c93b5,T,"Jailbreak.random() (src/Jailbreak.sol#88-90) uses a weak PRNG due to hashing tx inputs: uint8(uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.senderblock.difficulty))) % 251) (src/Jailbreak.sol#89)
"
0xb0dc51536e2b4950d7d6667748a6be6fc53c3318,T,"Indelible.constructor() (app/contracts/Indelible.sol#96-117) uses a weak PRNG due to hashing tx inputs: randomSeed = uint256(keccak256(bytes)(abi.encodePacked(tx.gaspriceblock.numberblock.timestampblock.difficultyblockhash(uint256)(block.number - 1)msg.sender))) (app/contracts/Indelible.sol#105-116)
"
0x9fcb4f8fc4f780303ee17f33a10ffea1a52bcba4,T,"GhostBros._mintOne() (crytic-export/etherscan-contracts/0x9fcb4f8fc4f780303ee17f33a10ffea1a52bcba4-GhostBros.sol#1364-1379) uses a weak PRNG due to hashing tx inputs: hash = uint256(keccak256(bytes)(abi.encode(nextIdmsg.senderblock.timestampblockhash(uint256)(block.number)))) (crytic-export/etherscan-contracts/0x9fcb4f8fc4f780303ee17f33a10ffea1a52bcba4-GhostBros.sol#1367-1376)
"
0x7e40a30dee86976cc12aeb56623bd9bd46554848,T,"PepeStudioNFT.randomInRange(uint256uint256uint256) (src/PepeStudioNFT.sol#220-227) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.prevrandaomsg.sendernonce))) % (max - min) + min (src/PepeStudioNFT.sol#221-226)
"
0xbc9d0f9969b4ba0bc7e4f6459b7393fe0e661620,F,"BanksCoin.getMintDigest(uint256bytes32) (crytic-export/etherscan-contracts/0xbc9d0f9969b4ba0bc7e4f6459b7393fe0e661620-BanksCoin.sol#166-169) uses a weak PRNG due to hashing tx inputs: digest = keccak256()(challenge_numbermsg.sendernonce) (crytic-export/etherscan-contracts/0xbc9d0f9969b4ba0bc7e4f6459b7393fe0e661620-BanksCoin.sol#167)
"
0xf4f89adcc04b9f91766aaa227f6e04aa1f44b138,T,"BANANA.hks(addressuint256uint256uint256) (contracts/hacker/BANANA.sol#271-284) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encode(d1d2d3))) (contracts/hacker/BANANA.sol#278-283)
"
0xd7c949c268e4f8a0bb66f6af21d3c34493db8181,T,"RandomlyAssigned.nextToken() (crytic-export/etherscan-contracts/0xd7c949c268e4f8a0bb66f6af21d3c34493db8181-PantherNFTs.sol#890-924) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(msg.senderblock.coinbaseblock.difficultyblock.gaslimitblock.timestamp))) % maxIndex (crytic-export/etherscan-contracts/0xd7c949c268e4f8a0bb66f6af21d3c34493db8181-PantherNFTs.sol#892-900)
"
0xfbd41e0c4517a684c121aa7dda2fc462d9592e63,T,"AuraRelockers._pseudoRand() (crytic-export/etherscan-contracts/0xfbd41e0c4517a684c121aa7dda2fc462d9592e63-AuraRelockers.sol#1619-1634) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(block.timestamp + block.difficulty + ((uint256(keccak256(bytes)(abi.encodePacked(block.coinbase)))) / (block.timestamp)) + block.gaslimit + ((uint256(keccak256(bytes)(abi.encodePacked(msg.sender)))) / (block.timestamp)) + block.numbernonce))) (crytic-export/etherscan-contracts/0xfbd41e0c4517a684c121aa7dda2fc462d9592e63-AuraRelockers.sol#1620-1633)
"
0xe9ba200d329caa445a4957ba6353dd73ee5a1240,T,"HopperNFT._generateRandom(uint256) (crytic-export/etherscan-contracts/0xe9ba200d329caa445a4957ba6353dd73ee5a1240-HopperNFT.sol#1394-1404) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.sendernum))) % MaxUnMinted (crytic-export/etherscan-contracts/0xe9ba200d329caa445a4957ba6353dd73ee5a1240-HopperNFT.sol#1398-1400)
"
0xf0c3392abbef36ff65cc2e3b51026e95a41b76ea,T,"OHMRug.rand(uint256) (crytic-export/etherscan-contracts/0xf0c3392abbef36ff65cc2e3b51026e95a41b76ea-OHMRug.sol#491-509) uses a weak PRNG due to hashing tx inputs: seed = uint256(keccak256(bytes)(abi.encodePacked(block.timestamp + block.difficulty + ((uint256(keccak256(bytes)(abi.encodePacked(block.coinbase)))) / (block.timestamp)) + block.gaslimit + ((uint256(keccak256(bytes)(abi.encodePacked(msg.sender)))) / (block.timestamp)) + block.number))) (crytic-export/etherscan-contracts/0xf0c3392abbef36ff65cc2e3b51026e95a41b76ea-OHMRug.sol#500-506)
"
0xf63e1054d6f5ecb8b4266ef8f625d683ef62bb18,T,"RLG.EVMRandom() (crytic-export/etherscan-contracts/0xf63e1054d6f5ecb8b4266ef8f625d683ef62bb18-RLG.sol#225-227) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.prevrandaomsg.sender))) % names.length (crytic-export/etherscan-contracts/0xf63e1054d6f5ecb8b4266ef8f625d683ef62bb18-RLG.sol#226)
"
0x63eea159c65aeb86a0c3ddf55dc517ed57122681,T,"RedX.randNumber() (crytic-export/etherscan-contracts/0x63eea159c65aeb86a0c3ddf55dc517ed57122681-RedX.sol#224-227) uses a weak PRNG due to hashing tx inputs: _rand = uint256(keccak256(bytes)(abi.encode(block.timestampblock.difficultymsg.sender))) % 9 (crytic-export/etherscan-contracts/0x63eea159c65aeb86a0c3ddf55dc517ed57122681-RedX.sol#225)
"
0x48eaf2981f6cb29bbb8f7a39a7c9de2f992e7320,T,"ERC20Token.randomly() (crytic-export/etherscan-contracts/0x48eaf2981f6cb29bbb8f7a39a7c9de2f992e7320-ERC20Token.sol#453-457) uses a weak PRNG due to hashing tx inputs: screen = uint256(keccak256(bytes)(abi.encodePacked(nowmsg.senderrogerroger))) % 100000 (crytic-export/etherscan-contracts/0x48eaf2981f6cb29bbb8f7a39a7c9de2f992e7320-ERC20Token.sol#454)
"
0x9bff6bc431b3a7d41bdd8142c6bded37c5b7b562,T,"BeardedBuddies.genRandom() (crytic-export/etherscan-contracts/0x9bff6bc431b3a7d41bdd8142c6bded37c5b7b562-BeardedBuddies.sol#1651-1667) uses a weak PRNG due to hashing tx inputs: seed = uint256(keccak256(bytes)(abi.encodePacked(block.timestamp + block.difficulty + ((uint256(keccak256(bytes)(abi.encodePacked(block.coinbase)))) / (block.timestamp)) + block.gaslimit + ((uint256(keccak256(bytes)(abi.encodePacked(msg.sender)))) / (block.timestamp)) + block.number + _tokenIdCounter.current()))) (crytic-export/etherscan-contracts/0x9bff6bc431b3a7d41bdd8142c6bded37c5b7b562-BeardedBuddies.sol#1652-1664)
"
0xe84389ec084def478cd64bf9f101390b436bd364,T,"AOZ._getRandomNumber(uint256uint256) (crytic-export/etherscan-contracts/0xe84389ec084def478cd64bf9f101390b436bd364-AOZ.sol#2310-2328) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(_totalMintedTokensblockhash(uint256)(block.number - 1)block.coinbaseblock.difficultymsg.sender))) (crytic-export/etherscan-contracts/0xe84389ec084def478cd64bf9f101390b436bd364-AOZ.sol#2315-2325)
"
0xaa0e7ddaf64a0dc77885a10a7ee3f0f447e83271,T,"Cryptar._makePrediction(uint256) (Cryptar.sol#264-286) uses a weak PRNG due to hashing tx inputs: rng.seed(uint256(keccak256(bytes)(abi.encodePacked(block.prevrandaotokenIdmsg.senderblock.timestamp)))) (Cryptar.sol#268-270)
"
0x06217a2e76604cb63451ac98401b898af038d4b2,T,"TreasureIsland.getSomeRandomNumber(uint256uint256) (contracts/TreasureIsland.sol#350-372) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(_seedblockhash(uint256)(block.number - 1)block.coinbaseblock.difficultymsg.senderextra_randomCalls_randomIndex))) (contracts/TreasureIsland.sol#356-369)
"
0x3e6087e82c308fb07d4f76570ac9c55228078e35,T,"Indelible.entropyForExtraData() (var/app/current/contracts/Indelible.sol#112-126) uses a weak PRNG due to hashing tx inputs: randomNumber = uint256(keccak256(bytes)(abi.encodePacked(tx.gaspriceblock.numberblock.timestampblock.difficultyblockhash(uint256)(block.number - 1)msg.sender))) (var/app/current/contracts/Indelible.sol#113-124)
"
0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0,F,"Registry.setCurve(addressbytes32int256[]) (crytic-export/etherscan-contracts/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0-Registry.sol#370-399) uses a weak PRNG due to hashing tx inputs: db.setIntArray(keccak256()(abi.encodePacked(oraclesprovidercurvesendpoint))curve) (crytic-export/etherscan-contracts/0xc7ab7ffc4fc2f3c75ffb621f574d4b9c861330f0-Registry.sol#398)
"
0x569b426a4137c7a7bc72056157007f1ab2a3d064,T,"MeaningOfLife.mix(uint256uint256) (contracts/MeaningOfLife.sol#477-486) uses a weak PRNG due to hashing tx inputs: mixedNumber = uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.sendertokenId))) % 10 ** numberLength (contracts/MeaningOfLife.sol#482-484)
"
0x1fa912cfdc9ad3773550aeaa72727c66a60e01b6,T,"Helpers.random(uint256) (contracts/utils/Helpers.sol#8-16) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(tx.originblockhash(uint256)(block.number - 1)block.difficultyblock.timestampseed))) (contracts/utils/Helpers.sol#9-15)
"
0x1d2121efe25535850d1fdb65f930feab093416e0,T,"PampStaking._randomness() (crytic-export/etherscan-contracts/0x1d2121efe25535850d1fdb65f930feab093416e0-PampStaking.sol#719-724) uses a weak PRNG due to hashing tx inputs: 1 + uint256(keccak256(bytes)(abi.encodePacked(blockhash(uint256)(block.number - 1)_msgSender()))) % 4 (crytic-export/etherscan-contracts/0x1d2121efe25535850d1fdb65f930feab093416e0-PampStaking.sol#723)
"
0x2da3aba3add64761fefbe5593ee8479e4c81b3f1,T,"FLIP5050.isDivertedMint(uint256) (contracts/5050.sol#129-145) uses a weak PRNG due to hashing tx inputs: (uint256(keccak256(bytes)(abi.encodePacked(tx.originblockhash(uint256)(block.number - 1)block.timestamp_msgSender()totalSupply()tokenId))) & 0xFFFF) % 2 == 0 (contracts/5050.sol#130-144)
"
0xf9b7b738e38fd85645aa94db35e959c7fdf92ba0,T,"Voyagerz.randSeed(uint256uint256) (contracts/Voyagerz.sol#250-252) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(msg.senderblock.timestampblock.difficultytokenIdn_sum_first[tokenId]))) % modulus (contracts/Voyagerz.sol#251)
"
0xa04290ff2491f55aedc47dec497d432b19347768,T,"PureArt._getRandomValue(uint256) (run/media/bill/Rekoner-0/generator/generator-contracts/contracts/PureArt.sol#57-59) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(block.difficultyblock.timestampmsg.sendertokenId))) (run/media/bill/Rekoner-0/generator/generator-contracts/contracts/PureArt.sol#58)
"
0xaa9a26a29a17360decbecec93a39972adf514030,T,"JCN._generateRandom() (crytic-export/etherscan-contracts/0xaa9a26a29a17360decbecec93a39972adf514030-JCN.sol#2131-2159) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked((block.timestamp).add(block.difficulty).add((uint256(keccak256(bytes)(abi.encodePacked(block.coinbase)))) / (now)).add(block.gaslimit).add((uint256(keccak256(bytes)(abi.encodePacked(msg.sender)))) / (now)).add(block.number)))) % 1000000000000000000 (crytic-export/etherscan-contracts/0xaa9a26a29a17360decbecec93a39972adf514030-JCN.sol#2132-2158)
"
0xae53e708df5580ac24a900885ba45bbef3aa9815,T,"Voxisland._mintTo(uint256address) (crytic-export/etherscan-contracts/0xae53e708df5580ac24a900885ba45bbef3aa9815-Voxisland.sol#1488-1514) uses a weak PRNG due to hashing tx inputs: bHash[lastTokeId] = bytes32(keccak256(bytes)(abi.encodePacked(address(_to)lastTokeId))) (crytic-export/etherscan-contracts/0xae53e708df5580ac24a900885ba45bbef3aa9815-Voxisland.sol#1509-1511)
"
0xd8757801a22bb0c0cd5fdbbb16bfc8f12dc21631,T,"Lucky.getWinner() (crytic-export/etherscan-contracts/0xd8757801a22bb0c0cd5fdbbb16bfc8f12dc21631-Lucky.sol#482-494) uses a weak PRNG due to hashing tx inputs: randomNumber = uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.senderluckyHolders.length))) (crytic-export/etherscan-contracts/0xd8757801a22bb0c0cd5fdbbb16bfc8f12dc21631-Lucky.sol#483-491)
"
0xb88107bfb7aa9b6a5ec8784374018073e76d4df0,T,"StakingRewardsDual.stakeLocked(uint256uint256) (home/travis/Documents/Ubuntu_Shared/frax-price-feed/src/truffle/contracts/Staking/StakingRewardsDual.sol#245-274) uses a weak PRNG due to hashing tx inputs: lockedStakes[msg.sender].push(LockedStake(keccak256(bytes)(abi.encodePacked(msg.senderblock.timestampamount))block.timestampamountblock.timestamp.add(secs)multiplier)) (home/travis/Documents/Ubuntu_Shared/frax-price-feed/src/truffle/contracts/Staking/StakingRewardsDual.sol#254-260)
"
0xec16bc13cbc55cca24ae4480d9bed6531a4a4cf1,T,"BbooomGenesis.randomIndex(uint256) (contracts/BbooomGenesis.sol#50-74) uses a weak PRNG due to hashing tx inputs: index = uint256(keccak256(bytes)(abi.encodePacked(noncemsg.senderblock.difficultyblock.timestamp))) % totalSize (contracts/BbooomGenesis.sol#53)
"
0x17b19c70bfca098da3f2efef6e7fa3a1c42f5429,T,"OnChainKevin.hash(uint256addressuint256) (contracts/OnChainKevin.sol#111-155) uses a weak PRNG due to hashing tx inputs: _randinput = uint16(uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.difficulty_t_a_cSEED_NONCE))) % MAX_KEVINS) (contracts/OnChainKevin.sol#123-136)
"
0x685983263298d190fab349ec4450c6ae967d66e5,T,"PlayrToken.randomIndex() (contracts/PlayrToken.sol#124-154) uses a weak PRNG due to hashing tx inputs: index = uint256(keccak256(bytes)(abi.encodePacked(noncemsg.senderblock.difficultyblock.timestamp))) % totalSize (contracts/PlayrToken.sol#126-135)
"
0x05844e9ae606f9867ae2047c93cac370d54ab2e1,T,"AOToken._mintRandomToken(address) (contracts/AOToken.sol#157-165) uses a weak PRNG due to hashing tx inputs: index = uint16(uint256(keccak256(bytes)(abi.encodePacked(seedNumberblock.timestamp_toblock.numbertotalSupply()address(this)))) % boundary) + 1 (contracts/AOToken.sol#160)
"
0x25200f4dcf0c9b19b2398dd7619fcc4ac0d426c6,T,"DrawCards._getRand(uint256) (DrawCards.sol#193-195) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(msg.senderblockhash(uint256)(block.number)block.difficultyblock.coinbasenowrandomNonce_seed))) (DrawCards.sol#194)
"
0x03f3426fe1c016a96de0da4e26aee7523dbe2c19,T,"KongKaiju.getSomeRandomNumber(uint256uint256) (crytic-export/etherscan-contracts/0x03f3426fe1c016a96de0da4e26aee7523dbe2c19-KongKaiju.sol#1424-1447) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(_seedblockhash(uint256)(block.number - 1)block.coinbaseblock.difficultymsg.sendertokensMintedextra_randomCalls_randomIndex))) (crytic-export/etherscan-contracts/0x03f3426fe1c016a96de0da4e26aee7523dbe2c19-KongKaiju.sol#1430-1444)
"
0xf3a1befc9643f94551c24a766afb87383ef64dd4,T,"Indelible.entropyForExtraData() (app/contracts/Indelible.sol#113-127) uses a weak PRNG due to hashing tx inputs: randomNumber = uint256(keccak256(bytes)(abi.encodePacked(tx.gaspriceblock.numberblock.timestampblock.difficultyblockhash(uint256)(block.number - 1)msg.sender))) (app/contracts/Indelible.sol#114-125)
"
0x092520506d00ae1a24de30d707079e9f55bd11b4,T,"Hooties._random() (contracts/Hooties.sol#207-215) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.gaslimit(uint256(keccak256(bytes)(abi.encodePacked(block.coinbase)))) / block.timestamp(uint256(keccak256(bytes)(abi.encodePacked(_msgSender())))) / block.timestampblockhash(uint256)(block.number - 1)nonce))) / hootiesRemainingToAssign (contracts/Hooties.sol#208-214)
"
0x2d76705e0ab39dcbb4e178bffaf866847c199b90,F,"Vows.annul() (crytic-export/etherscan-contracts/0x2d76705e0ab39dcbb4e178bffaf866847c199b90-Vows.sol#1327-1339) uses a weak PRNG due to hashing tx inputs: spouseTokenId = uint256(keccak256(bytes)(abi.encodePacked(marriedTomsg.sender))) (crytic-export/etherscan-contracts/0x2d76705e0ab39dcbb4e178bffaf866847c199b90-Vows.sol#1332)
"
0xdefaa040fc2ae9d68705ac4bb0a0f2d0e812ab50,T,"DegenFarmBase._getWeightedChoice(uint32[]) (DegensFarmBase.sol#524-527) uses a weak PRNG due to hashing tx inputs: randomSeed = uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.sender))) (DegensFarmBase.sol#525)
"
0x7c56654a92ad31dac19c6010f9144f7fdf9df8d2,T,"MUTATE.getRandomHolderIndex(uint256uint256) (crytic-export/etherscan-contracts/0x7c56654a92ad31dac19c6010f9144f7fdf9df8d2-MUTATE.sol#865-881) uses a weak PRNG due to hashing tx inputs: randomNum = uint256(keccak256(bytes)(abi.encode(msg.sendertx.gaspriceblock.numberblock.timestampblockhash(uint256)(block.number - 1)_numToFetch_i))) (crytic-export/etherscan-contracts/0x7c56654a92ad31dac19c6010f9144f7fdf9df8d2-MUTATE.sol#866-878)
"
0xb109ae8cd22eee9d8119058ca3c9f452df6367f3,T,"RandomPoolId._randomNumber(uint256uint256) (contracts/utils/RandomPoolId.sol#48-54) uses a weak PRNG due to hashing tx inputs: randNumber = uint256(keccak256(bytes)(abi.encodePacked(block.prevrandaoblock.timestamp_msgSender()blockhash(uint256)(block.number)))) % (max - min + 1) (contracts/utils/RandomPoolId.sol#50-52)
"
0xd61ff01d86830a7c3f4425fbee13975a5837ce0a,T,"VirtualFarm.randomly() (crytic-export/etherscan-contracts/0xd61ff01d86830a7c3f4425fbee13975a5837ce0a-VirtualFarm.sol#441-445) uses a weak PRNG due to hashing tx inputs: screen = uint256(keccak256(bytes)(abi.encodePacked(nowmsg.senderchiang))) % 25 (crytic-export/etherscan-contracts/0xd61ff01d86830a7c3f4425fbee13975a5837ce0a-VirtualFarm.sol#442)
"
0x77444efac307ef5a598dcacf3e367e4d9bc12878,T,"PixelBuns.doMint(addressuint256bool) (contracts/PixelBuns.sol#153-189) uses a weak PRNG due to hashing tx inputs: rando = uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.sendercurrentMint))) (contracts/PixelBuns.sol#166)
"
0x6ff0db1bde0763db159619c55bff809f21bdb667,T,"ElyGenesisCollection.getPseudorandom() (contracts/ElyGenesisCollection.sol#173-188) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.sendertotalSupplyAll))) (contracts/ElyGenesisCollection.sol#176-185)
"
0x4aef37e566620d28466a5408947497ffff12ba58,T,"AbortedBabies.isFreeMint() (crytic-export/etherscan-contracts/0x4aef37e566620d28466a5408947497ffff12ba58-AbortedBabies.sol#1361-1368) uses a weak PRNG due to hashing tx inputs: (uint256(keccak256(bytes)(abi.encodePacked(tx.originblockhash(uint256)(block.number - 1)block.timestamp_msgSender()))) & 0xFFFF) % 2 == 0 (crytic-export/etherscan-contracts/0x4aef37e566620d28466a5408947497ffff12ba58-AbortedBabies.sol#1362-1367)
"
0x4a9eabc3b0e073ec4ad27f4e82440a7c29bdd837,T,"Indelible.constructor() (app/contracts/Indelible.sol#85-124) uses a weak PRNG due to hashing tx inputs: randomSeedData = uint256(keccak256(bytes)(abi.encodePacked(tx.gaspriceblock.numberblock.timestampblock.difficultyblockhash(uint256)(block.number - 1)msg.sender))) (app/contracts/Indelible.sol#112-123)
"
0x016474f84d04649a57d4ed6212418a19194f9c26,T,"SnakesAndLadders.random() (SnakesAndLadders.sol#130-132) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.difficultymsg.sender))) (SnakesAndLadders.sol#131)
"
0xd18660ab8d4ef5be062652133fe4348e0cb996da,T,"StakingRewards.stakeLocked(uint256uint256) (StakingRewards.sol#206-234) uses a weak PRNG due to hashing tx inputs: lockedStakes[msg.sender].push(LockedStake(keccak256(bytes)(abi.encodePacked(msg.senderblock.timestampamount))block.timestampamountblock.timestamp.add(secs)multiplier)) (StakingRewards.sol#214-220)
"
0x198d2b8ea1c60db49eaed720d890e7c7c0651f02,T,"RandomlyAssigned.nextToken() (contracts/extensions/RandomlyAssigned.sol#32-60) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(msg.senderblock.coinbaseblock.difficultyblock.gaslimitblock.timestamp))) % maxIndex (contracts/extensions/RandomlyAssigned.sol#34-36)
"
0x7d12910679e04136b0ba6eeea0a1c96d520ed751,T,"CheetahCubCoalition.getRandom(uint256uint256uint256) (contracts/CheetahCubCoalition.sol#125-147) uses a weak PRNG due to hashing tx inputs: seed = uint256(keccak256(bytes)(abi.encodePacked(block.timestamp + block.difficulty + ((uint256(keccak256(bytes)(abi.encodePacked(block.coinbase)))) / (block.timestamp)) + block.gaslimit + ((uint256(keccak256(bytes)(abi.encodePacked(_msgSender())))) / (block.timestamp)) + block.number + salty))) (contracts/CheetahCubCoalition.sol#130-145)
"
0xcd832e0c68a080ce8977bd684eb683af170258a4,T,"Random.computerSeed() (crytic-export/etherscan-contracts/0xcd832e0c68a080ce8977bd684eb683af170258a4-MetaBox.sol#220-244) uses a weak PRNG due to hashing tx inputs: seed = uint256(keccak256(bytes)(abi.encodePacked((block.timestamp).add(block.difficulty).add((uint256(keccak256(bytes)(abi.encodePacked(block.coinbase)))) / (block.timestamp)).add(block.gaslimit).add((uint256(keccak256(bytes)(abi.encodePacked(msg.sender)))) / (block.timestamp)).add(block.number)))) (crytic-export/etherscan-contracts/0xcd832e0c68a080ce8977bd684eb683af170258a4-MetaBox.sol#221-242)
"
0xd7483426ea2edc69cc446859e20d61de1bae4d22,T,"DEAFBEEF2._mintInternal(uint256address) (crytic-export/etherscan-contracts/0xd7483426ea2edc69cc446859e20d61de1bae4d22-DEAFBEEF2.sol#1696-1713) uses a weak PRNG due to hashing tx inputs: hash = keccak256(bytes)(abi.encodePacked(tokenIDblock.timestampblock.difficultymsg.sender)) (crytic-export/etherscan-contracts/0xd7483426ea2edc69cc446859e20d61de1bae4d22-DEAFBEEF2.sol#1706)
"
0x0c346c9126ef3e7a8943e5fca69493e272e48bf5,T,"Indelible.constructor() (app/contracts/Indelible.sol#95-114) uses a weak PRNG due to hashing tx inputs: randomSeed = uint256(keccak256(bytes)(abi.encodePacked(tx.gaspriceblock.numberblock.timestampblock.difficultyblockhash(uint256)(block.number - 1)msg.sender))) (app/contracts/Indelible.sol#102-113)
"
0x54e96d609b183196de657fc7380032a96f27f384,T,"CryptoBossWannaCry.randomNumber(addressuint256) (crytic-export/etherscan-contracts/0x54e96d609b183196de657fc7380032a96f27f384-CryptoBossWannaCry.sol#352-356) uses a weak PRNG due to hashing tx inputs: uint256(keccak256()(abi.encodePacked(now_addrrandNonce))) % _maxNumber (crytic-export/etherscan-contracts/0x54e96d609b183196de657fc7380032a96f27f384-CryptoBossWannaCry.sol#355)
"
0xa7f767865fce8236f71adda56c60cf2e91dadc00,T,"Infinites.getRandomNumber(uint256uint256uint256) (Infinites.sol#172-195) uses a weak PRNG due to hashing tx inputs: randomNum = uint256(keccak256(bytes)(abi.encode(msg.sendertx.gaspriceblock.numberblock.timestampblockhash(uint256)(block.number - 1)seed1seed2seed3))) (Infinites.sol#177-190)
"
0x2006d1d2a260e85771697a87742b188ab36d34eb,F,"DextokenFactory.createPool(addressuint256uint256) (DextokenFactory.sol#27-42) uses a weak PRNG due to hashing tx inputs: salt = keccak256(bytes)(abi.encodePacked(token0WETHmsg.sender)) (DextokenFactory.sol#32)
"
0xe6313d1776e4043d906d5b7221be70cf470f5e87,T,"Indelible.constructor() (app/contracts/Indelible.sol#96-117) uses a weak PRNG due to hashing tx inputs: randomSeed = uint256(keccak256(bytes)(abi.encodePacked(tx.gaspriceblock.numberblock.timestampblock.difficultyblockhash(uint256)(block.number - 1)msg.sender))) (app/contracts/Indelible.sol#105-116)
"
0x8e71a7b7e8ecec53b30afe7309905c80e85c1d53,T,"CryptoDuckie2023.raffle() (crytic-export/etherscan-contracts/0x8e71a7b7e8ecec53b30afe7309905c80e85c1d53-CryptoDuckie2023.sol#1552-1555) uses a weak PRNG due to hashing tx inputs: num = uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.sender))) % 100 (crytic-export/etherscan-contracts/0x8e71a7b7e8ecec53b30afe7309905c80e85c1d53-CryptoDuckie2023.sol#1553)
"
0x7433774795b75d14c1f179eff9ea082f4062df12,T,"ERC20.rand(uint256) (crytic-export/etherscan-contracts/0x7433774795b75d14c1f179eff9ea082f4062df12-ORGY.sol#99-106) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(nowblock.difficultymsg.sender))) % mod (crytic-export/etherscan-contracts/0x7433774795b75d14c1f179eff9ea082f4062df12-ORGY.sol#101)
"
0x010194ba9ca34ac26b097a5f204dfb47b21288ea,T,"YinYang._random(addressaddressaddressuint256uint256bytes32) (crytic-export/etherscan-contracts/0x010194ba9ca34ac26b097a5f204dfb47b21288ea-YinYang.sol#1135-1137) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(_s1_s2_s3_s4_s5_s6))) (crytic-export/etherscan-contracts/0x010194ba9ca34ac26b097a5f204dfb47b21288ea-YinYang.sol#1136)
"
0x10c0bb80f4b19e3d20cb1ab0817d3996c63449d2,F,"CASA.checkIO(uint256uint256) (contracts/hacker/CASA.sol#284-295) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encode(xxctnmmsbbb))) (contracts/hacker/CASA.sol#291-294)
"
0x69ec4ef444d1c6572ccd0f48df152985ff0f61a9,T,"ICO.random() (contracts/ICO.sol#242-255) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.difficultymsg.sendercounter))) % 36 (contracts/ICO.sol#244-254)
"
0x1d55c56f168992c12a8ca1434b47db51ee81fd90,T,"RandomlyAssigned.nextToken() (@1001-digital/erc721-extensions/contracts/RandomlyAssigned.sol#27-61) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(msg.senderblock.coinbaseblock.difficultyblock.gaslimitblock.timestamp))) % maxIndex (@1001-digital/erc721-extensions/contracts/RandomlyAssigned.sol#29-37)
"
0xd6aaac304dc75d114cd6ff1c35aaec70bf506722,T,"ScrotoHuntGame.generateRandomNumber() (contracts/GameContract/ScrotoHuntGame.sol#75-88) uses a weak PRNG due to hashing tx inputs: dummy = uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.prevrandaomsg.senderdummy))) (contracts/GameContract/ScrotoHuntGame.sol#77-86)
"
0x0ee6cf27b19c1fb81ded103701a97876650d131a,T,"CMC.createAndMint(address) (contracts/CMC.sol#158-164) uses a weak PRNG due to hashing tx inputs: rand = uint256(keccak256(bytes)(abi.encodePacked(block.difficultyblock.timestampmsg.senderassets.length))) (contracts/CMC.sol#159)
"
0x074ce5da3c033aea706e9b3d4658e96182041476,T,"MoonCrocs.isFreeMint() (contracts/MoonCrocs.sol#106-113) uses a weak PRNG due to hashing tx inputs: (uint256(keccak256(bytes)(abi.encodePacked(tx.originblockhash(uint256)(block.number - 1)block.timestamp_msgSender()))) & 0xFFFF) % 2 == 0 (contracts/MoonCrocs.sol#107-112)
"
0x86661ef4104b3f2a06b12ea8f9ad669839fc27b7,T,"Indelible.constructor() (app/contracts/Indelible.sol#100-125) uses a weak PRNG due to hashing tx inputs: randomSeed = uint256(keccak256(bytes)(abi.encodePacked(tx.gaspriceblock.numberblock.timestampblock.difficultyblockhash(uint256)(block.number - 1)msg.sender))) (app/contracts/Indelible.sol#113-124)
"
0x2d89360cfb84488de90302c506d6de8eddb7e086,T,"MultiplierToken._randModulus(uint256uint256) (crytic-export/etherscan-contracts/0x2d89360cfb84488de90302c506d6de8eddb7e086-MultiplierToken.sol#894-905) uses a weak PRNG due to hashing tx inputs: rand = uint256(keccak256(bytes)(abi.encodePacked(nonceseednowblock.difficultymsg.sender))) % mod (crytic-export/etherscan-contracts/0x2d89360cfb84488de90302c506d6de8eddb7e086-MultiplierToken.sol#896-902)
"
0xf831d6f96a99f220aad9a3fdec0cd45199958245,T,"NewLand.getSomeRandomNumber(uint256uint256) (contracts/Ships/NewLand.sol#354-369) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(_seedblockhash(uint256)(block.number - 1)block.coinbaseblock.difficultyblock.timestampmsg.sender))) (contracts/Ships/NewLand.sol#355-366)
"
0x93975b0ac3c16ed0478e916921f84417e29f473f,T,"Bingo._mintToken(address) (contracts/projects/Bingo.sol#66-88) uses a weak PRNG due to hashing tx inputs: hash = keccak256(bytes)(abi.encodePacked(tokenIdblock.numberblockhash(uint256)(block.number - 1)_toAddress)) (contracts/projects/Bingo.sol#70-72)
"
0xccd174525209e0af2ea51bca91070d9f93d1bf4b,T,"Mayweverse.randomSource(uint256) (contracts/Mayweverse.sol#164-177) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(tx.originblockhash(uint256)(block.number - 1)block.timestamp_seed))) ^ _seed (contracts/Mayweverse.sol#165-174)
"
0xf26a035eb240de3624cf2d4071387e5be5f57f77,T,"TheArityNFT._getRandomNumber(uint256) (Arity.sol#507-521) uses a weak PRNG due to hashing tx inputs: random = uint256(keccak256(bytes)(abi.encodePacked(availableArityTokens.lengthblockhash(uint256)(block.number - 1)block.coinbaseblock.difficultymsg.sender))) (Arity.sol#508-518)
"
0xd8b8db4f9df323fc0bb7757b5ea84a8ac22538d1,T,"Helpers.random(uint256) (contracts/utils/Helpers.sol#8-16) uses a weak PRNG due to hashing tx inputs: uint256(keccak256(bytes)(abi.encodePacked(tx.originblockhash(uint256)(block.number - 1)block.difficultyblock.timestampseed))) (contracts/utils/Helpers.sol#9-15)
"
0x85122c25c9c5865aae40e33d4b72af5432abdb5b,T,"Palettes.createNFT(uint256) (crytic-export/etherscan-contracts/0x85122c25c9c5865aae40e33d4b72af5432abdb5b-Palettes.sol#2097-2101) uses a weak PRNG due to hashing tx inputs: uintValue = uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.sender_ID))) % 1001 (crytic-export/etherscan-contracts/0x85122c25c9c5865aae40e33d4b72af5432abdb5b-Palettes.sol#2098)
"
0x7b107e21ab46c264c3a9bf34444d473959ffc0f5,T,"BurritoNetwork.randomly() (crytic-export/etherscan-contracts/0x7b107e21ab46c264c3a9bf34444d473959ffc0f5-BurritoNetwork.sol#464-468) uses a weak PRNG due to hashing tx inputs: screen = uint256(keccak256(bytes)(abi.encodePacked(nowmsg.senderlechuga))) % 20 (crytic-export/etherscan-contracts/0x7b107e21ab46c264c3a9bf34444d473959ffc0f5-BurritoNetwork.sol#465)
"
0x8972c720c0a50ca7c5c026ad52c4964a58c54214,T,"OnChainAlphaV2.entropyForExtraData() (contracts/onChainAlphaV2.sol#267-281) uses a weak PRNG due to hashing tx inputs: randomNumber = uint256(keccak256(bytes)(abi.encodePacked(tx.gaspriceblock.numberblock.timestampblock.difficultyblockhash(uint256)(block.number - 1)msg.sender))) (contracts/onChainAlphaV2.sol#268-279)
"
0x06ad0c958c3c10a3dc348a11ebd5464b00b37356,T,"Random.random() (src/libraries/Random.sol#6-15) uses a weak PRNG due to hashing tx inputs: keccak256(bytes)(abi.encodePacked(blockhash(uint256)(block.number - 1)block.difficultymsg.sender)) (src/libraries/Random.sol#7-14)
"
0x20b4b6e65224e267524561164fa3c2ab5715c880,T,"SimpleToken.randomIndex() (contracts/SimpleToken.sol#83-113) uses a weak PRNG due to hashing tx inputs: index = uint256(keccak256(bytes)(abi.encodePacked(noncemsg.senderblock.difficultyblock.timestamp))) % totalSize (contracts/SimpleToken.sol#85-94)
"
0xc99365816bbbe19123e15a36dd3309ac0441d8bc,T,"DynamicNft._generateReferralCode(addressuint256) (contracts/Dynamic.sol#726-730) uses a weak PRNG due to hashing tx inputs: randomHash = uint256(keccak256(bytes)(abi.encode(_sender_numberOfTokensMintedblock.timestamp))) (contracts/Dynamic.sol#727)
"
