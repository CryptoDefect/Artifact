{{

  "language": "Solidity",

  "sources": {

    "contracts/TQH.sol": {

      "content": "\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title: The Quiet Heights\n/// @author: manifold.xyz\n\nimport \"./manifold/ERC721Creator.sol\";\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                                                              //\n//                                                                                                                                                              //\n//    !~~~~~~~~~~~~^~^^~~~~~~^^^^^^^^^^^^^:^^^^^:^^^^:::::::::::::::......................................................................................      //\n//    !!~~~~~!~~~~~~~~~~~~~^^^^^^^^^^^^^^~^::^^^^~~..:~^::^:::::::::......................................................................................      //\n//    ~!~~~~~~^^^^~~~~~~~~~~~~^^^^^^^^^^^!::::^:.:^....^::::^::::....:....................................................................................      //\n//    ~!!!~~~~~~~~~~!~~~~~~~~^^^^^^^^^^^^7^.~^:........:......:^::..::::...................................................................................     //\n//    !!~!~~~!~~~~~~~~~~~~~~~~~~~^~^^^^!:!^:!^.................~^:::::::...................................................................................     //\n//    ~~~~~~~~~~~~~~~~~~^~~~^~^^^^^^^^^~.:^:::.................^::.:.:::::........................................................................:..^...       //\n//    ~!!~~~!~~~~~~~~~~~~~~~~~~~^^^^^^^7^:^:...................::^:...:.........................................................................::::.:..        //\n//    ~~~~~~~~~~~~~~~~~~~~^^^~~~~^^^^~^::~~:.....................^^:.::........................................................................:...........     //\n//    ~~~~~!~~~~~!~~~~~~~~~~~~~~^^^^!^^::::::.....^:.:::...........^................................................................::.:^.:^::^:..........      //\n//    ~~~~~~~~~^^~!!~~~~~~~~~~~~~^^~7^:::::::..:^^~^:::::::.....::^:......................................................:..:...:::....^^~.::.............     //\n//    !~~!!~^~~^^^~~~~~~~~~~~~~~~^^^^!!~~~~!~^:~^::..::....^^......:^^:.:::::::.........:^!?!^:..........................:^.:::..::......................:.     //\n//    !!~!!!~~~~~~~~~~~~~~~~~~~~!~::^~~~~!~!!:~^:~...................^::::::::::...::::!PB#Y^77!:....................:.^^:::..:........::...:....::.:.....      //\n//    !~~!!!!!~~~~~~~~~~~~~~~~~7^^:^~~~~~^::~^~::^^.....................:^:..::::::::^JB###G?~^!?7~:.................^:::::::...:....::::::::..:.:.........     //\n//    !!!!!~~!!~~~~~~~~~~~~~~~~7^^^~~^^^::....:::~:^^:^::^..::::........::......::::7G####PYP5J~::~!!^..............::.........::::::::::::^^:::.:....:....     //\n//    ~!!~!!~~~!~~~~~~~~!!~~~!!!!^^~^:::::....::^^.:::^:.::::..........:::::::...:^5#####BJJ?!77!^..:^~^.....::^:::::^::::.:.^:.....:::...:::::::..::....:.     //\n//    ~~~~!!~~~~!~~7!!!~~~!~~7~^:::^~:::::....:::.....::::::::......::^::::::...:5#######P:^~^:........:~:.::::.:::.::::.:::.:.............::....:...::....     //\n//    ~!!~~^^^^^~!~~^~!~~~~^^^^~^^^::::::::::.:..................::::::^^::::..:P########5^..............^::.................................::.........::.     //\n//    ~!!~~~~^^^^^^^^^^^^^^::::^^::^^::::^^~^:::::............:::^:........:^^^5#B##B##&G7~:..............::.:::::..:::.:::::::^^.:.............:::::.:^:..     //\n//    ~!!!~~~^^^^^^^^^^^^^^:::::::::^^^^:::::^^^:^::::::.:::::::^:..........^^!#BBGBGBBGBGY7^:.............!^^^^^:^^^~^:^^::^:::^::........::..:..:...:..:.     //\n//    ~~~~~^^^^^^^^^^^^^^^^^::::::::^~^::::::^^::::.:::^::::.:.:..:!^:^^:.::::J#GGYYY!?PB###BGY7:::........~^:::::::::::::^:..::::^::.::::::::::.::::.:...      //\n//    ~~~~!~^^^~~~^^^^^^^^^^^^~!~^^^^^:^^::::^::::......:.::::::.^P&B~^GB?^^7PP?JYJ?5?JPGB#####&G^::.........::::::::::^...::.::::::.::.:::^:..::::.......      //\n//    ~~~~~!!~!7!~~~~~!^^~~!~^^~!^^^~~^^~^^~~^:^^...........:..:!#&&&B!?555P#&B^^^~7777YPGGGBBB#&#?:............::::::^^::^^::^^...^^::::::................     //\n//    ~~~~~~~~~~~~~~~~~~~~~~~~^^~~~~^^^~^^~~!^^~^:::...::^:::::?#BB&&&B!^^::?GBP7::7J5?YP55YYPPGBB#BY^::............~^:::::^:::::::::..:.................:.     //\n//    ~~~~^^~^~~~~~~~~~~~~~~~~~^~~^^^~^^^^^^^^~^::::::^^^^::^7G&#Y5#&#BP7:...~7???!!7J??JJ77????JPPBBB5?^...........::^.::^:^^.......:::^::^^:::.......:.:.     //\n//    ~~~~^~~~~~~~^^~~!~~~~^^~~~~^^^~^^~~^^^^:^^^::^::^:::^?B&&&&7!J5PP55?~...:::::^:~?!77!~~~~~~!?JJ5GBB7............^:...:::::::^^::........::^..........     //\n//    ~~~~!~~~^^^^^^^^~~~~^~~~~:::::::::^:::^^:::::^^:^^^~P&&&&&&#7^^!7!!~^:........:.~~^!~^^^:::::^~7?5PP~............:.....:!55J!:............^:.........     //\n//    ~!~~!~!~^^^^^~~~~^^!~^^~^::::::::::::::::~~:::::^^Y#&&&##&&&#Y~:^::.....:::::^:::^^^^^::....::::!!:::.:..........::~7J5GGBB#BBY~......:....:::...^::.     //\n//    !!~~~!~!~~^!~~^~!^^^~^^^^:^::::^::^^^^:^::::::::!G##BBB#&#P55P5Y?!:::..::............:^::.^^....:........::.......:^7YJ5Y5Y5Y55GY:...::..............     //\n//    ~!!~~~~~!~~~~~~^^~^^~~~!^^!!~^:^^:::::::::::::~5BGGBB#&&&G77?JYJJ5J~::::............^^^::.^...............:::.:......:7~^~~~777Y5Y:...................    //\n//    ~!!!~~~~!~~~~~~~^~^^~~~~^^^^^:^^::::::::::::~5#&55G#&&&&&#!::^~!!!7J~:::........:^:::.................................:::^^^^^!7!?^...................    //\n//    !!~!!~~~~~~~~~~~^^~^^^~^^^^^~^^^^^:^!^^::^!5#&&##GJ5#&###&B!::::::::^!^^::.....^::::..................::::::::::.::::::.:::..::::^^:::........::...:..    //\n//    ~~~~~~~~~~~~~~~~~^^~^^^~~~^^^^^^^^7B#7^!JP#BBBBBBGPYPBGBG#GB?^:.:::?GB7!!~^:..:~..::::....:....::^::::::::....::.::::..............:.::..............     //\n//    ~~~!~~~~~~~~~^^^~^^^^^^^^^^^^^^^~5&&&&?~~!5BBBG55YJ?JYPB#&P!!:^:::G&&&P~^~!77~^^::::::^^~::::::::::::::::::...::..:..................................     //\n//    ~~~~!~~~~~~~~^^^^^~^^^^^^^^^^^^!G&&&&&#?!!7J5PJ???7??YGBGPGJ~^:::5&&&@&B?^^J?!77~^::::::::::::::::::::::::::::::..::..:..............................     //\n//    ~~~~~~~~~~~~~~^^~^^^^^^^^^^^^~Y#&#&&&&&Y~~!!7YYY5YYPGGPYJYJ?7!^:J&&&&&&&&G7YP?!~~~~~~^::::::::::::::::^JBGJ~^:::::::::::::.:::::::::::..::...........     //\n//    ~!~~~~~~~~~~~~~^^~~^^^^^~~~^7B&&&&&&&&&&G7~7^^7JJ?JY5YJ7!!!~!~~7&&&&&&&&&&#57?YJ7~!!?5?^:::::::::::::7B&&&&&B57^:::^:::::::::::~7J!77?!^:::::::.......    //\n//    !~~~~~~~~~~~~~~~~~^^^~^~~~!Y#&&#####B&&&&&P5Y!!??????!!77!^^^^7#&&&&#&&&&&&&5!!7777!JGP5?~^::::::::~5&&&&&&&&&B7!!~^::^::::^!JPB&#^:^^~77!^::::.......    //\n//    ~~~~!~~~~~~~^~~~~~^^^^~?YPB####BGGBG&&###&&&JJ777???Y!~^~~~^:7#&##&&#&&&&&&&&#Y7!J5PPY7~7JJ?!~^:^!5#&###&####&&#Y7?P57~~!?5B######^~7!~^:^7?~:::......    //\n//    ~~~~~~~~~~~~^^~~~^^~7YGBBBBBBBPPGBB##B#&&&&&5J5?!7?55?^::::^Y###&&##&&&&&&&&&&&&BJ!~!!!!~~~~?YPGG##BBBBBBGBGB#BPBGY5BBB#####BB##BJ~7YJYY?~:^!?7~::....    //\n//    !!~~~~!~~~~~JGY77YPGGGPPP55G5YYPGGGPG#&&######5JJJ!!?J!::^?G#BB#&#G###B&&#&&&&&&&&#7^^~!~~~!5GGPP5P55YYJYYPB##5^~7JYY5PPGGGBBBPYJ7!?PGB5~~~~^:^!7?7!:.    //\n//    !!!!!!!~!7?PBBBGGG5YYJ?J?J577Y5YYJJPB#&BBBB#GGJ???777!7J5G#GBB#&BBBBBB##G&&&&&&&&&&BJ!~~??^7JJJJ??777!!?5##PY5GJ~^~7JYYYYGGBBP7!Y5JP#B55P?~~~^:::^~7~.    //\n//    !!!7777YGGP5YJ5Y?77!!~~!~7!?Y?7777JP#BPB##PJ?5?7777?JJJ5PPPPPB#GGGGPG#PB###&&&&&&&&&Y77YY!!~~!!!~!~~~7?JYPBGP?~!57^^???PGP5Y5GBY!?YG#BY5G#P?!~^::.::..    //\n//    ??!7?J??77!!~~!~^~^^^^^~!!7!~~~~!7?555GBB5?7YY~!J?J?!!!?Y5YPG555YY5PGPP##B&&#&&&&&&&#?JB?!!~^^::^~~~~!??YYY?Y5555?^^^:~?!!7?J5PGPJ7JPBP5PPBB57!~:.....    //\n//    ~!!!!!~~~~~~~~~~~~~~~~^^^^^^^^^^^^~777!7?~^!7??J?!~~~~~??7JY????JYYYY5B#BPB##&#&&#&&&#&P~~^^::::.::::^~!!~~!!7?YYYYJJ7~::..:^^^^~777J55PGPGGGPY?~::...    //\n//    ~!!!!!~~~~~~~~^^^^^^^^^^:::::^^^~^^^^^^~::!J77!~^~^^~^~~~~~~~!!!777?JGP55YGB####GB###BBB7^:::::::^^^^^^^:::::::::^^~!!!!~^~^^:..::^^^^~~!~!7~~~!7!:...    //\n//    !!~~~~^^^^^^^^^^^^^^^:::::::^^^^^^::^^^~^~^::^~~:::^^~^^~^:.:::^~~77??7??JGGBGYJJ5GPPPPGPY^:::^^^~^::^^^^^^^^^^^^^::::::::::::......::^^::::..:.......    //\n//    !!!!!7777777!7!!!!~^^:::::^^~~^~~^^~^^::::.::::::::::::^^:^^^::^^~^^~^~!7?JJ?~!!7?7??77!!!~^^^^::^^:::^^^^::::::::::::::::::::^^::::::::::::::::::::..    //\n//    !!!~!!!!77!!~~^^^^^^^:::^~^^^^^^^:::::::~^:::::::..............::::::::~!~^^::^^^:::::::..:^:::::::::................::::::::::^~!~^^^:::::..:::..::..    //\n//    !!!!777!!~~~~~~~~^^^^^!JBG~^:::::::^^^^!~~~~~!~!!::::^^^::::::::::::::^^^^^^^^^^:::^!!~~!?PBY!^:.........^?P?!:.............:::::::.........::.:::::..    //\n//    !!~~!777!!7!!~~^^^~75B&&&B?7!!!~^^:::::^:::^^^^^^::~~^:::^^7?7~~~^^:::^~?Y~:^~!7~?PB##B##&&&GY55Y?!~^^!YG#&&5?YY!^:.......:::::::::::.......:.........    //\n//    ~~~~!!!7?5GBGPPGBB#&&&&&#P?!!~~~~!!~!?!~~~^~!!^~!!!7!^^^~!J5PPP5?!!?YPBBBBB5J5BGP####B&&&&&&&GJ5YGGPP##B#&#&GP?!JYYJ7^::::.................:^!7:......    //\n//    !77?Y5GPPBPP5P#&@&&&&&#&5Y?!7!!!~7JJ557???7777!!77!7!!~!777?77YGGGGBBBGBGBBGBGGY5B#&####&&&#&&G55GGBB#BB&&#&BYP5!^^~77J!^^^:.::::::::^~~7J5B#&&G7^:...    //\n//    75PPP5J?JJ?5B&&&&&BBGGBB??JJJ!!!?YPPJ?777!^:^^!!~!!!~77~!!7?5PPPGPPPPPGBBB#####PJPG##BGGB#BB&#&#BGBG#&#B&&#B#GYJPY~:::7JYYJ?7!^^~!?YPGB###B#B##B#BG5?.    //\n//    ?5JJ7!!7?5#######BP5555J5#5J7?YPB#BY??777777!~^^~7~~!!~!J5GGP5YJ?J?JYPBBB#BBBB##P?J5PPPPPGGBB##BPPGGBB#B#&#P#BGJ!7YY!:::^~!7J5GGGB#GGGG5GBPPPP5P5555Y:    //\n//    !J?!7JPB#BGPGBBG5YJ???5#&&?!5GB###Y~~!7!7777J?~:::::^~7JJJJJ777!7?JY5PP55BBGGBGBGPJ7JJY?Y5YPGGG55PGPGPGGPBPPP#BPY!^!7?7^:..::^!J555YYJYJYY?YJ?7??Y7~^.    //\n//    !?J5GBG5YYYYP5J?77~!5#&&&#~!YGBBG55!::^^~~~~~7?!:...::^:^~!YBJ??JJJ??J7JJYY55PY555P5?!!!?J?JY555JYJYYYJJ5JY5YPG55J?~^:^~!~:....:~7?JY7!~~~~~~~~^^~^^:.    //\n//    755J?7J?7???7!!~!7Y#&&&&&BY~?YPPJYYYY~:..:::::~?~^::..:.:!G&&G?J?!!!!!!!!7?7?Y?JJJY55?7!~~!7??75J777777!7?!7J!???77Y!^:..:::::.....:^?JJ7~^:..........    //\n//    !!!!!!!!!~~~^~?5B##&&#B##Y5Y?7JJJ?J?Y?7^:......::.::^^^^Y##B5P?7?!^:::::^:^^^!77!77777777^^^~!7!7~^::^~~~~~^~~~~~!^~!~^:..............^~7???7~::......    //\n//    ~~~~~^^~^^~?5GBBBBG#BGBBY??7?JJ?!7!7~~~^~!Y7^^^::..:^75B#GBBG?~^~~!~::.......:^~:::::^^^^!:.::^~::......::::.:::::......................:::^^~!!7!~:..    //\n//    ~~~~~~~7J5GGP5555G#G5GPY~~~~~~~~^~~^^~JP#&&#7!~~~?5PPGB#5PGPPP^:...::^^:..:^::::.........::.....:.....................................................    //\n//    ~~~7J5P5YJ???7?J5PYJJ?7~^^^:^^^^^^^75#&&&&&&G!~~7PP5P555J5YJY7:........^~^:.....:^::::..:::...........................................................    //\n//                                                                                                                                                              //\n//                                                                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\ncontract TQH is ERC721Creator {\n    constructor() ERC721Creator(\"The Quiet Heights\", \"TQH\") {}\n}\n"

    },

    "contracts/manifold/ERC721Creator.sol": {

      "content": "\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\ncontract ERC721Creator is Proxy {\n    \n    constructor(string memory name, string memory symbol) {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0x2d3fC875de7Fe7Da43AD0afa0E7023c9B91D06b1;\n        Address.functionDelegateCall(\n            0x2d3fC875de7Fe7Da43AD0afa0E7023c9B91D06b1,\n            abi.encodeWithSignature(\"initialize(string,string)\", name, symbol)\n        );\n    }\n        \n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n     function implementation() public view returns (address) {\n        return _implementation();\n    }\n\n    function _implementation() internal override view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }    \n\n}\n"

    },

    "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/Address.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"

    }

  },

  "settings": {

    "remappings": [

      "@openzeppelin/=node_modules/@openzeppelin/"

    ],

    "optimizer": {

      "enabled": true,

      "runs": 300

    },

    "metadata": {

      "bytecodeHash": "ipfs"

    },

    "outputSelection": {

      "*": {

        "*": [

          "evm.bytecode",

          "evm.deployedBytecode",

          "devdoc",

          "userdoc",

          "metadata",

          "abi"

        ]

      }

    },

    "evmVersion": "london",

    "libraries": {}

  }

}}