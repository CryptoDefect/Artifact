{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "random",
            "source_mapping": {
              "start": 147,
              "length": 700,
              "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
              "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
              "is_dependency": false,
              "lines": [
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29
              ],
              "starting_column": 5,
              "ending_column": 6
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "PolymorphGeneGenerator",
                "source_mapping": {
                  "start": 57,
                  "length": 792,
                  "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                  "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
                  "is_dependency": false,
                  "lines": [
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30
                  ],
                  "starting_column": 1,
                  "ending_column": 2
                }
              },
              "signature": "random(PolymorphGeneGenerator.Gene)"
            }
          }
        ],
        "description": "PolymorphGeneGenerator.random(PolymorphGeneGenerator.Gene) (contracts/lib/PolymorphGeneGenerator.sol#9-29) uses keccak256(bytes)\n",
        "markdown": "[PolymorphGeneGenerator.random(PolymorphGeneGenerator.Gene)](crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol#L9-L29) uses keccak256(bytes)\n",
        "first_markdown_element": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol#L9-L29",
        "id": "50b5efe8293c25c83863679c679f486312a00407cce946c730842868813fe5da",
        "check": "crypto",
        "impact": "High",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "slitherConstructorConstantVariables",
            "source_mapping": {
              "start": 168,
              "length": 5428,
              "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/mainnet/PolymorphRoot.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/mainnet/PolymorphRoot.sol",
              "filename_short": "contracts/mainnet/PolymorphRoot.sol",
              "is_dependency": false,
              "lines": [
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124,
                125,
                126,
                127,
                128,
                129,
                130,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                138,
                139,
                140,
                141,
                142,
                143,
                144,
                145,
                146,
                147,
                148,
                149,
                150,
                151,
                152,
                153,
                154,
                155,
                156,
                157,
                158,
                159,
                160,
                161,
                162,
                163,
                164,
                165,
                166,
                167,
                168,
                169,
                170,
                171,
                172,
                173,
                174,
                175,
                176,
                177,
                178,
                179,
                180,
                181,
                182,
                183,
                184,
                185,
                186,
                187,
                188,
                189,
                190,
                191,
                192,
                193,
                194,
                195
              ],
              "starting_column": 1,
              "ending_column": 2
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "PolymorphRoot",
                "source_mapping": {
                  "start": 168,
                  "length": 5428,
                  "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/mainnet/PolymorphRoot.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/mainnet/PolymorphRoot.sol",
                  "filename_short": "contracts/mainnet/PolymorphRoot.sol",
                  "is_dependency": false,
                  "lines": [
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102,
                    103,
                    104,
                    105,
                    106,
                    107,
                    108,
                    109,
                    110,
                    111,
                    112,
                    113,
                    114,
                    115,
                    116,
                    117,
                    118,
                    119,
                    120,
                    121,
                    122,
                    123,
                    124,
                    125,
                    126,
                    127,
                    128,
                    129,
                    130,
                    131,
                    132,
                    133,
                    134,
                    135,
                    136,
                    137,
                    138,
                    139,
                    140,
                    141,
                    142,
                    143,
                    144,
                    145,
                    146,
                    147,
                    148,
                    149,
                    150,
                    151,
                    152,
                    153,
                    154,
                    155,
                    156,
                    157,
                    158,
                    159,
                    160,
                    161,
                    162,
                    163,
                    164,
                    165,
                    166,
                    167,
                    168,
                    169,
                    170,
                    171,
                    172,
                    173,
                    174,
                    175,
                    176,
                    177,
                    178,
                    179,
                    180,
                    181,
                    182,
                    183,
                    184,
                    185,
                    186,
                    187,
                    188,
                    189,
                    190,
                    191,
                    192,
                    193,
                    194,
                    195
                  ],
                  "starting_column": 1,
                  "ending_column": 2
                }
              },
              "signature": "slitherConstructorConstantVariables()"
            }
          }
        ],
        "description": "PolymorphRoot.slitherConstructorConstantVariables() (contracts/mainnet/PolymorphRoot.sol#8-195) uses keccak256(bytes)\n",
        "markdown": "[PolymorphRoot.slitherConstructorConstantVariables()](crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/mainnet/PolymorphRoot.sol#L8-L195) uses keccak256(bytes)\n",
        "first_markdown_element": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/mainnet/PolymorphRoot.sol#L8-L195",
        "id": "bee9359b60beae4b2a6f09e91ac576725240ef0bd82ec1e68418cd7587cfe878",
        "check": "crypto",
        "impact": "High",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "geneOf",
            "source_mapping": {
              "start": 1515,
              "length": 168,
              "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol",
              "filename_short": "contracts/base/Polymorph.sol",
              "is_dependency": false,
              "lines": [
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64
              ],
              "starting_column": 5,
              "ending_column": 6
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Polymorph",
                "source_mapping": {
                  "start": 338,
                  "length": 2222,
                  "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol",
                  "filename_short": "contracts/base/Polymorph.sol",
                  "is_dependency": false,
                  "lines": [
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83,
                    84,
                    85,
                    86,
                    87,
                    88,
                    89,
                    90,
                    91,
                    92,
                    93,
                    94,
                    95,
                    96,
                    97,
                    98,
                    99,
                    100,
                    101,
                    102
                  ],
                  "starting_column": 1,
                  "ending_column": 2
                }
              },
              "signature": "geneOf(uint256)"
            }
          },
          {
            "type": "node",
            "name": "_genes[tokenId]",
            "source_mapping": {
              "start": 1654,
              "length": 22,
              "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol",
              "filename_short": "contracts/base/Polymorph.sol",
              "is_dependency": false,
              "lines": [
                63
              ],
              "starting_column": 9,
              "ending_column": 31
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "geneOf",
                "source_mapping": {
                  "start": 1515,
                  "length": 168,
                  "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol",
                  "filename_short": "contracts/base/Polymorph.sol",
                  "is_dependency": false,
                  "lines": [
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64
                  ],
                  "starting_column": 5,
                  "ending_column": 6
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Polymorph",
                    "source_mapping": {
                      "start": 338,
                      "length": 2222,
                      "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol",
                      "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol",
                      "filename_short": "contracts/base/Polymorph.sol",
                      "is_dependency": false,
                      "lines": [
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                      ],
                      "starting_column": 1,
                      "ending_column": 2
                    }
                  },
                  "signature": "geneOf(uint256)"
                }
              }
            }
          }
        ],
        "description": "Polymorph.geneOf(uint256) (contracts/base/Polymorph.sol#56-64) uses a weak PRNG: _genes[tokenId] (contracts/base/Polymorph.sol#63)",
        "markdown": "[Polymorph.geneOf(uint256)](crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol#L56-L64) uses a weak PRNG: [_genes[tokenId]](crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol#L63)",
        "first_markdown_element": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/base/Polymorph.sol#L56-L64",
        "id": "16eddcdb7d77bad4f4dfac93f7d0d8de0c116a9e61fed7b8639112d8ab9e5210",
        "check": "weak-prng",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "random",
            "source_mapping": {
              "start": 147,
              "length": 700,
              "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
              "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
              "is_dependency": false,
              "lines": [
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29
              ],
              "starting_column": 5,
              "ending_column": 6
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "PolymorphGeneGenerator",
                "source_mapping": {
                  "start": 57,
                  "length": 792,
                  "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                  "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
                  "is_dependency": false,
                  "lines": [
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30
                  ],
                  "starting_column": 1,
                  "ending_column": 2
                }
              },
              "signature": "random(PolymorphGeneGenerator.Gene)"
            }
          },
          {
            "type": "node",
            "name": "g.lastRandom",
            "source_mapping": {
              "start": 821,
              "length": 19,
              "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
              "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
              "is_dependency": false,
              "lines": [
                28
              ],
              "starting_column": 9,
              "ending_column": 28
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "random",
                "source_mapping": {
                  "start": 147,
                  "length": 700,
                  "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                  "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
                  "is_dependency": false,
                  "lines": [
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29
                  ],
                  "starting_column": 5,
                  "ending_column": 6
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "PolymorphGeneGenerator",
                    "source_mapping": {
                      "start": 57,
                      "length": 792,
                      "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                      "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                      "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
                      "is_dependency": false,
                      "lines": [
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30
                      ],
                      "starting_column": 1,
                      "ending_column": 2
                    }
                  },
                  "signature": "random(PolymorphGeneGenerator.Gene)"
                }
              }
            }
          }
        ],
        "description": "PolymorphGeneGenerator.random(PolymorphGeneGenerator.Gene) (contracts/lib/PolymorphGeneGenerator.sol#9-29) uses a weak PRNG: g.lastRandom (contracts/lib/PolymorphGeneGenerator.sol#28)",
        "markdown": "[PolymorphGeneGenerator.random(PolymorphGeneGenerator.Gene)](crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol#L9-L29) uses a weak PRNG: [g.lastRandom](crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol#L28)",
        "first_markdown_element": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol#L9-L29",
        "id": "fc9b28c5663d6c40e867a4631e3b6574dac61b81c58f2ee11debacccf999e2f1",
        "check": "weak-prng",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "random",
            "source_mapping": {
              "start": 147,
              "length": 700,
              "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
              "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
              "is_dependency": false,
              "lines": [
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29
              ],
              "starting_column": 5,
              "ending_column": 6
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "PolymorphGeneGenerator",
                "source_mapping": {
                  "start": 57,
                  "length": 792,
                  "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                  "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
                  "is_dependency": false,
                  "lines": [
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30
                  ],
                  "starting_column": 1,
                  "ending_column": 2
                }
              },
              "signature": "random(PolymorphGeneGenerator.Gene)"
            }
          },
          {
            "type": "node",
            "name": "g.lastRandom = uint256(keccak256(bytes)(abi.encode(keccak256(bytes)(abi.encodePacked(msg.sender,tx.origin,gasleft()(),g.lastRandom,block.timestamp,block.number,blockhash(uint256)(block.number),blockhash(uint256)(block.number - 100))))))",
            "source_mapping": {
              "start": 216,
              "length": 595,
              "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
              "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
              "is_dependency": false,
              "lines": [
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27
              ],
              "starting_column": 9,
              "ending_column": 10
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "random",
                "source_mapping": {
                  "start": 147,
                  "length": 700,
                  "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                  "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
                  "is_dependency": false,
                  "lines": [
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29
                  ],
                  "starting_column": 5,
                  "ending_column": 6
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "PolymorphGeneGenerator",
                    "source_mapping": {
                      "start": 57,
                      "length": 792,
                      "filename_relative": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                      "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol",
                      "filename_short": "contracts/lib/PolymorphGeneGenerator.sol",
                      "is_dependency": false,
                      "lines": [
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30
                      ],
                      "starting_column": 1,
                      "ending_column": 2
                    }
                  },
                  "signature": "random(PolymorphGeneGenerator.Gene)"
                }
              }
            }
          }
        ],
        "description": "PolymorphGeneGenerator.random(PolymorphGeneGenerator.Gene) (contracts/lib/PolymorphGeneGenerator.sol#9-29) uses a weak PRNG due to hashing tx inputs: g.lastRandom = uint256(keccak256(bytes)(abi.encode(keccak256(bytes)(abi.encodePacked(msg.sender,tx.origin,gasleft()(),g.lastRandom,block.timestamp,block.number,blockhash(uint256)(block.number),blockhash(uint256)(block.number - 100)))))) (contracts/lib/PolymorphGeneGenerator.sol#10-27)",
        "markdown": "[PolymorphGeneGenerator.random(PolymorphGeneGenerator.Gene)](crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol#L9-L29) uses a weak PRNG due to hashing tx inputs: [g.lastRandom = uint256(keccak256(bytes)(abi.encode(keccak256(bytes)(abi.encodePacked(msg.sender,tx.origin,gasleft()(),g.lastRandom,block.timestamp,block.number,blockhash(uint256)(block.number),blockhash(uint256)(block.number - 100))))))](crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol#L10-L27)",
        "first_markdown_element": "crytic-export/etherscan-contracts/0xb5433e67c067cad4cb36529f3f2d61ec0fb59f89-PolymorphRoot/contracts/lib/PolymorphGeneGenerator.sol#L9-L29",
        "id": "d1dfdd0829aca8d44155151aa1db855de22d29d268718d0726901b56b5705e7a",
        "check": "weak-prng-tx",
        "impact": "High",
        "confidence": "Medium"
      }
    ]
  }
}