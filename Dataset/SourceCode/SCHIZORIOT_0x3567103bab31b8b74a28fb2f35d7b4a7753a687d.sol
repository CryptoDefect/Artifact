{{

  "language": "Solidity",

  "sources": {

    "contracts/SCHIZORIOT.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title: Schizocurrency's Rug Riot\n/// @author: manifold.xyz\n\nimport \"./manifold/ERC1155Creator.sol\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                           //\n//                                                                                                                           //\n//    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////    //\n//    //                                                                                                               //    //\n//    //                                                                                                               //    //\n//    //    @SCHIZOCURRENCY@@@@&#GPPPGB##&&@@@@@@@@@@@@@&GGGGGGGGGGGGGGGGGGGGY                                         //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#P??JY5P5YYYYYJJJYPGB&@@@@@@#.                                   //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&BP5J?7?Y5555Y5PGGBGGP5YYYJ77P&@@@B                                    //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BYJJYJJJYYYYYY5GPP55PPPPPGGGBBG5YJYPG!:                                  //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#GJ!J5YYYYYYYYYYYYYYYYYYYYYYYYYYY5PGGG577?Y?^                               //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@@@#5?75YYYYYYYYYYYYYYYYYYYYYYYYYY5555YYYYYYPBP?~G@P?.                            //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@#J7?Y#&5YYYYYYYYYYYYYYYPGBBGGGGGGGP55YYYYYYYYPBY~P#5G:                           //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@BJ??YYBB5YYYYYYYYYYYYYPB##BGP5YYYYYYYYYYYYYYYYYY55Y!#J#!                           //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@G?GYYYGG5YYYYYYYYYYYPB#BP5YYJJYYYYYYYYYYYYYYYYYYYYYYJG&Y:   ^                       //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@#5JB5YYY#55YYYYYYYYYP#BPYJYYYYYYYYYYYYYYYYYYYYYYYYYYYYYBPJJ?7~7J                      //    //\n//    //    @@@@@@@@@@@@@@@@@@@@5?5BPYYY5BYYYYYYYYYP##5YYYYYYYYYYYYYYYYYYYYYYYYYYY55YYYYYYGP5G5!?:                     //    //\n//    //    @@@@@@@@@@@@@@@@@@@&!#5YYYYJP5YYYYYYYY5#PYY555555555YYYYYYYYYYYYYYYYYP55YYYJ5B55#P5B?~                     //    //\n//    //    @@@@@@@@@@@@@@@@@@@&!B5YYYYY5YYYYYYYY5PPPPPP55YYYYYYYYYYYYYYYYYYYYYYYYYYYYYPGY5#PYY#Y!.......              //    //\n//    //    @@@@@@@@@@@@@@@@@@@@P?#P55YYYYYYYY5PP555PPPPPPPPPPP5YYYYYYYYYYYYYYYY555PPPBG5BB5YYY#YP&####&J              //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@!B!^7Y5YYY5PPP555YYJ?77??Y5PPPGGGPPPPPGGGGPPPGPPPPGGGGGB#G5YYY#Y&@@@@@@Y              //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@Y5^^^^JGPP555YJ7~^^:^!7????77JPB#BGGP555PPPPP555YJ?7?JY5GPPBPP#P@@@@@@@Y              //    //\n//    //    @@@@@@@@@@@@@@@@@#BGBY5~^^^^5P5YJ!^^^^^7P#&@@@&&##GJ7JGGGPPPG55GB#&&&##BGY!:^!5G5#&BB@@@@@@@Y              //    //\n//    //    @@@@@@@@@@@@@@#5J7!!!7G!^^^^^5P!Y~^^^^5&&&#BGP55PB&@#?^7Y5YJ7Y#@@&#BBGGG#@&5~:^JGGGB&@@@@@@@Y              //    //\n//    //    @@@@@@@@@@@@&YJ?~^!JJYG?^^^^~5JJJJ?7!5@#55JJJ?JJJJG&&&7::^^:?&&PP5YJJJJJ5#&@G!!~!PGPY5G&@@@@Y              //    //\n//    //    @@@@@@@@@@@&!JJ^JG5?~!BG^^^!?^!J5YJJJ&&GY?YYJ!?J5575B@B55555#&PY?5JY7JY5JJG#@G5PYB7:^7JYG&@@Y              //    //\n//    //    @@@@@@@@@@@@G?JB#7^:~Y#J^^^~7^7?7!7?J#@&PGGPJ?7?5J7P&&5JYPJJB@GY5PJ7~!?P77P#@PYP#&BY~:7B5&@@Y              //    //\n//    //    @@@@@@@@@@@@@B!&!^^?B5~^^^^^^^~^^^^^^!B@@@@&&&&&&##@@5^^^Y7:7#@&&&&##BBBGG&@P~^^?#BPB5#5&@@@Y              //    //\n//    //    @@@@@@@@@@@@@#!G^^7&?^^^^^^^^^^^^^^^^^~JG&@@@@@@@&#P7^^^^~~^^~5&@@@@&@@@@&#Y^^^^^!#G?##5@@@@Y              //    //\n//    //    @@@@@@@@@@@@@#!G^^55:^^^^^^^^J^^^^^^^^^^^!?Y5555J7~^^^^^^^^^^^^~JP###BGPY?!^^^^^^^JGY5B5@@@@Y              //    //\n//    //    @@@@@@@@@@@@@@7G~^B7^^^^^^75P&5?777!!!!~^:::^^^^^^^^^^^^^^^^^^^^^^~!?JJ?7?~^^^^^^7#G?5PP@@@@Y              //    //\n//    //    @@@@@@@@@@@@@@5JJ:P7^^^^^^~?YPB#######&#G5J7~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^!P&@G5G5B@@@@Y              //    //\n//    //    @@@@@@@@@@@@@@&!G^~PP7:^^^^^^^~7JPBBBBBB#&&&#BG5Y?77!!7777777777!!!!~~~~~~!7?YG#&##B7Y5@@@@@Y              //    //\n//    //    @@@@@@@@@@@@@@@5JG^~PB7^^^^^^^^^^^!JPB#BBBB##&&&&&&&&&&&&&&&&&&&&&######BB##&&##BB@5YY#@@@@@Y              //    //\n//    //    @@@@@@@@@@@@@@@@YYPJ?G5J!^^^^^^^^^^^^~?PB###B##############&#BBBBBBBBBBB###&&#PJ~!@PY#@@@@@@Y              //    //\n//    //    @@@@@@@@@@@@@@@@@BP555BB5J!^^^^^^^^^^^^~?YPBB##BBBBBBBBBBBBBBBBB###########P?~^^^!&Y&@@@@@@@Y              //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@B5J^^^^^^^^^^^^^!7PBPPGGBBBBBB##&&&####BBBBBBGPY?~^^^^^^5BB@@@@@@@@Y              //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@#P5!^^^^^^^^^^^Y^~?YPPGPGGGGPPY?7???JJYYYJ?!~^:^^^^^^^7GP&&&&&&&&@J              //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@@&BPY?!~^^!7!!7PY7!!!!7777!~^^:^^~!7?JJJ?7??777777!!?YPJ~:::::::::.              //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@&BPJY55GGGPP555PPPP555YYYYYYPGB##BGPP55555555555YJ?^                          //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P^^!?JY555YYYYYYYYY55555555YYYYYYYYYYYYYYYY7~.                             //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Y^. .^77?JYYYYYYYYYYYYYYYYYYYYYYYYY555BB!!!                               //    //\n//    //    @@YUMMY SPROTO DELICIOUS@@@@@@@@@@@J?&G: .J?7!?YYYYYYYYYYYYYYYYYYY55555YJJ#&B!77                           //    //\n//    //    @@@@@@I WANT TO EAT YOUR FACE@@@P^&&@G..JYYYJJ?YGGP55YYYYY55PPP5YYJJJJYYG&&&J7J^.                          //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@@@#5?7G&&&@7.JYYYYYYJJY5PPPPPPP55YJJJJYYYYYYYP&&&&5!77                           //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@@@G?!?G&&&&&&5:YYYYYYYYYYYJJJJJJJJJYYYYYYYYYYYY5&&&&&B!~.                          //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@@@@P7!JG&&&&&&&&P~YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY#&&&&&&BGPYJ7^:                    //    //\n//    //    @@@@@@@@@@@@@@@@@@@@@&P77YB&&&&&&&&&&G7YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYG&&&&&&&&&&&&&#G5J!:               //    //\n//    //    @@@@@@@@@@@@&BGPPP555JJP#&&&&&&&&&&&&G?YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY5&&&&&&&&&&&&&&&&&&&?              //    //\n//    //    @@@@@@@@@@#GPPGB##&&&&&&&&&&&&&&&&&&&G?YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY#&&&&&&&&&&&&&&&&&@Y              //    //\n//    //    @@@@@@@@@@&#&&&&&&&&&&&&&&&&&&&&&&&&&P~JJYYJJJ??77!!~~^^^^^^~~!!7??JJJJJ75&&&&&&&&&&&&&&&&&&Y              //    //\n//    //    @@@@@@@@@@@&&&&BGGGG#&&&BGGG&&&&&&&&&P  .::..                      ..... ^&&&&&&&@@@@7^^^^^^:              //    //\n//    //    @@@@@@@@@@BYYJ!... .G@@B.  .B&&&&&&&&P                                   .G&&&&&&@@@@~                     //    //\n//    //                                                                                                               //    //\n//    //                                                                                                               //    //\n//    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////    //\n//                                                                                                                           //\n//                                                                                                                           //\n//                                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\ncontract SCHIZORIOT is ERC1155Creator {\n    constructor() ERC1155Creator(\"Schizocurrency's Rug Riot\", \"SCHIZORIOT\") {}\n}\n"

    },

    "contracts/manifold/ERC1155Creator.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\ncontract ERC1155Creator is Proxy {\n\n    constructor(string memory name, string memory symbol) {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0xE9FF7CA11280553Af56d04Ecb8Be6B8c4468DCB2;\n        (bool success, ) = 0xE9FF7CA11280553Af56d04Ecb8Be6B8c4468DCB2.delegatecall(abi.encodeWithSignature(\"initialize(string,string)\", name, symbol));\n        require(success, \"Initialization failed\");\n    }\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n     function implementation() public view returns (address) {\n        return _implementation();\n    }\n\n    function _implementation() internal override view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }    \n\n}\n"

    },

    "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/Address.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"

    }

  },

  "settings": {

    "remappings": [

      "@openzeppelin/=node_modules/@openzeppelin/"

    ],

    "optimizer": {

      "enabled": true,

      "runs": 300

    },

    "metadata": {

      "bytecodeHash": "ipfs"

    },

    "outputSelection": {

      "*": {

        "*": [

          "evm.bytecode",

          "evm.deployedBytecode",

          "devdoc",

          "userdoc",

          "metadata",

          "abi"

        ]

      }

    },

    "evmVersion": "london",

    "libraries": {}

  }

}}