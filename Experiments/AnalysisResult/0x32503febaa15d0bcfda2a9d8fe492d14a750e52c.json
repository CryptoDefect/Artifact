{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "createShardToken",
            "source_mapping": {
              "start": 19192,
              "length": 567,
              "filename_relative": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
              "filename_short": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
              "is_dependency": false,
              "lines": [
                616,
                617,
                618,
                619,
                620,
                621,
                622,
                623,
                624,
                625,
                626,
                627,
                628,
                629
              ],
              "starting_column": 5,
              "ending_column": 6
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ShardsFactory",
                "source_mapping": {
                  "start": 19100,
                  "length": 776,
                  "filename_relative": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                  "filename_short": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                  "is_dependency": false,
                  "lines": [
                    613,
                    614,
                    615,
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    626,
                    627,
                    628,
                    629,
                    630,
                    631,
                    632,
                    633,
                    634,
                    635
                  ],
                  "starting_column": 1,
                  "ending_column": 0
                }
              },
              "signature": "createShardToken(uint256,string,string)"
            }
          }
        ],
        "description": "ShardsFactory.createShardToken(uint256,string,string) (crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol#616-629) uses keccak256(bytes)\n",
        "markdown": "[ShardsFactory.createShardToken(uint256,string,string)](crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol#L616-L629) uses keccak256(bytes)\n",
        "first_markdown_element": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol#L616-L629",
        "id": "4ab8cef1737bb31364e2fe5b52f16aef0b83b7756a4074cb6b2198f51fd82ed6",
        "check": "crypto",
        "impact": "High",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "createShardToken",
            "source_mapping": {
              "start": 19192,
              "length": 567,
              "filename_relative": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
              "filename_short": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
              "is_dependency": false,
              "lines": [
                616,
                617,
                618,
                619,
                620,
                621,
                622,
                623,
                624,
                625,
                626,
                627,
                628,
                629
              ],
              "starting_column": 5,
              "ending_column": 6
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ShardsFactory",
                "source_mapping": {
                  "start": 19100,
                  "length": 776,
                  "filename_relative": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                  "filename_short": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                  "is_dependency": false,
                  "lines": [
                    613,
                    614,
                    615,
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    626,
                    627,
                    628,
                    629,
                    630,
                    631,
                    632,
                    633,
                    634,
                    635
                  ],
                  "starting_column": 1,
                  "ending_column": 0
                }
              },
              "signature": "createShardToken(uint256,string,string)"
            }
          },
          {
            "type": "node",
            "name": "salt = keccak256(bytes)(abi.encodePacked(poolId,name,symbol,shardMarket))",
            "source_mapping": {
              "start": 19488,
              "length": 90,
              "filename_relative": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
              "filename_short": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
              "is_dependency": false,
              "lines": [
                623,
                624
              ],
              "starting_column": 9,
              "ending_column": 75
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "createShardToken",
                "source_mapping": {
                  "start": 19192,
                  "length": 567,
                  "filename_relative": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                  "filename_short": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                  "is_dependency": false,
                  "lines": [
                    616,
                    617,
                    618,
                    619,
                    620,
                    621,
                    622,
                    623,
                    624,
                    625,
                    626,
                    627,
                    628,
                    629
                  ],
                  "starting_column": 5,
                  "ending_column": 6
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShardsFactory",
                    "source_mapping": {
                      "start": 19100,
                      "length": 776,
                      "filename_relative": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                      "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                      "filename_short": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol",
                      "is_dependency": false,
                      "lines": [
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635
                      ],
                      "starting_column": 1,
                      "ending_column": 0
                    }
                  },
                  "signature": "createShardToken(uint256,string,string)"
                }
              }
            }
          }
        ],
        "description": "ShardsFactory.createShardToken(uint256,string,string) (crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol#616-629) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:salt = keccak256(bytes)(abi.encodePacked(poolId,name,symbol,shardMarket)) (crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol#623-624)",
        "markdown": "[ShardsFactory.createShardToken(uint256,string,string)](crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol#L616-L629) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:[salt = keccak256(bytes)(abi.encodePacked(poolId,name,symbol,shardMarket))](crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol#L623-L624)",
        "first_markdown_element": "crytic-export/etherscan-contracts/0x32503febaa15d0bcfda2a9d8fe492d14a750e52c-ShardToken.sol#L616-L629",
        "id": "e23aac471dfa0bf680b0f91ab84c7e497d55afc47870b063e15d9012aaddb977",
        "check": "hash-collision",
        "impact": "High",
        "confidence": "High"
      }
    ]
  }
}