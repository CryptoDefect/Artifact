{{

  "language": "Solidity",

  "sources": {

    "contracts/KWS.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title: KyleWilesStudio\n/// @author: manifold.xyz\n\nimport \"./manifold/ERC721Creator.sol\";\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                                                                                                                                                                  //\n//                                                                                                                                                                                                                                                                  //\n//    ^^::::::::::::::::::::...............................................                                                                                                                                                       .........................         //\n//    ^^^^^:::::::::::::::::::................................................                                                                                                                                                             .....................    //\n//    ^^^^::::::::::::::::::.................................................                                                                                                                                                               ....................    //\n//    ^^^^::::::::::::::::................................................                                                                                                                                                                     .................    //\n//    ^^^:::::::::::::::.................................................                                                                 ..                                                                                                   .................    //\n//    ^^:::::::::::::::................................................                                                   :.             :^^.               .                                                                                    ...............    //\n//    :::::::::::::::..................................................                                                  :^^^:.        .^^^^^:          ..:^:                                                                                       ............    //\n//    ::::::::::::::.................................................                                         .:..      .^^^^^^:.     .^^^^^^^:       .^^^^^^.    .                                                                                  ...........    //\n//    ::::::::::::::.................................................                                         .^^^^^:.  :^^^^^^^^:   .^^^^^^^^^.    :^^^^^^^^:.::^^.                                                                                   .........    //\n//    :::::::::::::................................................                                           .^^^^^^^^^^^^^^^^^^^:. :^^^^^^^^^^  .^^^^^^^^^^^^^^^^                                                                                      .......    //\n//    ::::::::::::...............................................                                             .^^^^^^^^!^^^^^^^^^^^:.^^^^^^^^^^^..^^^^^^^^^^^^^^^^::::^^^^                                                                                ......    //\n//    ::::::::::::...................................                                                ...:::::..^^^^^^^^~!^^^^^^^^^^^^:^^^^^^^^^:^^^^^^^^^^^:::^^^^^^^^^^^^~^^:...                                                                         ......    //\n//    :::::::::::.....::::::::::::::::::::......::::::::::::::::::::::::::::::::::::^^^^~~!7?J5PGB#&&&&@@@!:^^^^^^^^^^^:!~^^^^^^^^^^^:^^^^^^^^^:^^^^^^^^^::^^^^^^^^^^^^^:B@@@@@@&&&#BBG5YJ?7!~^^:::::::::::::::::::..:::::::::::::::::::::::^^^.          ......    //\n//    ::::::::::......5@@@@@@&G@@@@@@@@@@@@@@@@@7G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&~:^^^^^^^^^^^^~~^^^^^^^^^^^:^^^^^^^::^^^^^^^::^^^^^^^^^^^^^::7GPPPGGB#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&.          ......    //\n//    :::::::::.......5@@@@@@#J&@@@@@@&J#@@@@@@@&@@@@@@@@@@@@@@@@@&@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@!5@@@@@@@?^^^^^^^^^^^^^~7~^^^^^^^^^:^^^^^^^:^^^^^^^::^^^^^^^^::^^^^^^^^::::.^G@@@@@@@@@@@@@@@&?#@@@@@@@@@&@@@@@@@@&G&@@@@@@@@@@@@@@@@@@@@@@@.          ......    //\n//    ::::::::....... Y@@@@@@@@@@@@@@@@G&@@@@@@@@@@@@@5.J@@@@@@@@GJ@@@@@@@@@@J:P@@@@@G:?@@@@@@@@@@@#&@@@&&#BG?^::^^^^^^^^^^^!7!^^^^^^^^:^^^^^::^^^^^^:^^^^^^^::^^^^^^^^^^^^::^P@@@@@@@@@@@@@@@@@@B&@@@@@@@&~.P@@@@@@@&?G@@@@@@5P@@@@@@@?:Y@@@@@:          ......    //\n//    ::::::::......::B@@@YB@@@@@@@@@@@@@@@@@@@@@@@@@@@BG@@@@&@@@&!.P@@@@@@@@&#&@@@@@&B#@@@@@@@@@@@@@&?^::::^^^^^^^^^^^^^^^^^^!7!^^^::^^^~~~!~~^^^:::^^^^^::^^^^^^^^^^^^^^:~P@@@@@@@&PP&@@@@@@@@@@@@@@@@@@@&#&@@@@@@@@@@@@@@@@&&@@@@@@@#P#@@@@@:            ....    //\n//    ::::::::.....::?@@@@@@@@@@@@&GY&@@@@@@@@@@@B.^#@&~ ^@B: P@B.   @@#J?@@@@@@@@@@@@@@@@@@@@@@@&P@@@@G!::^^^^^^^^^^^^^^^^^^^^^^~^~!!??JJJJJJYJJJ?!^::^^^^^^^^^^^^^^^^^:^Y#&&&@@@@@#!7&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:            ....    //\n//    :::::::.....:::!&@@@@@@@@@@@&7!B@@@@@@@@@@&    5:   ^    Y     Y^   &@G5@@@@@@@@@@@#5PB#@@@&P@@@@@@#J~^^^^^^^^^^^^^^^^^^::~7??J????777????JJJY?7!::^^^^^^^^^^^^^^^^^~^^^^~7JPB@@@@@@@@@@@@&&#&B&&@@@@@@@@#BGBPPG##@@@@@@@@@@@@@@@@@@@@@@@:             ...    //\n//    :::::::.....:::~&@@@@@@@@@@@@@@@@@@@@7 :J@J                         ^. :@@@@@@@@&5^.....P@@@@@@@@@@&#P!~^^^^^^^^^^^^^^^:~????JJ7!7?YPGBGPY?77JJJJ?7::::^^^^~~^^^^^^^^^^^^^::~P@@@@@@@@@@#BJ5J5JYPPB&@@@BGP5?5?!5YJ5#@5!~^~P&@@@@@P?@@@@@@^              ..    //\n//    ::::::......:::~&@@@@J^P@@@@@@@@@@@@&    ..                            75~?@@@@@&~ .... 7@@@@&GJ!~^:::^^~~~~~~~~~^^^^^.~JJ???J?!5B#&&&&&&&#P!7?J?JY?^^^^^^^^^^^^^^^^^::::~Y#@@@@@@@@@@@GPYJJYJ?JYPG5#@@BBP?PY57J55YJ5  ... ^@@@@@@@@@@@@@^                    //\n//    :::::.......:::~&@@@@BP&@@@@@@@@::!P5                                     5B?~#@@&?^^:!P&@@@@#7::::^^^^^^^^^^^^~~~~~~~:JYJJ??J!Y#&&&&&#&#&&&5!7?JJJJ?:^^^^:^^^^^^^^^^!JP&@@@@@@#@&&&@@&5PJYYYJ?7!BPB&@&G&#JYJYY755J7B~.  ..Y@@@@@@@@@@@@@^                    //\n//    :::::........::^&@@@@@@@@@@@@@@@.                                        ..   &@@@@@@@@@&@@@@@@@#Y~^:::^^^^^^^^^^^^^^^~JYYJ???77B#&&&####&&BY!7?JJJ?J::^^^^^^^^~~~~~75B&@@@@#5#JP5YYB&@&GY?Y?YJ?YGPB#&BB##BPP5J5GGY#@@#YYP&@@@@@@@@@YP@@@^              ..    //\n//    ::::::.........^&@@@@@@@GJ@G5GB&5                                            B@@@@@@@@@57&@@@@@@@@@&BY7!~^^^^^^^^^^^^^^!YJYJJ??!75GB#####GP?777?JJJJ!^~~~~~~~~~~~^^^^:::^~?PG#B?JY5P5J&&@#BBGP#GGGBBG#PBPBPPP&BB#GP&&#@@@@@@@@@@@@@@&&@@@^              ..    //\n//    ::::::.......:.^&@@@@@@@&&@!    .                                          .5#BBB&@@@@@@@@@@@@@@@@@@@@@@&#5?!~^^^^^^^~!~7JY5YYJJ?7!!????7!777JJJYYY7::::^^^^^^^^^^^^^^^^^::::!P5YJYJ?!##&5##5P##GGBB5P#BGP&PBG##&GPB#G#&##GYP55P#&&@@@@@@^              ..    //\n//    :::::........::^#@@@@@@@@5::                       .   ...                      ^#@@@@@@@@@@@@@@@@@@@@#J!^^^^^^^^^^^^^:^~7JY55YYYYJJJ????YJ5YYJJY?7^~^^^^^^::::::::^^^:::::^7?5P555Y!B#BG##BB#BY#BB&&@&GG##5#BBP#BG###JGJG5?57Y?JP5G&@@@@^              ..    //\n//    :::::........::^#@@@@#!~~^                     .:^!!!!!!~!~^..               .?#@@@@@@@@@@@@@@@@@@@@5^:::^^^^^^^^^^^^::::~7?Y55Y5Y5YY55YY5Y5YYJ?7~^:^^^^~~~~~~~~~^^^^~!?YG&@@@BPPBP#YB&#5#G55#BJ##55YY5J7Y5J7J5GBB5##B&&5YPYPY?J?PJGP@@@@^              ..    //\n//    :::::........::^B@@@@&7                     .:~!!!!!~~~~~!~~^^.           :J#@@@@@@@@@@@@@&&@@@@@@#!:::^^^^^^^^^^^^^^^^^^^^^!?!?YY5YYYYYYYJ77?!!^:::^^^^^^^^^~~!JB@@@@@@@@@&B#BY5YPGBPG#B#&&G5GY5YJ5GB#&#&&&&#BGPYPGBGBGB75JYPY??YP?P@@@@~              ..    //\n//    :::::........:::B@@@@@@&Y:                ^7~!!~!^^^:::^!!^^^^^           ...:7&@@@@@@@B7^::?#@@@B~^:::::::::^~~~~~~^^^^^^^^:::^^~!!!^7!!~~^:^^^^^^^^^^^^^^^^^^^^^J&@@@@@@B#JJPYYJY?P&#BG#BPBP!?G&&&##&&&&&&&&&&&&#GPYBBBGPYJP5JJG#PPB&@@~              ..    //\n//    :::::........:::G@@&P7^..               .!!~~7:::::::::::~^^~^^.            .!G@@@@@###^ ..  ?@@@@@@&&&&####&&G!^^^^^^^^^:::^^^::::^^:^^^^^^^^~~::^^~~^^^^^^^^^^^^:^B@@@@GGGJ7P7J77YBGGG5#BGGJP&&&####G5J7!~!7JPB&&#&B55G&@#GBB&GYG5J55P#~               .    //\n//    ::::..........::G@@Y.                 .!!~~!~::::::::::::~^^^^^          :J#@@@@@@@#^.YG^..!J&@@@@@@@@@@@@@@@J::^^^^^^^::^^^^^:::^^^^^^^^^^^^^^~!^::^^^^^~~!7~^^::::.P@@@&#PGYB5P5YG#####BB&?G#######7::::::::..:!G&#&###JB&#5GBPJ5YYJ57G~              ..    //\n//    ::::..........::P@@@#!.              .7~~~!!::::::::::::^~^~:~:           ..~Y#@@@@@@&@@@&&@@@@@@@@@@@@@@@@@P::^^^^^:::!Y~^^^^^^^^^^:~!:^^^^^^^:^!!::^^^^^^^P@@&##BBBB@@@@@@#GP7~7~!!?JY5YG##&#&####5:::::::::::::.J##&&##GB#GBG7PYPY5Y5P~ .            ..    //\n//    ::::..........::5@@@#Y~.             ~~~^~~7^:::::::::~!!!~~^^                 .Y@@@@@@@@@@@@@@@@@@@@@@@@@@&^::::::~7P&@7:^^^^^^^^^:^^!!:^^^^^^^^^!Y!^^^^^^^:B@@@@@@@@@@@&G7:.              5&###&##5::::::::::::::.P#&&#@BJ&#YBBYPP?YYY#7 .            ..    //\n//    ::::..........::5@@P^                ~!~~~~!7~^^^^^~!!!!~^:.                .:!?P&&&@@@@@@@@@@@@@@@@@@@@@@@B~7?YPB&@@@@G:^^^^^^^^^:^^^^77:^^^^^^^^:Y@#Y!^^:::!@@@@@@@@@@B.                  :&&B#&&B#J^::::::::::::.P&&&&B&YBGG#GY5GGGB@@7 .            ..    //\n//    :::::........:::5@?. ...             .!!~~^~^!!!!!!7!~~^:.         .~5B##&&@@@@@@@57@@@@@@@@P5@@@@@@@@@@@@@@@@@@@@@@@@@5:^^^^^^^::^~^^^^JY^:^^^^^^:~@@@@@&B5J?@@@@@@@@@@@&5^.                ~&BBB&#&#B7^::::::.::~P&&&&##&P&&&P#&G&&@@@@7 .            ..    //\n//    :::::........:::5@@@@5:               .:^!~!7!!!~!!^^.   ..           7@@@@@@@@@@@@@@@@@@@@@##@@@@@@@#J&@@@@@@@@@@@@@@@&::^^^^::~Y~^^^^^^5&?^::^^^:J@@@@@@@@@@@@@@@@@@@@@@@@G.                ~#&#B#&#&#GP5?!!!?5G#&#B&#BB#&&&B5GGPYPB##@7 .            ..    //\n//    ::::::.......:::P@@P.  .                    .. .           :^.          B@@@@@Y5@@@@@@@@@@@@@@@@@@@@@&B@@@@@@@@@@@@@@@@@5:::::~G@@#~:^^^:J@@&5~:::^&@@@@@@@@@@@@&&&B&@@@@@@?                   .5&#&##&###&&&&&&&&&&##&#&B&GY&GPBG5PYPPYP~ ..           ..    //\n//    ::::::.......:::P@@GG#B^                                     ^P5~.       #@@@@@@@@@@@&B55P7?77PG#&@@@@@@@@@@@@@@@@@@@@@@@J:^?G&@@@@@5^::7#&@@@@#J!&@@@@@@@@&P~^^::. .~JB&@@BJ~:...::             .J&@&&&&&&###&&&&&&&#@GYG&GBBP5PYJYJY57J~...          ...    //\n//    ::::::.......:::G@@@@B    ::    ..                            .@@@&#PJ!~:7@@@@@@@@B?^:          .:J#@@@@@@@@@@@@@@@@@@@@@@B#&#B&@@@@@&JY&#&@@@@@@@@@@@@@@&Y:.           :J&@@@@@@@G.                ~~JB#&&&&&&&&#&&#G?. .7P##JYPYYJ5JJYP~...          ...    //\n//    ::::::.......::^G@@@@^^JB@G  :55.      .                       !@@@@@@@@@@@@@@@@B?.                .Y&@@@@@@@G?7.7!#@@@@@@@#BY~5&&@@@@@@###@@@@@@@@@@@@@#?.               ~#@@@@@Y                      .^!?JYYJJ?!^.       .~Y#B5J55J?#B~...         ....    //\n//    ::::::......:::^B@@@@@@@@@?Y&@&      :Y             7    .?.    &@@@@@@@@@@@@@#?.                   .~P@@@@@Y  .:. .P@@@@@@7^:.Y###&@@@@###@@@&7!B@@@@@P^     .:^^~~^.     ^B@@@#                                              ^5&G5#BG&@7...         ....    //\n//    :::::::.....:::^B@@@@@@@@@@@@@7    .Y@?            .@B.  .@@#Y~.#@@@@@@@@@@@@&Y:.      .:^^^::.      .~B@@@@#:. . .~#@@@@@&:::.Y######&#7!!&@@@5J&@@@@&!.     ~~~~~~~~:     7&@@P    .^7P7                                       P@@@@@@@7....       .....    //\n//    ::::::::...::::^B@@@@@@@@@@@@@.  :5@@@!      :?    B@@@5.5@#&@@@@@@@@@@@P&@@@G::      :^~~~~~~^.      .Y@@@@@@B7YJB@@@@@@@&:::.Y#######5...&@@@@@@@@@@@Y.     :~~~~~~~:     ~#@@@&&@@@@@@:       ~                                P@@@@@@7.....     ......    //\n//    ::::::::....:::^B@@@@@@@@@@@@@~J#@@@@@5     :&@!  G@@@@@@@@@#&@@@@@@@@@@G&@@@G:       ~~~~~~~~~.      .J@@@@@@@@@@@@@@@@@@&:::.Y#######5..:&@@@@@@@@@@@@5^:.   .^^~~^.     .J@@@@@@@@@@@@.    .J&?                        ^        &@@@@@7.....     ......    //\n//    ::::::::....:::^B@@@&#@@@@@@@@@@@@@@@@@:   7@@@@P#@@@@@@@@@@@YJ&@@@@@@@@@@@@@#^..     .^~~~~~^:      .~#@@@@@@@@@@@@@@@@@@&^::.Y#######5..:&@@@@@@@@@@@@@&Y~.            :JB@@@@@@@@@@@@@J:!P&@&&7                        5@G!:.   Y@@@@@7.....    .......    //\n//    :::::::::...:::^B@@@#?@@@@@@@@@@@@@@@@@&:^B@@@@@@@@@@@@@@@@@@#::G@@@@@@@@@@@@@&?^       .....       :?&@@@@@@@@@@@&##@@@@@&^::.Y#######Y..:&@@@@@@@@&##@@@@#J.         .:?&@@@@@@@@@@@@@@@@@@&BB@G       J.      .#~      !@@@@@&#B&@@@@@7.....    .......    //\n//    :::::::::...:::^B@@@@@@@@&?@@@@@@@@@@@@@@@@@@@@@@@@@@@G&@@@@@@&:.P@@@@@@@@@@@@@@#~.               .7P@@@@@@@@@@@@@P.~&@@@@&^:::Y#######Y..:&@@@@@@@@P^~@@@@@@&P5J#J5Y?P5@@@@@@@@@@@@@@@@@@@&BB&@@@!    7&@#.     B@@&5^   Y@@@@@@@@@#:^#@7.....    .......    //\n//    ::::::::....:::^#@@@@@@@@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@P&@@@@@@@#:.G@@@@@@@5!B@@@@@G!!.     . .:!^7#@@@@@@@@@@@@@@@@&@@@@@@&^:::Y#######Y...&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&BG&@@@@@@J7G@@@@@@7  .B@@@@@@&G5@@@@@@@@@@@B#@@7................    //\n//    :::::::::..::::^#@@@@@@@@@@@@@@@B@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@#::G@@@@@@5J#@@@@@@@@#&PB7GY5B&@#@&&&@@@@@@@@@@@@@@@@@@@@@&^:::Y#######Y...&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BJG@@@@@@@@B!~Y@@@@@@@@@@@@@@@@@@B5@@@@@@@@@@@@@@@@@@@@@@@@@@?................    //\n//    :::::::::::::::^#@@@@@#G&@@@@@@&Y@@@@@@@@#7~!7?J5GB&@@@@@@@@@@@@@B::B@@@@@@@@@@@@@@@@@@@@@@@@@&#&&@@@@@@@Y:?&@@@@@@@@@@@@@&::::Y#######Y..:&@@@@@@#JP@@@@@@@@@@@@@@@@@@@@@@@P~5@@@@@@#!..!&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@P7#@@@@@?................    //\n//    :::::::::::::::^#@@@@@?:5@@@@@@@@@@@@@@@@@@P^:^^:^^^~7JP#&@@@@@@@@G:^#@@@@@@@@@@@@@@@@@@@@@&##&@@@@@@@@@@G?G@@@@@@@@@@@@@@&::::Y#######5..:&@@@@@@P^J@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Y:.^B@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@&&##&@@@GJ#@@@@@?................    //\n//    :::::::::::::::^#@@@@@@@@@@@@@@@&@@&#&&@@@@@&Y^^^^^^^^^^^~75#@@@@@@G:^&@@@@@@P7&@@@@@@@@@BYG&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&^:::Y#######5..:&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@G^..Y@@@@@@@@@GJ@@@@@@@&!G@@@@&&BP5?!~^^7P&@@@@@@@@@@@@?................    //\n//    :::::::::::::::^#@@@@@@@@@@@#?!:^~^..:.?#@@@@@&Y~^^^^^^^^^^::~JB@@@@P:^&@@@@@@@@@@@@@@@B^!&@@@@@@@@&B@@&JG@@@@B&@@@@@#G@@@&^:::Y#######5..:&@@@@@@@@@@@@@@@@&&#BBGPPP555B@@@@@@@&?..~&@@&B&@@@@@&#@@@@@@@@&#GY7!^^:::::!G@@@@@@@@@@@@@@@@?................    //\n//    :::::::::::::::^#@@@@@@@@@&?.           ^5&@@@@@@G7^^^^^^^^^^^::!P@@@Y:^#@@@@@@@@@@@@@J.J@@@@@@@@@B7@@@@G#@@@@&Y@@@@@B5@@@@^:::Y#######5...&@@@@@@@@@@#G5?!^^:::::::.:7B@@@@@@@B^..Y@@@@J^G@@@@@@@@@@@@#P?~:::::::::!P&@@@@@@@@@@@@@@@@@@?................    //\n//    :::::::::::::::^#@@@@@@@&J^.              ~P@@@@@@@&P7^^^^^^^^^^^:~P@@Y:^#@@@@@@@@@@&!.P@@@@@@@&G7:#@@@@@@@@@@@PP@@@@@@@@@@^:::Y#######5.:.&@@@@@@#57^::::::::^^^::^5&@@@@@@@@Y:.~&@@@@@@@@@@@@@@@@@#Y~::::^^^^::~Y#@@@@@@@@@@@@@@@@@@@@@?................    //\n//    :::::::::::::::^#@@@@@@5^.    .:~!!!^.     :P@@@@@@@@@&BY7~^^^^^^^^:!#@J:~&@@@@@@@@@!:G@@@@@@BJ^:.G@@@@@@@@@@@@@~#@@@@@@@@@^:::Y#######P.::&@@@&P!:::::^^^^^^^:::!G@@@@@@@@@#~..Y@@@@@@@@@@@@@@@@&P!::^^^^^^^:^7B@@@@@@@@&5&@@@@@@@@@@@@@?................    //\n//    :::::::::::::::^#@@@@@G^..   .!7!!!!7!     :P@@@@@@@@@@@@@@&#PY7!^^:::Y&?:~&@@@@@@@J.P@@@@#J~:::.P@@#~G@@@@@@@@@7^&@@@@@@@&^:::Y#######P.::&@&Y^:::^^^^^^^^:::~5&@@@@@@@@@@P:.^#@@@@@@@@@@@@@@@&J^::^^^^^^^:~Y&@@@@@@@@@@&J&@@@@@@@@@@@@@?................    //\n//    :::::::::::::::^#@@@@@B^..   :77!!!!!^    .?#@@@@@@@@@@@@@@@@@@@@@&BPJ!!P?:^#@@@@@B:?@@@P!::::::G@@@@@@@@@@@@@@@?:7@@@@@@@&^:::Y#######P.::&B^::^^^^^:::::^7P&@@@@@@@@@@@&7..7@@@@@@@@@@@@@@@&?:::^^^^^^:^7B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@?................    //\n//    :::::::::::::::^#@@@@@@G7:    :~7!!~:  . .7&@@@@@@@@@@@@@@@@@@@@@@@@@@@@#G!.^#@@@@7:&@G~::::::!&@@@@@@@@@@@@@@@@~::Y@@@@@@&^:::Y#######P::^5::::::::^~7YG&@@@@@@@@@@@@@@B^.:P@@@@#JB@@@@@@@&Y^:^^^^^^::~5&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@?................    //\n//    :::::::::::::::^#@@@@@@@P~.     .      .?P@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@P.:B@@&^J@?::^^:::P@@@@@@@@@@@@@@@@@#:^^:P@@@@@&^:::5#######P::::::^~7YG#&@@@@@@@@@@@@@@@@@@5:.^#@@@@@#?G@@@@@@G~:^^^^^^:                                                          //\n//                                                                                                                                                                                                                                                                  //\n//                                                                                                                                                                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\ncontract KWS is ERC721Creator {\n    constructor() ERC721Creator(\"KyleWilesStudio\", \"KWS\") {}\n}\n"

    },

    "contracts/manifold/ERC721Creator.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\ncontract ERC721Creator is Proxy {\n    \n    constructor(string memory name, string memory symbol) {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6;\n        (bool success, ) = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6.delegatecall(abi.encodeWithSignature(\"initialize(string,string)\", name, symbol));\n        require(success, \"Initialization failed\");\n    }\n        \n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n     function implementation() public view returns (address) {\n        return _implementation();\n    }\n\n    function _implementation() internal override view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }    \n\n}\n"

    },

    "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/Address.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"

    }

  },

  "settings": {

    "remappings": [

      "@openzeppelin/=node_modules/@openzeppelin/"

    ],

    "optimizer": {

      "enabled": true,

      "runs": 300

    },

    "metadata": {

      "bytecodeHash": "ipfs"

    },

    "outputSelection": {

      "*": {

        "*": [

          "evm.bytecode",

          "evm.deployedBytecode",

          "devdoc",

          "userdoc",

          "metadata",

          "abi"

        ]

      }

    },

    "evmVersion": "london",

    "libraries": {}

  }

}}