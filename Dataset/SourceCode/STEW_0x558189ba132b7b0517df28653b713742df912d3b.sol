{{

  "language": "Solidity",

  "sources": {

    "contracts/STEW.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title: {BRAINSTEW}\n/// @author: manifold.xyz\n\nimport \"./manifold/ERC1155Creator.sol\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n//                                                                                                            //\n//    ~~~~~!~!!!!!!!!!!!!!77777777777777777777777777777777777777777777777777777777777777777777777777??????    //\n//    ~~~~~~~~~~~~~~!!!!!!!!!!!7?JJJJJ?77JYYYYJ777777777777777777777777777??JJJJ???777777777777777777?????    //\n//    ~~~~~~~~~~~~~~~!!!!!!!!JPGGGB###BGB#####BG5?!7!777!7777777777777?J5BGPGB###BGG5Y?77777777777777?7???    //\n//    ~~~~~~~~~!!!!!!!!!!!7YG##BGPGGGGGBBBBBBBGGBB?!!!!!!!!!!!77777!?PGG?5P5YYYJJYBGG#BP?7777777777?7?????    //\n//    ~~~~~~~~~!!!!!7777!?G####GGGBBBBBGBBGBBBBBBBB7!!!!!!!!!!!777!?GGY!~~~~~~~~~7J~~YB#BY77777777?7??????    //\n//    ~~~~~~~~~~~~!!!!!!?BBBBBPGB##BPPPGPPGPPGGGBB#5!!!!!!!!!!!!!!!Y?~~~~~~~~~~~~~~~^7GPPG?777777777777777    //\n//    ~~~~~~~~~~^~~~~!!!PPP5GGGBBBG##B###BBBBBBBGBBG!~~!!!!!~~!!!!75!~~~~~~~~~~~~~~~^5GGGB?!!!!!!!!!!!!777    //\n//    ~~~~~~~~~~~~~~~~~!GBBBBPBGPB?55YJ???7777!!~7BB7~~!?~~~~~^^^^~Y!~~~~~~~~~~~~~~~^JBBPP7~!!~~^::^^^~~~~    //\n//    !~~~~~~~~~~!!~!!!!G##BY?5#BY~~^~~~~~~~~~!!~7GB7~!!J!~~~~^^^^^?!!????!?~~~J???~~~!7?J?~~~~~^^^^::..:^    //\n//    !!!!!!!!!!!!!!!!!!5##B?J777~~~?77?!!!77?77?J#B7755??Y7~~~~~~!Y!~!77~J?~~~777!~~~^7J?!~~~~~^^^^^:::::    //\n//    !!!!!!!!!!!!!!!!!!J###GYJ~~~~~???7!!~Y77?7~5#G7YJ55J5Y~~~~~~!57!??!~?~77~7J?!~~~!7~^^^^~~~^^^^^^^^^^    //\n//    !!!!!!!!!!!!!!!!!!!G#B##P7~~~?JJ?~77!!!7YY?PGP!J55YY57!!!!~~~YY7JJJ777????JJ!~~~7~:::::^^^^^^^^^^^^^    //\n//    !!!!!!!!!!!!!!!!!!!PG5PPBY!~~7JJ?7JJJJYJ77PBGG!!YYJYJ!!!!!!!!7YJ~~JGGGGBP!~~~~~!~:::::^^^:::::::::::    //\n//    !77!7777777!!!!!!!!GGPGBG5Y!~~~~~!GBBBP!~Y####Y?YYJJJJ77?55?7!7JJ!~7Y5Y?~~~~~!!^::^^^~~~~~^^^^^:::::    //\n//    !77!77777777777777Y#####YYGJ!!!~~~~Y5YJJ??5P5YYYY5YJYYJYPP55?!7J55?!~~~~!!!7YYYJ?7!~~~~~~~~~~~~~~~^^    //\n//    !!!!!!!!!!!777777?5GBGPP55PY!!!!?J?J5YYYJ???????7J???JYJ??77Y5PPGP7!PGGP?!7YPPPPP55?~~~~^^^^^^~~~~^^    //\n//    !!!!!!!!!!!77777!?PBGPYYYYY?Y?!~!PG55Y~^^~?JJ7777777YP5?!!7YJPPPPPJ7PGG5JYPPP555555P?~~~~~~~~~~~~~~~    //\n//    !!!777777777777!?G#GPPYYY5YJYY5J?JP557J5J!!JP5Y77YY7JYY?!!JPYYYJP5555555P55P55555555P7!!!!~~!!!!!!~!    //\n//    !!!!!!!77!!!!!!75B#PP5YY555YJ!77J555J!Y5PYPP55555PG5JY7!~7???JPP5555555555555555PP55PJ!!!!!!!!!!!!!!    //\n//    !!!!!7!77!!!!!!?7?J555PPGG5J5?!777YP5YGPGG5Y55YGBPPBBGY7?JYP?YBBGYJ?J?JJY5555P5PPPP5PY~!!!!!!!!!!!!!    //\n//    77777777777777?YJ??77JYGGPY5PYGPYJ!7?5BGGPY5PP5GBPPGGG5~Y#B57G#BPP5!?!?!77JPGPPPPGPPG5!!!!!!!!!!!!!!    //\n//    7777777777777?YJJ?J?7!7?YGGBB###GJ~7?~PGGPYGPPPGGPPGBG5!J#B?YPBB##Y??J?7?7YGGGGPPGGPP5777777777!7!!!    //\n//    7777777777777YY?J?!~!?J7!YBBBBBB5~?PY~YBGP5GBGGGBGPGBGG7JBG5PPBG5BJP?5!Y75BBBPPPPPGPPY7777777777777!    //\n//    ????????????J5YYJ!!7?7??JYJBBGBPJ?PBG?7GBPGPGGGPBPGPPGP!5GGGGGG5P5PGGBPG5BBBBBGGPPG5PY??????77777777    //\n//    ????????????JJYP7YGY75JJ55BPGG555YPGGGY?J5P5PGBPPGGP5PJ755PP5PPGBG5YYPBBBBBBBBBBPPBGPJ??????????????    //\n//    ???????????JJ?JY5PPGPJGYGBG5PPYYYY5G5PGPJJ5PPPBGY55P557?JYYJPGGPGGY55Y5PGPGGBBB5JP5GPJ??????????????    //\n//    ?????????J??JJ?JPP555PGBB5PP5PYYJJ5P5P5PG5?J5G5YJJ5P555YY5J5YYPP55GP5PP5PPGPPP5775!?PJ????????777777    //\n//    JJJJJJJJJJJJJ??PPPGBP5PP555PPPYYYYGGP5P5PP5JY5YYYJ5Y5P5JY555G5PYJ5GPP55G55P5PPPPJ5YGP?77777777777!77    //\n//    JJJJJJJJJJJJYJ5BG##GPGP5PPPPPPP55PGG555YYY5YJ5Y5Y55YPP5YY55PGPP5J5P5Y555PP5YYY5YY55GY!!!!!!!~~^^^^^~    //\n//    JJJJJJJJJJJJJYB#BBGPG555YJ5PPGGGPP55555Y5P#BYJY55PPP55Y5YP5YYJP5PGG5?JYYYP5YYYY55P5?7^^^^^~~~^^:::^^    //\n//    JJJJJJJJJJJJJ5###BPGPY555555GBBBGYY5YJYPP5PBYYYJ5PYYYYYYY5PPP5P5YYJGGGP5Y5J5P5Y55J!^7^^^^^~~~~^^^^^^    //\n//    JJJJJJJJJJJJJG#B##BGPG5Y555GGGGGB5Y5YYJY55Y555YJYJ?G?!YJP5Y55PGYYJJYPPPPGPPP555YYY?~7^^^^^^^~~~~~~~~    //\n//    ?J?JJJJJJJJJJBGG#B###BGPJJ5BGPPGB5JYJYYJJ5P55PGP5Y5BYJ57Y5YJ5PGY7JYY55PPPYYY5J~~!?Y?Y7^^^^^^~~~~~~~^    //\n//    ??????777777?#GGBPBB###BGPBG5Y5PGPYJJJ5Y5P55P5PPYYYYPP55P55YYJJYJPBP5YY55?7J?!~~~^~!?^::::..:::^^^^^    //\n//    !!!~~~~~~~~^7#BGPP5PBGB#####BGGBBY?JJJYPPPPPP5YP5YJYPPYYYJYYY???JJ?7!???7~~~^^~~~~~!^..:::.....:::::    //\n//    ^^^:::::^^::!#B#B#BPP55PGBBBBBB#G~~~~~~!?JJ7~!!!!!!!!!!!!!~~~!!~~!77~~~~~!7777!~~~~7^:^^:::::::..::.    //\n//    ^^^:::::^^~^!B#BBGB##BGBGGPPBB#P!~~~~~~~~~~~~~~!77?JJJ?7~~~?Y55YYYYYY7~YPG5YJJYY7~~!^^^^^^~~^^::::^:    //\n//    ~~~~~~~~~~~!!G5JYYJJP#####B#GY7~~~~~~~~~~~~!J5PGPPP5PPBG77PPJJ??JJY5PY~77!~~~~~~!~7~~~^^~~~!!!~~~~~~    //\n//    !!~~~~~~!!!!!J?YJ!?P7?B#####?^~~~~~~~~~~~~!YJ7!!!!!!!!!~~75PGBBBBBG5?~~~77?YJ??7~!!^~~~~~~~~~~~~^^^~    //\n//    ^::::::^^^^^^!7?~?55G~Y###B5~~~~~~~~~~~~~~~~^!??J55J77J7~~7YYJJJ?77YJ~7Y7?PGY7:?J^7~~~~^^^^^::^^^^:^    //\n//    :::::::::::::!!?~5J~5?!J??7~~~~~~~~~~~~~~~~~JJ^~JGGY?.!P?~~P#?^~~^?#7!J5!!Y5J!~J?~~7:::::::..:::^^::    //\n//    :::::::::::::!~?!J57?J!~~~~~~~~~~~~~~~~~~~~!5J~~?Y5Y!~JJ7~~Y5J~~~~?YJ!!7JJ?????!~~~7~^^^^^::::::::::    //\n//    .............^7!J!?GGY!~~~~~~~~~~~~~~~~~~~~~~?JJ?JJJ??!~~~~~~J!~~~J~~~~~~~~~~~~~~~~!!^^^^^^^^^:::..:    //\n//    ....   .......!?~77JBP~~~~~~~~~~~~~~~~~~~~~~~~~~!!!~~~~~~~~~~?7~~~?!~~~~~~~~~~~~~~~!~:^^::::::::::::    //\n//    .:........:::::7?~~7JJ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~77~~~77~~~~~~~~~~~~~~~!~:::::::::::::::    //\n//    ::::::::::::::::!J7!!7~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!7~~~~~~~~~~~~~~~7^:::^:::::::::::    //\n//    :^^::::::::::::^:~?JY7~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~7^^:^^^. .:::::::    //\n//                                                                                                            //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\ncontract STEW is ERC1155Creator {\n    constructor() ERC1155Creator(\"{BRAINSTEW}\", \"STEW\") {}\n}\n"

    },

    "contracts/manifold/ERC1155Creator.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\ncontract ERC1155Creator is Proxy {\n\n    constructor(string memory name, string memory symbol) {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0x6bf5ed59dE0E19999d264746843FF931c0133090;\n        (bool success, ) = 0x6bf5ed59dE0E19999d264746843FF931c0133090.delegatecall(abi.encodeWithSignature(\"initialize(string,string)\", name, symbol));\n        require(success, \"Initialization failed\");\n    }\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n     function implementation() public view returns (address) {\n        return _implementation();\n    }\n\n    function _implementation() internal override view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }    \n\n}\n"

    },

    "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/Address.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"

    }

  },

  "settings": {

    "remappings": [

      "@openzeppelin/=node_modules/@openzeppelin/"

    ],

    "optimizer": {

      "enabled": true,

      "runs": 300

    },

    "metadata": {

      "bytecodeHash": "ipfs"

    },

    "outputSelection": {

      "*": {

        "*": [

          "evm.bytecode",

          "evm.deployedBytecode",

          "devdoc",

          "userdoc",

          "metadata",

          "abi"

        ]

      }

    },

    "evmVersion": "london",

    "libraries": {}

  }

}}