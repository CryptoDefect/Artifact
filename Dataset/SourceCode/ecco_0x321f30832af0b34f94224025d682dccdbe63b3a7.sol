{{

  "language": "Solidity",

  "sources": {

    "contracts/ecco.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title: ecco\n/// @author: manifold.xyz\n\nimport \"./manifold/ERC721Creator.sol\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                                                                                                                //\n//                                                                                                                                                                                                                //\n//    PPPPPPPPPPPPPPPPPPPPPPPPPPPP5P5P55555555555555555555555555555555555555555555555555555555YY555YYYYYY55YJYG###&#BG5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555    //\n//    PPPPPPPPPPPPPPPPPPPPPPP55PPP55PP555555555555555555555555555555555555555555555555555555YYYYYYYYYYYJJJ???JJY555555YJJJJYYY555555Y55Y5555555555555555YYYYYYYYYY55555555555555555555555555555555555555555555    //\n//    PPPPPPPPPPPPPPP5P55P55555555555555555555555555555555555555555555555555555555555555Y5YYYYYYYJ???7???JJJYYYYYYYJJJJJ??7777??JYY5555YY55YY5Y5555Y5YYYYY5YYYYYYY5555Y555555555555555555555555555555555555555    //\n//    PPPPPPPPPPPPPPPPP55P5555555555555555555555555555555555555555555555555555555Y5YY5YYYYYYJJ??????JYY555PGBBBBBBBB##BBBBG5YJ?7!~~7?JYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY5Y5Y55555555555555555555555555555555555    //\n//    PPPPPPPPPPPPPPPP5PP555555555555555555555555555555555555555555555555555555YYYYYYYYYJ????777??????JJJJJYYY55555PPPGBB######BP5J7!~7?JJYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY555Y555555555555555555555555555555    //\n//    5PPPPPPPPPP55555P55555555555555555555555555555555555555555555555555555YYYYYYYYJ?????7777777???JJJJJJJJYYYYYYYYYJJJY55PGB##&&&#B5J?77??JJYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY555555555555555555555555555555    //\n//    5PPPPPP5P5555555555555555555555555555555555555555555Y5Y55555555Y55555YYYYYYJ?7???777777777??JJY555PPGGGBGPPGPP55YYJJJJJYY5GB##&&#BPYJ????JYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY5Y5Y555Y555555555555555555555    //\n//    5PPPPPP5555555555555555555555555555555555Y5Y55Y5555555YY5YY55555Y55YYYYYJ?77????777!!!7?JY55PGBBGGGGGGBBB######BBGPPP5YYYYY5PGB###&##G5YJJJJJYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY5Y555555555555555555555    //\n//    5P55555555555555555555555555555555555555Y55YY5YYYYY5YYYY5Y5Y55555YYYYYJ77???????777?JY5PGGB##BBGPPPPPPPPP5YY55PG#####BGGP555Y5PGB######BP5YYJJYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY5YYY5Y55555555555555555    //\n//    5555555555555555555555555555555555555Y555555555Y5YYYY55YYY5YY55YYYYYJ77??77??????JYY55PGB#&&##BBB#B#BBBBGP55YJ??YG####BBBGGP5YY5PGB######BP55Y?JYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY5YY55555555555555    //\n//    555555555555555555555555555555555555555555Y55555555555Y55Y555YYYYYY?7?7!!??????JJJJJJYYPG#&##BGPPB###GPYYYY555YJJJ5GBBBB#BBP55Y?J5GGBB#&&#BGPPPJJYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY55555555555    //\n//    55YY55YYY5555555555555555555555555555YY555YYYY5YY5555Y5YYYYYYYYYY?777!~7??77?JYYYJJJY5B######BPJJYPPPG5YYJJY5PGP5555GBBGB##BPP5YJJ5PPPBB####BGPPY?YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY55555555    //\n//    5555Y55YJYYYYYYYYYYYYYYYYY555Y55555555Y5YYYY55YYYYYYYYYYYYYYYYYJ7!7!!7??7?JJYJJYYPPGGBG5YY5PB#BJ!JJPB#BBGPPP5GB#BGGPPGB##&####BGP55YYJJJJYPGBBGPG5?YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY5555    //\n//    Y5555YJYJJJJJYYYYYYYYYYYYYYYYYYYYY555YYYYYYYYYYYYYYYYYYYYYYYYYJ7!!!7J?7?JJJ??JYPB##GPYJJJJJJ?Y55!~JPG####B##BB##&##GPPG#&&#&&#BP5PPPPPGPP5YY5PGPY5Y?YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY5555    //\n//    Y55555J?JJ?J??JJJJ?JYYYYYYYYYYYYYYYYYYYYYYYY5YY555YYYYYYYYYYYJ7~~!?J???J???JYPGBGP5YJJJJJJ?7~^!JJJ?PP#######&#####BBGPGB&&#&&#BGGBBBBB####BGPPGBGJ!7JYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY5555    //\n//    Y5555YYJ???????JJJ??JJYJYYYYYYYYYYYYYYYYYYYYY555YYYYYYYYYYYJ?!~~!?J??J???Y5PGGP5YYYJJJJ??77^^^?5P5P5&&&#######&##GGGBGB#&&&&######BGGGGPPPPPPPPGBB5J?JYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY5YY555    //\n//    Y5555YJJJ?????7?JJJJ?JJ7J??JYJYYYYYYYYYYYYYYYYYYYY55555555YJ7!~!?JJ????J55P55YYYYJJJJ????7?JYY5YY5P5########BBBGGGGGBB#&&&####&###BPYJY55YYYY5PPPJGG5YJYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY5Y    //\n//    Y55555YJJ?7?7777????77777777777??JYYYYYYYYYYYY55555YYYJJJYYYYYYY55555555555YYYYJJJ??????JJ5PGGGPPPGGGBBB#BBBP5PPGGBB##&&&&##BB#####BPY??J7^^7JY5Y7Y#G55YJYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY    //\n//    Y55555YY??7777!77777777!!!!!~~!77JJJJYYYYYYYY5YYJ???????7777?????JJJJJJJJJJJJJ????????JJYY555G####B##BB####BP5PGBB#&&&&#P5PGB##BBBB##BP?7!~^!7?J?J5B&BPPYYJYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY    //\n//    Y555YYYYYJ?777777!!!!!!!~~~^~^~7777?JYYYYYYYYYYYYJJJJJJJJJ?????7??????J?JJJJJJJJJJYY555P555PGBG5PG#&&#######BB###&&&&#GY?!!!!?P##BPG##GJ7!7J?77JGPJP##P55JYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY    //\n//    Y55YYYYYYYY?7??77!7!!!!~^:::::^~!7??JJYYYYYYYYYYYYYYYYYJ7??JJJJJ????????JJJJYY55555PPPPP555YYJ????Y5#&&&&&&&&##&#####PP55J?7!~!?G#BPG##Y7!~!J?7?7!JPB&Y7PYJYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY    //\n//    YYYYYYYJJJ????77!77777!~~^:::::^~7?JJJYYJJYYYYYYJYYYYYY~:^7J?777!~!7?????????????????JJY5PGGBBBBGGGGGB#&&&&&&&&#####P55PGPP5Y7!7?P#BPPB57~^.^7J?!?YPB##P5PJJYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY    //\n//    YYYYYYYYJ?????777!77??7!~^::::::^!7?JJJJ?JJYYYYYYYYYYY?^^!J?!!~^..^!77?JJY55GGPPPPGGBB#&&&#BBGGPPPP5YY5PB#&&&#&###BBP5YYPBP55PY?JYBB5YP5Y?~..7YJJJ5GGB#B5PJJJJYYYJJJJJJYYYYJJYJYYJYYYYYYYYYYYYYYYYYYYYYY    //\n//    YYYYYYYYYYYYJ???777??77~^:...:^^^!!7????77?JYJJJYYYYYY7~~?J?7~^:^~7?JJJYPG##&&&&&&&&&&&#####B#BBGPPP5YYY5PG###&&##BPP5YJYBB#G5#P5PBGYJY5P5J7~7J5555GGB#B5PYJJJJJJJJJJJJYJJYJJYYYJJJYYYYYYYYYYYYYYYYYYYYY    //\n//    YYYYYYYYYYYYJ?77777777!~:.....::^~~~~!77!7??JJJJYYYYYJ!~7?J?!~::!??JJYPB##&&&&#&#####BGGBBGBBBBBBBBBGPP5YYY5PGGB##BP55YJ?YGB#5##BB#B5JJJ5PPY?JYGG5Y5GJPB5PYJJJJJJJJJJJJJJYJJJJJJJJJJYYYYYYYYYYYYYYYYYYYY    //\n//    YYYYYYYYYYYYYJ????777!~~^:::::..^^~~~^~!!77??JJJYYYYY?~~?JJ7!^^!7JJYPG#########BBBGGGPPP55555555PPGGGGGPPJJ?JYYY5GBBP55YJ77?5GGGGBBBGYJJJ5P5Y7YGGYYPBYPBPPJJJJJJJJJJJJJJJJJJJJJJJJJJJYJYYYYYYYYYYYYYYYYY    //\n//    YYYYYYYYYYYYYYYYYJ?777!!!^^^~^^::^^^^:^~!!!7??JJYYYYY?!!?YY7!^~7JY5GBB##BBBBBGPPP5YYYJYYJYYJJYYYJJJYYYYJYJ?777?JJJ5GGP55YYJ77?J5YPGBBPYJJJGG57JPGYYPB##GGPJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJYJYYYYYYYYYYYYYY    //\n//    YYYYYYYYYYYJJJJJJJ?J??7!~~~~~~~~^^^^^::^^~~~7???JJYYY7!7JYJ7~~7?Y5GB#BBGPP55YJ??7?7777777777777777777777!7!77777?JJYGGPYYY5Y?7?JYYYPGBP5YYPGG5PGGY5GB##PP?JJJJJJJJJJJJJJJJJJJJJYJJJJJYJJJYYYYYYYYYYYYYYY    //\n//    YYYYYYYYJYJJJJJJJ??????7!!~~~~~~!~^:::.:^^^~~!!7??JJY?7?YYJ7~!JYPBBBBGG5YJ?7777????????J?????????????7????????????JYYPGG5J?5PY?JJYJJYPBBGGGGGGBBPYP##B5Y5YJ??JJJJJJJJJJJJJJJJJJJJJJJJYJYYYYYYYYYYYYYYYYY    //\n//    JYYYYYYJJJJJJJJJJJJ??????77!!!~^!~^^^.  :^^^^~!777??Y?7?5YJ7!?J5GBBBG5Y?????JJJJJ??????????????J????????????????????JYY5PP5Y5BPJYYYYY77YGB###BBB?7BBPY5Y?Y5Y???JJJJJJJJJJJJJJJJJJJJJJJJJYYYJYYYYYJYYYYYY    //\n//    JYYYYJJJJJJJJJJJJJJJJJJ???????77!~^^:^^. :^:^!!!!!77?J7?5YJ77?YPBBGPYJ???JJJJ??????????????????????????????????????????J?JY55YPP?J5GBG?7?J?JPB#B5P#5JJJY5J?J5YJJJJYYYYYYJJY55PYJJJJJJJJYYJJJYYJYYJYYYYYY    //\n//    JYYYJJJJJJJJJJJJJJJJJJJJJJJJJJJ??7!~^^^^:.::^^^^~~~!!Y??55Y?7J5GBGPJ???JJJJ????????????????????????????????????????????????JYYY55?75B#GJ?J?^~?5B#PY5?JJJJJJ?JJY55555555555555YJJJJJJJJJJJJJJJJJJJJYYYYYY    //\n//    JYJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ?7!^^^^..:^^^::::^^7Y?555J?YPGBPY??JYYJ????77??????????????????????????????????????????????JYYYYJ7JPBG5JJ?!7YYJ?5YJJJJJJJJYYJJJYYYYYYYYYJJJJJJJJJJJJJJJJJJJJJJJJJJJYYY    //\n//    JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ?!:^^^^..^^^:....::YJ5P5YJYPGG5JJJY5J?77777????7????????????7???????????????????????????????JYYYYJ?YGG5YJ7?JY7?GYJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJYJJ    //\n//    JYJJJJJJJJJJJJJJJJJJJJJJJJJ????JJJ??7!!^.::..:^:::::..~PPG5YYYPGPYY555Y??!!!!7???7!777???????77??????????????????????????????????JYYYYJJ5GP5J!?J??GP?JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ    //\n//    JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ???????77!~:..  .:::::..:5GG555J5GPYY5PYJJ!!~~!!7!!!!!!!???777!7?????????????????????????????????????JYJY5JYPPP??5YJPB?JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ    //\n//    JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ??????77!!!:  ....::....7BBGP5J5GP55PGJJ?~~~^^~^.^~~^!7??77!!!???????????????????????????????????JJJJ?JYJPYYPG57JJYYGYJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ    //\n//    JJJJJJJJJJJJJJJJJJJJJ??JJ?JJJJJJ???777!!!~^.. .....  ..^5#BP5YYGG55GGJ?!^^^::: .::.:^~!~~^^~7????77!7???????????????????????JJ?JJ?JJJ?JYJ55YPY7!~7JG5?JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ    //\n//    JJJJJJJJJJJJJJJJJJJJJ?7???7??JJJ?7!~^~~~~^^:....  .  ...!G#BP5JPGGPBGJ?~:::..     ..:...::.!???77!!!??????????????JJ??????JJJJJJJJJJJJJJYYY55JJ7^7YGYJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ    //\n//    JJJJJJJJJJJJJJJJJJJJJ??77???777!!!!~^::^::::.. .     ....JB#GPJJGGGBGJ?^.....     .......^^!?7~~!7??????????????JPJ????????JJJJJJJJ?JJJJ?J55Y555Y5GY?JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJYP5    //\n//    JJJJJJJJJJJJJJJJJJJJJJJ??77777!!!~~~^:::......         .:^5##GP?YB55GJ?^......   ...::::^~~~^!77???????????????Y5PJ??????JJJJJJJJJJ?J?JJJ?J55YYYYYYJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJY5G#&    //\n//    JJJJJJJJJJJJJJJJJJJJJJJJJJ??77!!~~^::::......        ....:~P#BG5!PG55J?~..........::^::^^^^~77^!??????????????J55P5???JJJJJJJJJJJJJJJJJJJJJ?JYYYYJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJYPPB    //\n//    JJJJJJJJJJJJJJJJJJJJJJJJ?????!!!~~^^::::.....         . ..:^5BBGYJPP5J?7::........:::::^^!!^~~7??????????JYJJJJJYYYJ?7??JJJJJJJJJJJJJJJJJJJJJJJJ?JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJY5Y5    //\n//    JJJJJJJJJJJJJJJJJJJJJJJJJ?7777~~~~^~^^^:.....             ..:JPGB5YPG?JJ^:.. .::::::^^^^~!!!7??????????Y5YJYY555555P5YJ???JJJJJJJJJJJ?JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJYY5P    //\n//    JJJJJJJJJJJJJJJJJJJJJJJJJJ??77~~~!!!!!~^^::........   ........!YPGPYPYYY7^:..::^^^^~^^~^~77??????????Y5P5YYYJJJJYYYY5PPP5J?JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJY55YJJJJJJJYYJYPB#    //\n//    JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ?7!~!7777!~~^::::................^?5GPY5P5Y7:::::::^~~!!~~!77???????JJ5P5YJJJJJJJJJJJ?J?J5PP5JJJJJJ??JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ5YYYJJJJJJY5P55GB#&    //\n//    JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ7!???7777!~^^:::::::............:!J5PYYP5Y!^^^^^^~~^~~~!~~!????????PPYYJJJ???JJJJJJYJ????5BB5YJJJJ??????J??JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJYJJ5PY5JJY5PGBBBG#&    //\n//    P5?JJJJJJJJJJJJJJJJJJJJJJJJJJJJJ?JJJJJ???7!~^::::::...............^7Y5YY55Y!^~~~~~~!~^~!77777777?J5P5J??77???????J?J??777?5BBP5J???J??JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJY55PB##BGPG##&&#BP5P&    //\n//    PG5YYJJJJJJJJJJJJJJJ?J?JJJJJJJJJJJJJJ?????7~~^^^:::..............  .~?YYJY557~~~!!~!~~!7?777777?YYJ?77JY!77???????????77???5PGG5Y?JJJ?JJJJJJJ?JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJYP##&&&#&&&&####BYB#&#    //\n//    GBGPP55YJJJJJJJJJJJ??JJJJJ??JJJJJJJ?J????777~~^^^^::::.......     ...:7JYJ5P5?!!!!!!!!7!7777!7J?!~~~~~~!!7?????????JJJ?JJ?JJJYGBG5?JJ?JJJJJJJJJJJJJJJJJJJJJJJJJJJJ?JJJJJJJJJJJJJYPG##&&&&########BPB&##P    //\n//    ##BBBGGP5JJ?JJJJJJJJJJJ?JJJJJJJJJJJ??????7!!!!~~^~~^^:::......  .......~JYY5P5Y7!!~^^^^^^~!!!~~^~^^^^^~~!!7???????????JJJ?J??JYPB#5?JJJJJJJJJ?JJJJJJJJJJJJJJJJJJJJJJJJJ?JJ?JJ?J5GGBB&&#########BGB#&BP5P    //\n//    GGGPB#BBGPJJ?JJJJJJJJJJJJJJJJJJJJJJJJJJ???7!!~~!~~~::::................ !J5Y5PPY?!^:.....:::^^^^^^^^^^^~!!!777?????J??JJ??J?!!!JPB#Y?JJJJJJJJJJJJJJJJJJJJJJJJJJJJJ??JJJJJJY55YPGBBB#&#########BBB#&GP5G#    //\n//    BBBGB##BBGGG5YYYJJJJJJJJJJJJJJJJJJJJJ???77777!^^~^::...   ............. :YPP5PGGPY7~:.   :..::::::^^^^~~~!!777??J??JJJJJJJ?J77^^75BBY??????JJJJJJJJJJJ?JJJJJJJJJJJJJ??JPPPGBGGPY5GB##&&&#####BBB#BPGGBGP    //\n//    ##&&#BB##GP5YJJJJYYJJJJJJJJJJJJJJJJJJJJJJ?777!~!~^::...   .....::......:?PBBP5G#BG5Y?!^:..  .:::::::^^~~~!77??JJ??????J?J??7777??7JBB5YYYYJJJJJJJJ?JJJJJJ??JJJ?JJ5YJ5PPG5PP55PPBB&&&&&#####BBGGB#GP55GBB    //\n//    &&&&&###BGP55YJ?YP5JJJJJJJJJJJJJJJJJJJJ?J???7777^::::......  ..::::..^!JP####PPB##BGGPYJ?!~^:::::^^^~~~~!7?????????J??JJJ?J????7775BGPGBGGPP55YJJJJJJJJJJJJJJJJJYJYPGGP5Y5PPG#B#&##########BBGBGP555B#&&    //\n//    #GB#GBBBBG555P55GBP5JJJJJJJJJJJJJJJJ??JJJJJJ???7!^^::........::^^^:~7YPB######5PB####B55YY55YJ??7!~~~~~~77?7???????J?J?JJ?JJJJ?77G&#P?JJ??5YYJJJJJJJJJJJJJYJJJJY55GGP5YY5B##B55555BB##########GB#B#&&&##    //\n//    PPP5YJJYYYYY5YPPBBP555J???JJJJJJJJJ?7JJJJJJ???777!!!^^:::::.::~!7?JPB#&#######BYG####55P5BBPYGPP55YJ?7!777?7??????JJJ??JJJJJJJ?77#GJ??7JJYPPPPP55YYYYYJJJJJJJY5PPPP5PGPGB&#GYYYY55G########&####&&&&###B    //\n//    GGBGP5YJYPYYY5GBBPY555JJJ??JJJJJJJJJJJJJJ????777!!!^~~^^:::^^!?YPB####&#&#####&P5B#&PPP5GGPYGBBBGGGPP5YJJ?????JJ?JJJ???JJJJY55Y?7YY?JJJJJJ5PPP555YYYJYJJJJYYYPGPP55BBBB###B5PPPGPGBBBBBGPG#&#########BBB    //\n//    GG5555PPP5YY55BBG5JJJJJJYJJ??JJJJJJJJJJJ?????777~~~^^^::^~7?YPGGB########&&###&#BB#&GPPGBP5B####BBBBBBGPP5YYJJJJJJJJJJYYYYJYJJJJJ?!775Y5YY55555YYYYYYJYYYY5PPPPPYYGGGGB##BGGBG#GYY5PGBP5P####&&#####BGBB    //\n//    GPPPPBBGGPGGPPGP5555PPYJJ??YYYYYYYY55YYJJ?7777777!!~^^~!J55G###GBB####&##&&#&&&BG&&G5BBBGP#&#############BBGG5YJJ55YYYYJYYYPPYY55JJ7!?JJJYYYYYYYYYYYYY555PP5555YPBGBBB#BBGGGP55YJY5PBBP#&#BGGGGGGGGGGGPP    //\n//    GBBGGBGGGGBBBBBBBBBGGGP555YY55YYYYYYYYYJJJJ?7777^~~~!JPG#P5#G####B###&&###&&&#P~^7?^:~77!PGBB#######BBBBB#####BG5YYYY5PGB#&#G5PPYYJ?7!7?JYYYYYYYYYYY555P5P5555PB#######BGP5555YYYPP5PPPPPPPP5555PP5PP5Y5    //\n//    BBBGGBBBBBBBBBBBBBBBGBBGGP5YYYYJYY55PPPPPGPPYYJY7^!?P##&&GG#G#PP########&&&BP7:::::.::. ..:^~~!!!!7???JY5PY555PGGBPP#&&#&#P5YYYYYYYYJ7!??JYYYYYYY55555555PPPPGBBBBGGPPGPYYY5555PPP55555555PPPPPPP5PPPPP5    //\n//    B#BGGGGGGGGGBBBBBP5555PGPPP5555PGGGGGGGGGGGG55GB?JB##&#&#&&&&&GYPGB#&&##G5?~:..:::~!!!^.::::^~~!7?JJJYYYY55YJ?JYPB#B#####P555YY555YYYJ??JJYYYYJYYY555PPPPGGPP55YYYJYJJYYYYYYY555555PGGGGP55PGPGGGPPPPPPG    //\n//    PPPPPP555555PPPP55YYJYYYYYY555PPPPP555PGGPPPGGGPJ##&&&#&&##&&&#B5YBGBGGY77!~^^:.:~7!!!7~^~!!77??J???J?JJYYJJ??5GGPPGGGBBYYJJJ?????????J7?JJJJJJJJYY5555YY55YYJJJJJJYYYYYYYYJYY5YY5PGGGGPPPPGPP5PPPPPGBB#    //\n//    5YYYYYYYYYYYJJJ?J????777?????????????????????J??G&#&#&&&&&##BGP5???7JJJ?777!!~^::^!!!!!!!!!!~~!!~~!!!!7?77!7YGGPPPPPPPG?^^^^^^~~~~!~~~^:^~~!!!!!!77777777777777777??????J????JJYJYYY55555555P5PP5555555P    //\n//    PGGGGGPPPGGPPP555555YYYYYYYYYJJJJJ?????7777~~~~?&##&&#B5YJ7777777!7???J??77~~~~~~~^^^^^^^::...........:::::!JY5P5PPGGGB7!!!!!!!~~~~~^^^:^^^^~!!!!!!!!!!!!!7!!!!!!!77777???????JJY555PGGBBBBB#BBBBBBBB###    //\n//    5PPPPPPPPPPP5555555YYYJJ????????777!!!!!!~^^^^^P###BY7~^~!~~!7?77??77!J5YJ?7?Y555P55YJJ?777!!~^^^^^^^^^^^^^^:^~7JYY5PGBY!777!!!!!!!!~~~~~~~~~~~~~~~~!!!!!!!!!!!!!!!!7777??????JJJYYY5PGGGGGGBBBBBBB#####    //\n//    Y555YYYJJJ?J?????????????????777?JJYY5J7!!77~!!G#&P77777??????J?777!~~~!!7Y55J?7?7??JJYYYY55Y5YJ?7777?JJ?????7!~~7Y5YYYY7~!!~~^^::::^^^^~~~!~!!77777??777???????JJ?????J?????J??JJJJYY5Y55PGGGBBBBBB####    //\n//    PGPP555555YJ???JJJYJJJJYY555J???JY55YYJJJJ?7!!7B&57??777777777!!!~~~^~~^~!JJJJ77!!!~~~~!7JYYJYJJJJJJJ?????JJJY???77?YP5YJ::^^::...:^~!!7?JY5Y5PP5PPP55Y555P5PPP5YYYYYYJJJYJJYYYYYJYY5555Y555555PPPGGGGGG    //\n//    BBBBBBBGGGGGPPGGGGGGP55PP55YYJ???777777???JJYYJBB????J????????????J????!?????????JJJJ??777!7777???JY55PP5YJYY555555YYP5YJ7^:::::^^~!!77???JYJYYY555YYYYY???7?JJYYY55YYYYYJJYPPBBBBBGGPGBGBBGGBBBBGGBBBBB    //\n//    ####################BGGP5GBBBGPP5JJJYYYYYYYJJJJY7JJJYYYYYYYJJ??JJJ????7!??????JJYYY555P5YJJ?77!!7777?JJ5YYYYJ?YYY55P55555YYJ?????77?JYJJ?JJJ??77!7JYYP555555555PGBBBBBB####B#B##BB#######&#######BB#####    //\n//    ######BBBB#######BBBBBBGGP55555YYJJJ????????????!???JJJJJJJ??7?7??777!~7?77?????J55P5JJJ?JJYYJ??7?????JJYY5YY55YYJYYJ5YY5555YJJYYJ?JJJJYY555YYYYY5Y5555Y5PPP55555555555PPPGBBBBBBB#############B####BBBB    //\n//    BBBBBBBGG5YPPPGBBGBGGGGGPPP5PP5P555PPPPPPPP55YYY?7??77777???77777777!!~!777!777777?J5P5YYYJJJYYJJ????JJYJ55555YJ?????JJJYY5PPP555YJ?JJJ?JYYYYYJ?7???JYYY5YYYJJ777?JYPGB##########&####&##&#&&#&#&&&&&&##    //\n//    BBBBBBBGG5PGBGGGPPPGGGPPPPP5555YYJYYY5P5PGGGGGGP5YYJ????J?7??777777!!7777777!7777777?JYYYYY5PPP55YJ?????JJJYY?7!!77??YJ555PPPGGGGPPPPPPP55PPPGGGGGBBBBGBGGGGGPP5PGGB###########&&####BPGGGBGPGGPGBBB####    //\n//    GBBGGGGGGGPPPP5555PPP5555YYYY5YJ??JY555Y5555PPPYJJ?????J??J????7!77!!77!7777777!777777!!7?J5555PPPP5YJJ?JJ?JPGG5J7!^^~~7JYY5PG                                                                              //\n//                                                                                                                                                                                                                //\n//                                                                                                                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\ncontract ecco is ERC721Creator {\n    constructor() ERC721Creator(\"ecco\", \"ecco\") {}\n}\n"

    },

    "contracts/manifold/ERC721Creator.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\ncontract ERC721Creator is Proxy {\n    \n    constructor(string memory name, string memory symbol) {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6;\n        (bool success, ) = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6.delegatecall(abi.encodeWithSignature(\"initialize(string,string)\", name, symbol));\n        require(success, \"Initialization failed\");\n    }\n        \n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n     function implementation() public view returns (address) {\n        return _implementation();\n    }\n\n    function _implementation() internal override view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }    \n\n}\n"

    },

    "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/Address.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"

    }

  },

  "settings": {

    "remappings": [

      "@openzeppelin/=node_modules/@openzeppelin/"

    ],

    "optimizer": {

      "enabled": true,

      "runs": 300

    },

    "metadata": {

      "bytecodeHash": "ipfs"

    },

    "outputSelection": {

      "*": {

        "*": [

          "evm.bytecode",

          "evm.deployedBytecode",

          "devdoc",

          "userdoc",

          "metadata",

          "abi"

        ]

      }

    },

    "evmVersion": "london",

    "libraries": {}

  }

}}