Contract Address,TP/FP,Description
0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253,T,"CelebrityBreederToken._generateGene(uint64uint64uint256uint256) (crytic-export/etherscan-contracts/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253-CelebrityBreederToken.sol#1008-1059) uses a weak PRNG: _rand < 6827 (crytic-export/etherscan-contracts/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253-CelebrityBreederToken.sol#1034)
"
0xbe97870cb3e42391cb2506164a93a24417a3e709,F,"_AlgobitCoin.getMiningReward() (crytic-export/etherscan-contracts/0xbe97870cb3e42391cb2506164a93a24417a3e709-_AlgobitCoin.sol#270-281) uses a weak PRNG: ((uint256(keccak256(bytes)(abi.encodePacked(digest))) % 5000000) * 10 ** uint256(decimals)) (crytic-export/etherscan-contracts/0xbe97870cb3e42391cb2506164a93a24417a3e709-_AlgobitCoin.sol#280)
"
0x4668e1ab5e073c1361249e1bc1f78c0e52472af3,T,"Presale.buyTokens(uint16) (crytic-export/etherscan-contracts/0x4668e1ab5e073c1361249e1bc1f78c0e52472af3-Presale.sol#1611-1667) uses a weak PRNG: tokenIds (crytic-export/etherscan-contracts/0x4668e1ab5e073c1361249e1bc1f78c0e52472af3-Presale.sol#1666)
"
0x0c346c9126ef3e7a8943e5fca69493e272e48bf5,T,"Indelible.constructor() (app/contracts/Indelible.sol#95-114) uses a weak PRNG: randomSeed = uint256(keccak256(bytes)(abi.encodePacked(tx.gaspriceblock.numberblock.timestampblock.difficultyblockhash(uint256)(block.number - 1)msg.sender))) (app/contracts/Indelible.sol#102-113)
"
0x92ce4274230ac9bbd89a48b799579a4eeae7d0e8,T,"phats.random1(uint256) (contracts/phats.sol#1165-1168) uses a weak PRNG: rand % 2 (contracts/phats.sol#1167)
"
0x6b026adb88f36c9e7ffafa7206aaadc6255e34f0,T,"Poker.play(uint256uint256[]) (crytic-export/etherscan-contracts/0x6b026adb88f36c9e7ffafa7206aaadc6255e34f0-Poker.sol#151-236) uses a weak PRNG: _gType == 4 && _bet.contain(_winNo) (crytic-export/etherscan-contracts/0x6b026adb88f36c9e7ffafa7206aaadc6255e34f0-Poker.sol#200)
"
0xca426a68e39e6619dbab5fe9e1db558ad0d0fb72,T,"SimpleStoix.setStartingIndex() (contracts/SimpleStoix.sol#84-102) uses a weak PRNG: block.number < _block_shift (contracts/SimpleStoix.sol#92)
"
0xccda5213d453388fb5fb43054bc261c8636b1e51,T,"game.play_game(uint8) (crytic-export/etherscan-contracts/0xccda5213d453388fb5fb43054bc261c8636b1e51-game.sol#125-184) uses a weak PRNG: random_player == random_lottery (crytic-export/etherscan-contracts/0xccda5213d453388fb5fb43054bc261c8636b1e51-game.sol#171)
"
0xd634fcd4e073ec169d74fc9b0898d527865ee698,T,"Heaven3D.endRoundDecision() (crytic-export/etherscan-contracts/0xd634fcd4e073ec169d74fc9b0898d527865ee698-Heaven3D.sol#1402-1426) uses a weak PRNG: randNum < 50 (crytic-export/etherscan-contracts/0xd634fcd4e073ec169d74fc9b0898d527865ee698-Heaven3D.sol#1419)
"
0x8485e231a5f6176101313b2e097de898d77baa05,T,"AOW_Character_Base.rand(uint256) (crytic-export/etherscan-contracts/0x8485e231a5f6176101313b2e097de898d77baa05-AOW_Character_Base.sol#2443-2457) uses a weak PRNG: (seed - ((seed / max) * max)) (crytic-export/etherscan-contracts/0x8485e231a5f6176101313b2e097de898d77baa05-AOW_Character_Base.sol#2456)
"
0x0ac9f2dde31eeee4ffb3f2de5578fae7c97b5755,T,"LissajousToken.tokenMintBlockHash(uint256) (crytic-export/etherscan-contracts/0x0ac9f2dde31eeee4ffb3f2de5578fae7c97b5755-LissajousToken.sol#2404-2410) uses a weak PRNG: keccak256(bytes)(abi.encode(_tokenInfos[tokenIndex].mintBlock)) (crytic-export/etherscan-contracts/0x0ac9f2dde31eeee4ffb3f2de5578fae7c97b5755-LissajousToken.sol#2409)
"
0x4e2081f0f6c4c2d08ce1f5888d8eb73783caa271,T,"ThePixelsIncSummerExtension.extend(uint256uint256) (contracts/extensions/summerExtension/ThePixelsIncSummerExtension.sol#34-60) uses a weak PRNG: rnd >= 100 && rnd < 105 (contracts/extensions/summerExtension/ThePixelsIncSummerExtension.sol#44)
"
0xa9fdf6d2232d6b2d95c9a0943de7a8b8cd81b9a7,T,"FreeCell._play(uint256) (crytic-export/etherscan-contracts/0xa9fdf6d2232d6b2d95c9a0943de7a8b8cd81b9a7-FreeCell.sol#222-282) uses a weak PRNG: (_result_toUserMoney) (crytic-export/etherscan-contracts/0xa9fdf6d2232d6b2d95c9a0943de7a8b8cd81b9a7-FreeCell.sol#222)
"
0x5878d03aa50d2c00a921948ea8fa5f2d247f6bdb,F,"Fraxferry.getTransactionsHash(uint256uint256) (crytic-export/etherscan-contracts/0x5878d03aa50d2c00a921948ea8fa5f2d247f6bdb-Fraxferry.sol#909-915) uses a weak PRNG: result (crytic-export/etherscan-contracts/0x5878d03aa50d2c00a921948ea8fa5f2d247f6bdb-Fraxferry.sol#914)
"
0xcb57cfddcbe47ea16325ba83fce86ba29a2400ca,T,"LUCKYRNG.constructor(address) (crytic-export/etherscan-contracts/0xcb57cfddcbe47ea16325ba83fce86ba29a2400ca-LuckyDogeETH.sol#942-963) uses a weak PRNG: goldWinner = _initialWinner (crytic-export/etherscan-contracts/0xcb57cfddcbe47ea16325ba83fce86ba29a2400ca-LuckyDogeETH.sol#945)
"
0x3cae07354674657f3d99f5d16a0e7b676caba8aa,T,"TreasureChest.random(uint256) (contracts/staking/TreasureChest.sol#210-217) uses a weak PRNG: uint256(keccak256(bytes)(abi.encodePacked(tx.originblockhash(uint256)(block.number - 1)block.timestampseed))) (contracts/staking/TreasureChest.sol#211-216)
"
0x4bea754665a141bf4837e743f8ca08507e8afb01,T,"ERC721Enumerable.tokenByIndex(uint256) (crytic-export/etherscan-contracts/0x4bea754665a141bf4837e743f8ca08507e8afb01-Rabbitus.sol#1525-1537) uses a weak PRNG: _allTokens[index] (crytic-export/etherscan-contracts/0x4bea754665a141bf4837e743f8ca08507e8afb01-Rabbitus.sol#1536)
"
0x1b54dafd5a73718c26e482a68c97e9cc9b578422,T,"ThisIsNFT.getRandomPaletteIndex(uint256) (ThisIsNFT.sol#49-63) uses a weak PRNG: (index - 40) / 10 + 18 (ThisIsNFT.sol#54)
"
0x2efa2743b863f3bd6f624ac0d58445bc5fb62bf6,T,"CoBots.tokenURI(uint256) (contracts/co-bots/CoBots.sol#316-336) uses a weak PRNG: renderer.tokenURI(_tokenIdcoBotsSeeds[_tokenId]! coBotsStatusDisabled[_tokenId]coBotsColors[_tokenId]) (contracts/co-bots/CoBots.sol#329-335)
"
0x9cacf0f744fccbeb5930ffbf933750255a96b441,T,"Lottery.random30(uint256) (crytic-export/etherscan-contracts/0x9cacf0f744fccbeb5930ffbf933750255a96b441-Lottery.sol#184-187) uses a weak PRNG: seed = uint256(keccak256()(keccak256()(pool[pool.length - 2]seed)now)) (crytic-export/etherscan-contracts/0x9cacf0f744fccbeb5930ffbf933750255a96b441-Lottery.sol#185)
"
0x12ba7db4d21e87b6894ab59f4c412516d3fb1f56,T,"Confetti._pickRandomType(uint256) (contracts/Confetti.sol#85-110) uses a weak PRNG: _pickRandomType(tokenType) (contracts/Confetti.sol#107)
"
0x94e816f5acd7a3754fa5515bcc5aacc6a2a71d28,T,"Cirkill.svgOpen(uint256uint256) (crytic-export/etherscan-contracts/0x94e816f5acd7a3754fa5515bcc5aacc6a2a71d28-Cirkill.sol#2310-2312) uses a weak PRNG: string(abi.encodePacked(<svg viewBox='0 0 width.toString() height.toString()' xmlns='http://www.w3.org/2000/svg' version='1.1' )) (crytic-export/etherscan-contracts/0x94e816f5acd7a3754fa5515bcc5aacc6a2a71d28-Cirkill.sol#2311)
"
0xd596ffcd875e30e91608b1e4029882466e1b7ee4,T,"Strawberries.hash(uint256addressuint256) (contracts/Strawberries.sol#116-149) uses a weak PRNG: hashToMinted[currentHash] (contracts/Strawberries.sol#147)
"
0x01b6e3aabe55d9ab81ef306479801448a4ca60c9,T,"ChestMining._getFashionParam(uint256) (crytic-export/etherscan-contracts/0x01b6e3aabe55d9ab81ef306479801448a4ca60c9-ChestMining.sol#756-855) uses a weak PRNG: pos == 3 (crytic-export/etherscan-contracts/0x01b6e3aabe55d9ab81ef306479801448a4ca60c9-ChestMining.sol#821)
"
0x5d8cad8836a8fa73ab202249cb7bfce296876e00,T,"ActionMiningPlat._getFashionParam(uint256) (crytic-export/etherscan-contracts/0x5d8cad8836a8fa73ab202249cb7bfce296876e00-ActionMiningPlat.sol#775-861) uses a weak PRNG: rdm < 8700 (crytic-export/etherscan-contracts/0x5d8cad8836a8fa73ab202249cb7bfce296876e00-ActionMiningPlat.sol#783)
"
0x17b19c70bfca098da3f2efef6e7fa3a1c42f5429,T,"OnChainKevin.hash(uint256addressuint256) (contracts/OnChainKevin.sol#111-155) uses a weak PRNG: currentHash (contracts/OnChainKevin.sol#154)
"
0xff6b038594f6d86525e987912510d5398ab212e7,T,"PiRatGame._rand(uint256) (crytic-export/etherscan-contracts/0xff6b038594f6d86525e987912510d5398ab212e7-PiRatGame.sol#834-836) uses a weak PRNG: uint256(keccak256(bytes)(abi.encodePacked(block.timestampseed))) (crytic-export/etherscan-contracts/0xff6b038594f6d86525e987912510d5398ab212e7-PiRatGame.sol#835)
"
0xd796a8754d7bc88ef6258e48d1d0fc2af0e533c7,T,"TccBuyer.randomNumber() (crytic-export/etherscan-contracts/0xd796a8754d7bc88ef6258e48d1d0fc2af0e533c7-TccBuyer.sol#757-759) uses a weak PRNG: uint8(uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.difficultynonce))) % availableContracts.length) (crytic-export/etherscan-contracts/0xd796a8754d7bc88ef6258e48d1d0fc2af0e533c7-TccBuyer.sol#758)
"
0x21334f8b55e311300368c52ec3ae1f663e94c5e7,T,"VRFRequestIDBase.makeRequestId(bytes32uint256) (crytic-export/etherscan-contracts/0x21334f8b55e311300368c52ec3ae1f663e94c5e7-CandorFiv2.sol#73-76) uses a weak PRNG: keccak256(bytes)(abi.encodePacked(_keyHash_vRFInputSeed)) (crytic-export/etherscan-contracts/0x21334f8b55e311300368c52ec3ae1f663e94c5e7-CandorFiv2.sol#75)
"
0x635b7df389d040155b395eeb877b8d1e8a0afc38,T,"Utils.shuffle(uint256[]booluint256) (contracts/Utils.sol#55-72) uses a weak PRNG: numberArr (contracts/Utils.sol#71)
"
0x82262bfba3e25816b4c720f1070a71c7c16a8fc4,T,"Solvency._psuedoRandomHash() (crytic-export/etherscan-contracts/0x82262bfba3e25816b4c720f1070a71c7c16a8fc4-Solvency.sol#2147-2160) uses a weak PRNG: keccak256(bytes)(abi.encodePacked(msg.sendertx.gaspricelastMintedIdblock.numberblock.timestampblockhash(uint256)(block.number - 1)IERC20(oracleToken).balanceOf(oracleAccount))) (crytic-export/etherscan-contracts/0x82262bfba3e25816b4c720f1070a71c7c16a8fc4-Solvency.sol#2148-2159)
"
0x298d56305934164d9d314e111c84e79809e786e0,T,"GameMachine._shufflePrizePool(uint256) (crytic-export/etherscan-contracts/0x298d56305934164d9d314e111c84e79809e786e0-GameMachine.sol#1240-1246) uses a weak PRNG: _salt = ((randomResult + cardAmount + _salt) * (i + 1) * block.timestamp).mod(cardAmount) + 1 (crytic-export/etherscan-contracts/0x298d56305934164d9d314e111c84e79809e786e0-GameMachine.sol#1243)
"
0x1b21a5f01df4710111b98f50b990f7ce143c3539,F,"OniiChain.copyOnii(IOniiChain.Detail) (contracts/OniiChain.sol#135-156) uses a weak PRNG: ! oniis[hash] (contracts/OniiChain.sol#150)
"
0x61c56d600a73946722c28cfdb470c9cc96241303,T,"AsciiPricks.setFur(uint8) (src/AsciiPricks.sol#200-215) uses a weak PRNG: Trait(string(abi.encodePacked(<tspan fill=""color.value"">content</tspan>))namecolor) (src/AsciiPricks.sol#214)
"
0x40a0f793ccfd9bc6f2532d06d022be0f978ecbf3,T,"LaidBackLlamas.setProvenance(stringstring) (contracts/LaidBackLlamas.sol#288-301) uses a weak PRNG: mintStartID = uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.sender_images_jsonblock.difficulty))) % MINT_SIZE (contracts/LaidBackLlamas.sol#296)
"
0xd98827cad6c190ecc5bff92cdceae8b167f468c2,T,"LongNeckieWomenOfTheYearByNylaHayes._getTokenToBeMinted(uint16) (contracts/LongNeckieWomenOfTheYearByNylaHayes.sol#217-234) uses a weak PRNG: tokenId (contracts/LongNeckieWomenOfTheYearByNylaHayes.sol#233)
"
0x918a7cab286cf286566baf2d3e3da7564694fc78,T,"Eye.randomRefferal() (Eye.sol#345-347) uses a weak PRNG: uint256(keccak256(bytes)(abi.encodePacked(block.difficultyblock.timestampblock.gaslimit))) % maxRefferalCode (Eye.sol#346)
"
0x3b8b9a4c77bd49ad9ead4093badb202910875a86,T,"CryptoBossWannaCry.atkBoss(uint256) (crytic-export/etherscan-contracts/0x3b8b9a4c77bd49ad9ead4093badb202910875a86-CryptoBossWannaCry.sol#306-357) uses a weak PRNG: b.totalDame >= b.bossHp (crytic-export/etherscan-contracts/0x3b8b9a4c77bd49ad9ead4093badb202910875a86-CryptoBossWannaCry.sol#350)
"
0xc770dc511953265372840293a63aa67af631f3a3,T,"VersionBetaParticipationRewards._pickNextIndex(uint256) (src/VersionBetaParticipationRewards.sol#156-181) uses a weak PRNG: selectedIndex (src/VersionBetaParticipationRewards.sol#156)
"
0x304eec612ad5542db86c4fcd28cd7358983c3028,T,"H3FoMo3Dlong.airdrop() (crytic-export/etherscan-contracts/0x304eec612ad5542db86c4fcd28cd7358983c3028-H3FoMo3Dlong.sol#1371-1390) uses a weak PRNG: (seed - ((seed / 1000) * 1000)) < airDropTracker_ (crytic-export/etherscan-contracts/0x304eec612ad5542db86c4fcd28cd7358983c3028-H3FoMo3Dlong.sol#1386)
"
0xd1607961b4fce9f4a5ce25c4c88a438bc656d0f8,T,"Random.rand(uint256) (contracts/utils/Random.sol#5-7) uses a weak PRNG: uint256(keccak256(bytes)(abi.encodePacked(block.difficultyblock.timestampsalt))) (contracts/utils/Random.sol#6)
"
0xc71aa720b3b0d8ab5b295f57d269c9e962679ef5,T,"Hexagram.getTimeResponse() (crytic-export/etherscan-contracts/0xc71aa720b3b0d8ab5b295f57d269c9e962679ef5-Hexagram.sol#1484-1492) uses a weak PRNG: (tParts) (crytic-export/etherscan-contracts/0xc71aa720b3b0d8ab5b295f57d269c9e962679ef5-Hexagram.sol#1491)
"
0x111fff9a5b235f704f3cb39dbf63505bac3210d6,T,"CityParks._generateImage(uint256) (contracts/CityParks.sol#71-94) uses a weak PRNG: string(abi.encodePacked(CityParkUtils._generateHeader(artData.randomDifficultyartData)CityParkUtils._borderRectCityParkArt._generateRug(artData)CityParkArt._generateTrees(artData)CityParkArt._generateSun(artData)CityParkArt._generateAllBricks(artData)CityParkUtils._imageFooter)) (contracts/CityParks.sol#85-93)
"
0x00004200ea0060d300ba0005550036d075ace475,T,"SantaInvader._getPsudoRandomNumber() (contracts/SantaInvader.sol#75-88) uses a weak PRNG: randomNumber (contracts/SantaInvader.sol#87)
"
0xe9b91d537c3aa5a3fa87275fbd2e4feaaed69bd0,T,"IndelibleERC721A.tokenIdToHash(uint256) (var/app/current/contracts/IndelibleERC721A.sol#174-209) uses a weak PRNG: rarity < 10 (var/app/current/contracts/IndelibleERC721A.sol#196)
"
0x092520506d00ae1a24de30d707079e9f55bd11b4,T,"ERC721Enumerable.tokenByIndex(uint256) (contracts/Hooties.sol#49-52) uses a weak PRNG: _allTokens[index] (contracts/Hooties.sol#51)
"
0x5dd49ce0417db66cd3ed10a350752f508101889b,T,"PsycheArt._generateInfo(uint256uint256) (crytic-export/etherscan-contracts/0x5dd49ce0417db66cd3ed10a350752f508101889b-PsycheArt.sol#1652-1692) uses a weak PRNG: rand % 2 == 0 (crytic-export/etherscan-contracts/0x5dd49ce0417db66cd3ed10a350752f508101889b-PsycheArt.sol#1657)
"
0xd02c223bc1a3da3b263bf84bfd8532795be47197,T,"Fomo12H.airdrop() (crytic-export/etherscan-contracts/0xd02c223bc1a3da3b263bf84bfd8532795be47197-Fomo12H.sol#1339-1358) uses a weak PRNG: (seed - ((seed / 1000) * 1000)) < airDropTracker_ (crytic-export/etherscan-contracts/0xd02c223bc1a3da3b263bf84bfd8532795be47197-Fomo12H.sol#1354)
"
0xeb61a78f06fc606d82892a38ea581c2bb7f82570,T,"XcLottery.getRandomSeed(string) (crytic-export/etherscan-contracts/0xeb61a78f06fc606d82892a38ea581c2bb7f82570-XcLottery.sol#19-21) uses a weak PRNG: randomSeedMap[period] (crytic-export/etherscan-contracts/0xeb61a78f06fc606d82892a38ea581c2bb7f82570-XcLottery.sol#20)
"
0x0bcaade7f9688e63ae56abeec0d882d6dca67bf8,T,"Battles.getBattleId(addressbooladdressuint256) (contracts/Battles.sol#275-283) uses a weak PRNG: keccak256(bytes)(abi.encodePacked(_player1_isNative_erc20Token_timestamp)) (contracts/Battles.sol#281-282)
"
0xaff69c67f5dbbdd088ccbc6d47cb9e0ea547e132,T,"Fomo.airdrop() (crytic-export/etherscan-contracts/0xaff69c67f5dbbdd088ccbc6d47cb9e0ea547e132-Fomo.sol#1290-1309) uses a weak PRNG: (seed - ((seed / 1000) * 1000)) < airDropTracker_ (crytic-export/etherscan-contracts/0xaff69c67f5dbbdd088ccbc6d47cb9e0ea547e132-Fomo.sol#1305)
"
0x1d55c56f168992c12a8ca1434b47db51ee81fd90,T,"RandomlyAssigned.nextToken() (@1001-digital/erc721-extensions/contracts/RandomlyAssigned.sol#27-61) uses a weak PRNG: value + startFrom (@1001-digital/erc721-extensions/contracts/RandomlyAssigned.sol#60)
"
0xb9ea8df7360a6931d162c014f69c42975dbe6054,T,"Random.random(uint64) (crytic-export/etherscan-contracts/0xb9ea8df7360a6931d162c014f69c42975dbe6054-SatanCoinRaffle.sol#8-11) uses a weak PRNG: _seed = uint64(sha3()(sha3()(block.blockhash(block.number)_seed)now)) (crytic-export/etherscan-contracts/0xb9ea8df7360a6931d162c014f69c42975dbe6054-SatanCoinRaffle.sol#9)
"
0x341cdf28f12eb6b334fdfb19ed20be1a7b551f84,T,"CustomERC721A._shuffle(uint256[]) (contracts/CustomERC721A.sol#261-276) uses a weak PRNG: _array (contracts/CustomERC721A.sol#275)
"
0x9134c89c2132b80f361c5797bee6fc96c8d15cd1,T,"FoMo3DLightning.airdrop() (crytic-export/etherscan-contracts/0x9134c89c2132b80f361c5797bee6fc96c8d15cd1-FoMo3DLightning.sol#1226-1245) uses a weak PRNG: (seed - ((seed / 1000) * 1000)) < airDropTracker_ (crytic-export/etherscan-contracts/0x9134c89c2132b80f361c5797bee6fc96c8d15cd1-FoMo3DLightning.sol#1241)
"
0x1152c76a0b3acc9856b1d8ee9ebdf2a2d0a01cc3,F,"Operator._buildParamsHash(uint256addressbytes4uint256) (@chainlink/contracts/src/v0.7/Operator.sol#493-500) uses a weak PRNG: bytes31(keccak256(bytes)(abi.encodePacked(paymentcallbackAddresscallbackFunctionIdexpiration))) (@chainlink/contracts/src/v0.7/Operator.sol#499)
"
0xd5f230d8eb27908aa45d0d4effa20e07bc4bc7a8,T,"TimeNFT.pseudoRNG(uint16uint8uint8string) (contracts/TimeNFT.sol#170-172) uses a weak PRNG: uint256(keccak256(bytes)(abi.encode(block.timestampblock.difficultyyearmonthdaytitle))) (contracts/TimeNFT.sol#171)
"
0x3aab5c43d4e47f71deea94a7d541e6c07e21b137,F,"Fraxferry.getTransactionsHash(uint256uint256) (crytic-export/etherscan-contracts/0x3aab5c43d4e47f71deea94a7d541e6c07e21b137-Fraxferry.sol#909-915) uses a weak PRNG: result (crytic-export/etherscan-contracts/0x3aab5c43d4e47f71deea94a7d541e6c07e21b137-Fraxferry.sol#914)
"
0x3c7767011c443efef2187cf1f2a4c02062da3998,T,"CratePreSale.genRandom() (crytic-export/etherscan-contracts/0x3c7767011c443efef2187cf1f2a4c02062da3998-CratePreSale.sol#114-117) uses a weak PRNG: uint256(rand % (10 ** 20)) (crytic-export/etherscan-contracts/0x3c7767011c443efef2187cf1f2a4c02062da3998-CratePreSale.sol#116)
"
0xf1ae594cefee0bf519f227f3262ee2a851b14b9a,T,"FoMo3DWorld.airdrop() (crytic-export/etherscan-contracts/0xf1ae594cefee0bf519f227f3262ee2a851b14b9a-FoMo3DWorld.sol#1587-1597) uses a weak PRNG: (seed - ((seed / 1000) * 1000)) < airDropTracker_ (crytic-export/etherscan-contracts/0xf1ae594cefee0bf519f227f3262ee2a851b14b9a-FoMo3DWorld.sol#1593)
"
0x5ddbd1980a2b589b9f26f77ae7aca20e725f5c64,T,"RISK.roll(uint16[]uint16) (crytic-export/etherscan-contracts/0x5ddbd1980a2b589b9f26f77ae7aca20e725f5c64-RISK.sol#106-194) uses a weak PRNG: refund > 0 (crytic-export/etherscan-contracts/0x5ddbd1980a2b589b9f26f77ae7aca20e725f5c64-RISK.sol#180)
"
0xf1b9d0d07921400b75849d581862960c1c5ba170,T,"ERC721Enumerable._removeTokenFromOwnerEnumeration(addressuint256) (crytic-export/etherscan-contracts/0xf1b9d0d07921400b75849d581862960c1c5ba170-ConsoleNFT_Vault.sol#1521-1539) uses a weak PRNG: tokenIndex != lastTokenIndex (crytic-export/etherscan-contracts/0xf1b9d0d07921400b75849d581862960c1c5ba170-ConsoleNFT_Vault.sol#1529)
"
0x35c59b6b0a2415c5937c26e683784d15617046b3,T,"PUNK.tokenURI(uint256) (contracts/punk.sol#200-266) uses a weak PRNG: keccak256(bytes)(bytes(ssr)) == keccak256(bytes)(bytes(p)) (contracts/punk.sol#236)
"
0xce141c45619e9adbdbdda5af19b3052ff79d5663,T,"ZooFrenzToken.getRandomResult(uint256) (contracts/ZooFrenzToken.sol#212-214) uses a weak PRNG: randomResults[tokenId] (contracts/ZooFrenzToken.sol#213)
"
0x3d3de0a8ab52b70d33c2a3e20d67aec791f24193,T,"SparseFisherYates._choose(uint256) (crytic-export/etherscan-contracts/0x3d3de0a8ab52b70d33c2a3e20d67aec791f24193-Ethentic.sol#1806-1817) uses a weak PRNG: hashmap[n - i].set (crytic-export/etherscan-contracts/0x3d3de0a8ab52b70d33c2a3e20d67aec791f24193-Ethentic.sol#1810-1815)
"
0xe4674cb0ac70dd6ce4d70a4cce7358c8f8d60194,T,"Sculpty.random(uint256) (contracts/Sculptereum.sol#419-426) uses a weak PRNG: randomHash % max + 1 (contracts/Sculptereum.sol#425)
"
0xad9c86d445d8658cce557f4bb23bda2728b652d2,T,"OnChainSweaters.getHighQualityClaimedSweater(uint256) (contracts/OnChainSweaters.sol#201-209) uses a weak PRNG: renderer.getHQClaimedSweater(_tokenIdsweaters[_tokenId]claimedTokenTransactions[_tokenId]) (contracts/OnChainSweaters.sol#208)
"
0xa69d21a791347acb29ec457e9e5bc6e39c1a5c61,T,"StakeDice.betPlaced(addressuint256) (crytic-export/etherscan-contracts/0xa69d21a791347acb29ec457e9e5bc6e39c1a5c61-StakeDice.sol#165-237) uses a weak PRNG: stakeTokenContract.balanceOf(this) < bet.potentialRevenue (crytic-export/etherscan-contracts/0xa69d21a791347acb29ec457e9e5bc6e39c1a5c61-StakeDice.sol#207)
"
0x3af24388ff9086cd5d910f4b7e0b3f5ef629b5a4,T,"LuckyStar.airdrop() (crytic-export/etherscan-contracts/0x3af24388ff9086cd5d910f4b7e0b3f5ef629b5a4-LuckyStar.sol#1317-1336) uses a weak PRNG: (seed - ((seed / 1000) * 1000)) < airDropTracker_ (crytic-export/etherscan-contracts/0x3af24388ff9086cd5d910f4b7e0b3f5ef629b5a4-LuckyStar.sol#1332)
"
0x50820403e8ae30338648316bdba7e56d5acae8bb,T,"ERC721Enumerable._removeTokenFromOwnerEnumeration(addressuint256) (@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol#118-136) uses a weak PRNG: tokenIndex != lastTokenIndex (@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol#126)
"
0x49c59d51a3e0fa9df6c80f38dda32b66e51b21c8,T,"turkeysGameTurkeys._generateRandomStat(uint8uint8) (crytic-export/etherscan-contracts/0x49c59d51a3e0fa9df6c80f38dda32b66e51b21c8-turkeysGameTurkeys.sol#2087-2089) uses a weak PRNG: uint8((uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.difficultymsg.sender))) % (max - min + 1)) + min) (crytic-export/etherscan-contracts/0x49c59d51a3e0fa9df6c80f38dda32b66e51b21c8-turkeysGameTurkeys.sol#2088)
"
0xb7d01ca53ffcd0dc11c2a446e49408ded9b15372,T,"Attributes.pickEye(uint8) (contracts/token.sol#120-128) uses a weak PRNG: seed < 224 (contracts/token.sol#124)
"
0x3f2e53b1a3036fd33f3c2f3cc49dab26a88df2e0,T,"FraxUnifiedFarm_ERC20._stakeLocked(addressaddressuint256uint256uint256) (crytic-export/etherscan-contracts/0x3f2e53b1a3036fd33f3c2f3cc49dab26a88df2e0-FraxUnifiedFarm_ERC20_Fraxswap_FRAX_FPIS.sol#1976-2018) uses a weak PRNG: kek_id (crytic-export/etherscan-contracts/0x3f2e53b1a3036fd33f3c2f3cc49dab26a88df2e0-FraxUnifiedFarm_ERC20_Fraxswap_FRAX_FPIS.sol#2017)
"
0x000000008924d42d98026c656545c3c1fb3ad31c,T,"ERC721SeaDropCloneFactory.createClone(stringstringbytes32) (src/clones/ERC721SeaDropCloneFactory.sol#19-43) uses a weak PRNG: instance (src/clones/ERC721SeaDropCloneFactory.sol#42)
"
0xe19f2cb283b4b7bd060aca1de1226f629bcdb955,T,"FloridaMan.flipCoin() (blockchain/contracts/FloridaMan.sol#56-58) uses a weak PRNG: uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.difficultymsg.sender_top_bottom))) % 2 (blockchain/contracts/FloridaMan.sol#57)
"
0x06eba2e1086d8bccaccf66cdb7fbab0170255c72,T,"ERC721Enumerable.tokenByIndex(uint256) (crytic-export/etherscan-contracts/0x06eba2e1086d8bccaccf66cdb7fbab0170255c72-HoodRabbitsNFTs.sol#1126-1129) uses a weak PRNG: _allTokens[index] (crytic-export/etherscan-contracts/0x06eba2e1086d8bccaccf66cdb7fbab0170255c72-HoodRabbitsNFTs.sol#1128)
"
0x4c77cd2764729d4f4596c420310a2eb89799ae07,T,"RebelPunks._heartBeatToken(uint256) (RebelPunks.sol#352-383) uses a weak PRNG: rebellionStatusMap[_token] < rebellionPointer (RebelPunks.sol#371)
"
0xa581cb3883d84dab7f1b1340ff01f1cb34a2b5d3,T,"WjxnBscBridge._get_data_hash(uint256addressuint256uint256uint256uint256uint256) (contracts/WjxnBscBridge.sol#261-279) uses a weak PRNG: keccak256(bytes)(abi.encodePacked(request_idtosrc_chain_iddest_chain_idamountfee_amounttimestamp)) (contracts/WjxnBscBridge.sol#270-278)
"
0x5754f44bc96f9f0fe1a568253452a3f40f5e9f59,T,"CryptoHoots.getDNAForHoot(uint256) (contracts/CryptoHoots.sol#68-70) uses a weak PRNG: tokenIdToDNA[hootId] (contracts/CryptoHoots.sol#69)
"
0xb913f7a515ba9ef2c9d7722cf3089fc09dec8712,T,"ERC721.ownerOf(uint256) (crytic-export/etherscan-contracts/0xb913f7a515ba9ef2c9d7722cf3089fc09dec8712-ManicMouseMillions.sol#758-762) uses a weak PRNG: owner (crytic-export/etherscan-contracts/0xb913f7a515ba9ef2c9d7722cf3089fc09dec8712-ManicMouseMillions.sol#761)
"
0x51ae5e2533854495f6c587865af64119db8f59b4,T,"RandomlyAssigned.nextToken() (@1001-digital/erc721-extensions/contracts/RandomlyAssigned.sol#27-61) uses a weak PRNG: value + startFrom (@1001-digital/erc721-extensions/contracts/RandomlyAssigned.sol#60)
"
0x9c3f8d6dc38733bfbb98de8385bb5194dc61da47,T,"GaucheGrimoire.verifyTruth(uint256uint256string) (contracts/GaucheGrimoire.sol#232-240) uses a weak PRNG: (word == assertedTruth) (contracts/GaucheGrimoire.sol#239)
"
0xaf2ec3ef5d8cf4cf8decc5ec964f60a834049213,T,"BandOfCrazy.whichCharacter(uint16uint16) (BandOfCrazy.sol#284-332) uses a weak PRNG: _character == 1 (BandOfCrazy.sol#297)
"
0x7d05c8d8cc1bac936ea09308a9e94823986f8321,T,"DjEnerates._getRandomNumber(uint256) (crytic-export/etherscan-contracts/0x7d05c8d8cc1bac936ea09308a9e94823986f8321-DjEnerates.sol#1330-1344) uses a weak PRNG: random % _upper (crytic-export/etherscan-contracts/0x7d05c8d8cc1bac936ea09308a9e94823986f8321-DjEnerates.sol#1343)
"
0x455accb06faaf9ad118506761502d9d39e49d803,T,"Dice.rollDie(uint256) (Dice.sol#105-108) uses a weak PRNG: uint2str(randomRoll(tokenIddieMod)) (Dice.sol#107)
"
0x846c6668bd7cf4332ceb710ae5be3201f4396795,T,"Token.swapToken(uint256address) (crytic-export/etherscan-contracts/0x846c6668bd7cf4332ceb710ae5be3201f4396795-Token.sol#1916-1931) uses a weak PRNG: tokenAmount <= balance (crytic-export/etherscan-contracts/0x846c6668bd7cf4332ceb710ae5be3201f4396795-Token.sol#1923)
"
0xc8b64c294c300972413e87138845b58f4f667543,T,"Chimera.random() (crytic-export/etherscan-contracts/0xc8b64c294c300972413e87138845b58f4f667543-Chimera.sol#1955-1960) uses a weak PRNG: randomnumber (crytic-export/etherscan-contracts/0xc8b64c294c300972413e87138845b58f4f667543-Chimera.sol#1959)
"
0x1ea664b87fab53bee1a9c0caec9aeb7b5c6a5d20,T,"BananaToken.payoutLargeRedistribution(uint256) (crytic-export/etherscan-contracts/0x1ea664b87fab53bee1a9c0caec9aeb7b5c6a5d20-BananaToken.sol#1069-1090) uses a weak PRNG: bigPrizeEligibleEntity._isValid != true (crytic-export/etherscan-contracts/0x1ea664b87fab53bee1a9c0caec9aeb7b5c6a5d20-BananaToken.sol#1075)
"
0x65f865bf1893b8974904805f94d7f4364b093631,T,"WjaxEthBridge._get_data_hash(uint256addressuint256uint256uint256uint256uint256) (contracts/WjaxETHBridge.sol#265-283) uses a weak PRNG: keccak256(bytes)(abi.encodePacked(request_idtosrc_chain_iddest_chain_idamountfee_amounttimestamp)) (contracts/WjaxETHBridge.sol#274-282)
"
0x6cdc3525ca07deb57ca78d2b427ce552aa8adbf0,T,"FoundryMinter.random() (contracts/FoundryMinter.sol#167-175) uses a weak PRNG: uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.senderrandNonce))) (contracts/FoundryMinter.sol#169-174)
"
0xf3c9b7a97eba579f5c234f79108331f5513c9741,T,"CosmicCaps.randomIndex() (contracts/Cosmic Caps.sol#92-114) uses a weak PRNG: value + 1 (contracts/Cosmic Caps.sol#113)
"
0xb5cc5d1a848432eed564426f733d7e83bf3ae653,T,"FeelineClub.tokenURI(uint256) (home/ivan/projects/feeline-metaverse/feeline-metaverse-contracts/contracts/FeelineClub.sol#142-189) uses a weak PRNG: string(abi.encodePacked(_baseTokenURIStrings.toString(_tokenId)feelCharsuserStringhiddenString)) (home/ivan/projects/feeline-metaverse/feeline-metaverse-contracts/contracts/FeelineClub.sol#179-188)
"
0xa150539e9bff0109b8cfeb6c95cc9132941a9349,T,"PasswordEscrow.viewRand() (crytic-export/etherscan-contracts/0xa150539e9bff0109b8cfeb6c95cc9132941a9349-PasswordEscrow.sol#129-131) uses a weak PRNG: randToAddress[msg.sender] (crytic-export/etherscan-contracts/0xa150539e9bff0109b8cfeb6c95cc9132941a9349-PasswordEscrow.sol#130)
"
0xc318652a57db1190c3e756d6615c99e812b3c0b1,T,"LootMeebits.randomIndex() (contracts/LootMeebits.sol#89-110) uses a weak PRNG: value.add(1) (contracts/LootMeebits.sol#109)
"
0x93f5813b47f02157cf53b3a294746c95f6098948,T,"ColorGenerator.random(ColorGenerator.Color) (contracts/ColorGenerator.sol#10-13) uses a weak PRNG: g.id (contracts/ColorGenerator.sol#12)
"