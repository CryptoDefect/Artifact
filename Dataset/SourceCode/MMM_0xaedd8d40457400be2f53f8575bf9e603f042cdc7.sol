{{

  "language": "Solidity",

  "sources": {

    "contracts/MMM.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title: Melo Melo Melonity\n/// @author: manifold.xyz\n\nimport \"./manifold/ERC721Creator.sol\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                                //\n//                                                                                                                                //\n//    /zlv1llllll+1lz1+v;>;>1J1l1(lv<;>;+?lz<+lllllz<llv<<<;>;>;>;>;>;>>++++i++(1zzz11+<++<+++>>;.`(zv<ll!`.<+/1<<+1zllll+1ll<    //\n//    l1(lllllllllz<<lv;>;+zll>-1z<;>>++lv<+llllll=zuc77!<+dA&J+<<<lllllllllv<zlllllllllv(1llllll=- `_~`` .+z<+<(1lllllllll><l    //\n//    +ll=(zll=lv1zll->>;+llv1zl<>;>;+ll1Jll1z=z<>J\"  ` ```````.T,.+1l=lllv1+lz+1=llll1(lllvllllll++z<-(<>>llv+llz(1l=llv1zll-    //\n//    lllz;><1l<Jlllv;;>+lz+zll=<>;+1lv+lllz1>;>j=    ``` ``...uUllllz+ll1+llllzz(1lv(llllll+1lv1=llzz+>>>><1zllllll/l=1Jlllz>    //\n//    l=lz>;>;<zllllz>;+v<1lllz1llll1<zlz<;;;>>+\\ ``    `.JY(1llllllllv<<lllll-`? .<llll=ll=l=<(llllllz;+1(1llll=ll=l<(lll=<>+    //\n//    llll;>;>;>1zllllv1+lz(<;>;+l1Jlz<>;;>>++>d ``````.Zvil=zJ1llllv1+llJ1l>` `````++1ll=l>`.zlivlllllvill1<1llllzz1llz+1<>+l    //\n//    +1l1<>>;>;;>>+1+<<;;;;;>>+v+lv<<<;>>+v1zld.`` ``.Suzv7\"\"777\"7C(uszllzz1z! .`<lllz<<1>i..lll=+<lv1+lllllz<zl1(+1llll<>+z>    //\n//    lv(1>;>;>>;;;>;>;;>>>>;+z<=z<_.< (ll<JlllzL``` `,!``` ``        `` ?7Czi<zli<<!``   <```  _?71J+llll=llllv(1l;>+zlz<<<1z    //\n//    1ll1;>;>;>>>>;>>;>>;>;>(lll(>_._.=v+ll+1uZ\"G. ``,; ```````````````````` ?<v<<-_ ``` <-~~_. ``   7wz=ll=v1ll1/>;>><+<(>>>    //\n//    llz>>;>;>;;>;>;>>;;>;+llllll1<1z11llzs7!  .`?+_.`1.````````````` ...___~_~_(1+(<-..!  !<.__~_.```  7z1(lllllz;>;>;>>;>>+    //\n//    <;>;;>>;>>;>>;>;;>>>;+l=ll=lll1(lluZ^   ``....J6J,dJ?7?!~!?7=+..```````````   ?+<<<.``   (-` `_ ``   ?yll=z<;>;>;>;>;;+l    //\n//    ;>;>>;;>;>>;>;>>;>;>>>1lllllv+lluv!```..?!``````````` ``` `` `  ?=(.``` ` ``````(J<_<..   <`````.``    T+;>;>>;>>;;>>;>1    //\n//    >;>;;>>;>;;>;>;>;>;;>;;<1l11llzZ!``.,= ``` `` ..`` ` ..... `       .=,```` ` ```.`1____ ` ~-```  _```   (yz<+;>;>>>;>>;>    //\n//    +>;>>;>>;>>;>;>;>>>;>>;>?_?=ld=``.('`` `` ._` ` ``` `````` ~_.      ``?+ ```` ``_``1__._.` .:```` _`  `  .21lz>;;>++z<<+    //\n//    (llz<>;;>>;>;>>;;>;>;>>;>-(Jv!` ,^``` `.~ ```` `` ``` ` `   ``` ` ````` (i` `` . ``.h-~.-_` : ` `   `  `  .n<z<>;+z<+lll    //\n//    lllllz;>;>;>;>;+++<++>>>;>>J`../ ` `  `````` `` `` ``` `       `` `` `````?,` - ` ``(L-~-~ < ``` ``  `   ` .Zz(>+1zlllll    //\n//    l=lllz>;>;>;>+llll1(<!`_1<J._(% ````. `` `` `` ` `` ` `         `` `` ` ```.1``` ```.([-_`.>_` `````    ` ``.Zl</zllv!~~    //\n//    llll=<>>;>><+lllviuc. ..<(<_(\\    ` `` `` ``   `  `     `  ` ```` `` ```  `` 1 ```   _j--<~~~ `` `` ```````` ,xlli+>`.+i    //\n//    <1zz1l<>;>+..zvu7:(!-. <(t.(%     `   ` ` ` `          _ ` ```````` `````` ```6 ` ` `__b.-_~~_` `` ``` ` `` ``(zlll1`(<!    //\n//    l1(1llz;>+llz&=.(:````_<J..J     `     `     .          !.``` ` `` `` ` ``` `` 3 ` ` :~d_.(~~~`````` ` `` `````4llllz-..    //\n//    +lll(1lz+lvuY...(.` `.(~J.(!``` ``    ``     _   `  ` ``- `.`` `` ```` `` `` ``.l  `.!~J{.-<~..` `` `````` `` `.yz<;>>>+    //\n//    lllll1<zz1J'....-<`_~<((C.r````` ` `  `      _   ``````` .  _ `````` ``` ```` ``(.`.(_~(r..(~~_`` ``` ` ``` `` `(;;>+zll    //\n//    ll=llll<(Z`..`.-_-``.._(2(!`` `. ````` ````` ~```````````_`   ` ``````` `` ``` ` t. (~~(b_.-<.~` `` `` ````` ``` I+lllll    //\n//    ll=lv>?1Z``...`.-1.`_.<-%v` `` -` ````_````` _``` `` ````.....-_~-``    _ ` `````(?7o~~JD<_.(.. `` ````  ` ``` ``((1llll    //\n//    +1l1.``,!```...._:<-<-<-[r````.~`` ` ```  `  _````````` __`````````.``   .`` ` ``.>-.<-K>x<--_._```` `````` ``` ` S1<lz<    //\n//    l<(1l-.\\..`.``.-::(<. _.b\\` ``.` ```` ``````  ```````` ``  ````......_.``(````` ` [_~.?d(b~<..._` `` ` ````` `````(lvi?!    //\n//    1>~`_~r``..`..._~:::~<(.?:`` `(`` `` ````` ` .`` ````` `` `` .MNMMNNMNa,___ `` ```]` _ f(W......`` ```` ` `` ` ```.I+v``    //\n//    l_```,`.````..._~~:~~.(_-{ ```~``` `` `  ._` .````` `` `` `.WWNMHHMNMmTMNJ(  ```` t_`~.F(X~ _... `` `` ``` ```` ` `j!```    //\n//    lllllr.......`._~~~:_.-<([ ` `(`` ```` .``.` -`.`````` ``.`J!XgMhJMmmHW,7@ga.` ``.:  .d>+J.`_... ``` ``` `` `` ``` ./```    //\n//    lllv(!........._~~:~...(.$  ``.``` `   `` _` .`~``````_``_`` HWg@wJ(?TWb q@B\"\"! `.~`.fd~<,_  -...` `` ``` ``` ``````1```    //\n//    J1l<J..`..`...`_~~:~...(_J,. `._```.  `` .(J(.._````` `````  OkW>~_~__(% J^[`````c.v3+Z~<,; `..`. ```` ````` `` ` ``,..`    //\n//    v1<zt......`..._~~~_...~<~G..  > ````. .MMSMM@MNJ``````````` `?He-_.`._.```]` ``.9C(1l$.1(]_``~.``` ``` ` `````` ` ``h(1    //\n//    Jlld>.`......`._~~_..`._<~([...(- ```_(N@.MMM+d#HR,````````````  ?<_<! ````[`` `J=1z1Jt~jzb. ` -.. ` ``` `` ` ````` `,z1    //\n//    llld....`.`...._~~>...._(<(?/...1-. .~HM`(HWgWTj/YW.`` `` ````````````````.\\```.3>??zz%~(1d_ ``... `` ```` `` ``` ````6;    //\n//    ! `+...`...`..._~(_...`_:~X+J,..-1-.((@@ ,HWH><<-.(~`      ````` `````````.~` .0l++1lzl.(zv[ ```(.. `` `` ```` `  ` ``,x    //\n//     :(r..`.......`~_:....._:_(W<d&..(x_vx@N  7Hm-._..-```   ```````` `` `````J  -{ <z>>>?[..SzX- ```_.` `` ``` ``` `  ` ``(    //\n//    .._%-.......`.-~/...`.-:::(yb:4n..(+:?H@h.  ?\"=<__````` ````  .```` ```  (t..%..(+;>;>] .(.JL. ```...` `` `` `````  ````    //\n//    l<(:-_..`..`..-(.....`-~::_Rdp<S0,.-<+HD?0!......``````` .._~ `` ``````.=(_(f1l=+v;>>;O` _f1d/ ` `` _ ```` `` ` `` `  `     //\n//    +ld.-_........__..`..._~::~bzW<?yvo.-<<?k+J,``.``````````````````` ``.7..r(<L_-(<+>;>;J,` (<;4, `````~-  ``````` ````  `    //\n//    llZ.~~.`..`.._...`...-~~::~SlJr:j++w,._<?s+vG,```.- `````````` ``` .=_...__~=-+++z;>;>;h`` S>;U,  `` ` _ `` ` ``` ` ```     //\n//    llr-~~.....`-.......`_~~~:~Xlv4:<6lllC,.~?n(1vT&/` !`` ` `` ``` .J^...__~~!.((``<<;>>;;?[``.h>;d, ` ````.-  `` `` `  ..     //\n//    lv;_~~.`.......`....-~~:::_X<Jvc>(zlz>+7&-<4<<j^` .vZUOz+-((--?^.._~`~_! .<~(!``(<>>;><+Je``.h>>?n `` ` `  ~.`` ```` ``     //\n//    <J_~~_..`........`.-~~~~:~.Kll1S~(I<1v1z<?71:(` `.lll=lll<<<_.!! _`` ..<:(_!``~.+<<>;< -<?L`` 4J>+U,`` ````` ~.`` ``````    //\n//    zt~~~_..-.`.`..`..-~~~~::~(D>>>l_(~_-_~_~``.^`  ,<~(zusz_-.+<<v<<+<<:<<<!`` ..-!?4+<><`_<!.4,``?n>;zh,``````  ` ~.` ` `     //\n//    Z~:~_.-__.....`..-~~~~::(.(C<<~._!``` -` .=`` .>`_  .-(<<<((<>v<++<<.`  ...~......_7u+<-.`(>?h.` 7e>+vh, ` ``  .   ~-.``    //\n//    <:~~-_~.........-~~~~::?_-Z~-?``` ..`_!.<``  (~_.~.._>~(<!.(<< .<<.-(<,~............._7^ .`(ll?h,``?u=JvS..`````  _.-  _    //\n//    :(~!.......`.`-_~~:~:(!.-(_!`  ``` ..?'````.' (.....-_~..-<(>..(><__<_1<............( ` ` __?<<!_(j,` 7OslZSJ.``````  _.    //\n//    ~--~......`.._~~::~:(~-_.!   `` .?!`` `` .2`   ~...._~-_(<(!...(::..(<(<....__.`````_`.`._-_``  <<_~?1. `?7Os1VS-. `````    //\n//    /!...---_..-~~::~:(<-_.~ ``` .?!```` `` _$   ~......._(<(<...._>~<---_<~~~`` ` ```.  `_..-```-..`  ~__(1O1-.. ?7CuwUOJ..    //\n//    ..-_` ``` _~:::~(<_(` ~.  .?`` ` ```    `` `.-...._(<~(?~...-___- ` ``  ` ` `   ` _`` _.-``` !  ``` ` ~_?i++=OUVoJ---<?<    //\n//    .-` . ` .`. ~(</___ ~...?` `` ` `` `` ` .` ` ` (..._<!`   ` ` _.-` ` ` ` ` ` `` .~  ...-   ` ~` `  ````._1lli<llll<JlllO    //\n//    _... ..--...(``._:_ `-`  `  `  `  ` `  ` .<..  (( ` ` `   ` ` ~.- ` ` ` ` ` ` ``_ ` ..-`   .` `  ` `  `` :1lllJ<villlll=    //\n//    .-.......-_~`` _~(_.`` ` `` `` ```` ``_.`   ?,._,' ` ` ``  ` ` __  ` ` ` ` `  ``_` _.-`. .`` `    `` ` `` <lllz1<1llll=l    //\n//    ......--`.(_   _-<~ _.` `  `  `       ` ~.` .:>`....  ` ```     ` ` ` ` ` ` ``_` ..~_~.`  _`  ` `  `` `  `(~?+lv!<z1l=lz    //\n//    ..--_``-__(!  _-~(~   _     ....-J<?i.``  &J+! `   <_.-` <`` .. ` ` ` ` ` `   ~  .__~.  .~ ``  `     ` `   _ 1>```.l(11+    //\n//    __ `._`  `...~_~-<-.._~(--_.-(-?=1+O-<2  ,>!`     `~  `    `_ .-.`  -..  ` ``..  .~_  `_  ` `   ` ` `  `` `__````(ll<(<1    //\n//    .._`   `   <~_(__((-~?!`  ___~`   `(<-+-,_ `_??!~..-._`` `    `   `_``  _< `.``  <(`` ` ~`    `  ` `  `    . ~<.`````(lz    //\n//    `    `  ` <~_..<?!` `               .!-.~__.``` -`   .`?~--..` `  .   ` _!~ ( _-_~!`  ._  `    `  ` `    `  ___  ....zll    //\n//      ` ` `   (+?! ``       `     ` ` _` .--. (`. ...    `   ` ``_~?~_..`  . _ .  ` ` <``( ` ` `    `  ` `` ` ` _. _.?llllll    //\n//     `   ` .-?``   `   `    ``      -!-.<_.._?.__     _<_-. -    ```- `  ~<<._ .` _  _!!`~  ` ` `  `     ` `  ` ___` .(<lllz    //\n//         ./!    ` ` `  ````````    _` .!`` `` _i_-.-(-._  ._         ` ` _-   _<-..   _`._  `  ` `    _`  ` `   _~~_._?z<1<_    //\n//      `.J!  ```    _``  ```````   .<..>` `  ` -~` ``  `(1.!__`             `` `  `_<<-.__  ` ` ` `` ``  `  ` `` ~~_~~~~(v~.Z    //\n//                                                                                                                                //\n//                                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\ncontract MMM is ERC721Creator {\n    constructor() ERC721Creator(\"Melo Melo Melonity\", \"MMM\") {}\n}\n"

    },

    "contracts/manifold/ERC721Creator.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\ncontract ERC721Creator is Proxy {\n    \n    constructor(string memory name, string memory symbol) {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6;\n        (bool success, ) = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6.delegatecall(abi.encodeWithSignature(\"initialize(string,string)\", name, symbol));\n        require(success, \"Initialization failed\");\n    }\n        \n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n     function implementation() public view returns (address) {\n        return _implementation();\n    }\n\n    function _implementation() internal override view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }    \n\n}\n"

    },

    "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/Address.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"

    }

  },

  "settings": {

    "remappings": [

      "@openzeppelin/=node_modules/@openzeppelin/"

    ],

    "optimizer": {

      "enabled": true,

      "runs": 300

    },

    "metadata": {

      "bytecodeHash": "ipfs"

    },

    "outputSelection": {

      "*": {

        "*": [

          "evm.bytecode",

          "evm.deployedBytecode",

          "devdoc",

          "userdoc",

          "metadata",

          "abi"

        ]

      }

    },

    "evmVersion": "london",

    "libraries": {}

  }

}}