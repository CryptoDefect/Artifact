Contract Address,TP/FP,Description
0xb6e804a19ff79365919be29bfbb279fa87f23ce0,T,"AqomiArmy489.mintWhitelist(uint256bytes32bytes32[]) (crytic-export/etherscan-contracts/0xb6e804a19ff79365919be29bfbb279fa87f23ce0-AqomiArmy489.sol#1406-1413)->MerkleProof.processProof(bytes32[]bytes32) (crytic-export/etherscan-contracts/0xb6e804a19ff79365919be29bfbb279fa87f23ce0-AqomiArmy489.sol#1300-1313)allows merkle proof front run
"
0x7d79ba6848c0f6533459b4e27fc5b59403a053c9,F,"RoyalCats.mintWhitelist(uint256uint256uint256uint256bytes32[]) (contracts/RC.sol#44-65)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#58-64)allows merkle proof front run
"
0x565abc3feaa3bc3820b83620f4bbf16b5c4d47a3,T,"WhoopsiesDoopsies.earlyMint(bytes32bytes32[]uint256) (contracts/WhoopsiesDoopsies.sol#117-141)->WhoopsiesDoopsies.verify(bytes32bytes32[]) (contracts/WhoopsiesDoopsies.sol#95-115)allows merkle proof front run
"
0x40519c7f85859e44500e3cb4f57848afdeaf5e5a,T,"ChordusArena.mintWhitelist(uint256bytes32bytes32[]) (crytic-export/etherscan-contracts/0x40519c7f85859e44500e3cb4f57848afdeaf5e5a-ChordusArena.sol#1418-1425)->MerkleProof.processProof(bytes32[]bytes32) (crytic-export/etherscan-contracts/0x40519c7f85859e44500e3cb4f57848afdeaf5e5a-ChordusArena.sol#1300-1313)allows merkle proof front run
"
0x08fa75e579edd5a2d3d301bb6d6db1a898a08cc0,T,"MerkleMint.mint(uint256uint256addressbytes32[]) (crytic-export/etherscan-contracts/0x08fa75e579edd5a2d3d301bb6d6db1a898a08cc0-MerkleMint.sol#305-325)->MerkleProof.verify(bytes32[]bytes32bytes32) (crytic-export/etherscan-contracts/0x08fa75e579edd5a2d3d301bb6d6db1a898a08cc0-MerkleMint.sol#184-205)allows merkle proof front run
"
0xb9edb20f71fc33059010c6303dea50650948a8d2,T,"PetAirdrop.claim(uint256bytes32[]) (contracts/PetAirdrop.sol#37-54)->MerkleProof.verify(bytes32[]bytes32bytes32) (@openzeppelin/contracts/cryptography/MerkleProof.sol#15-32)allows merkle proof front run
"
0xdadf3cca446dbad67582d76100ab816292358e79,T,"ERC721AMO.whitelistMint(addressuint256bytes32[]uint256) (crytic-export/etherscan-contracts/0xdadf3cca446dbad67582d76100ab816292358e79-MetaplacesArtifacts.sol#1582-1602)->MerkleProof.processProof(bytes32[]bytes32) (crytic-export/etherscan-contracts/0xdadf3cca446dbad67582d76100ab816292358e79-MetaplacesArtifacts.sol#1417-1430)allows merkle proof front run
"
0x1d010e936ee794c100115739524ac4f692eb48a8,T,"MonsterMates.earlyMint(bytes32bytes32[]uint256) (contracts/MonsterMates.sol#100-127)->MonsterMates.verify(bytes32bytes32[]) (contracts/MonsterMates.sol#78-98)allows merkle proof front run
"
0x0000000012a0592c154d552c410030e724b2ea00,T,"bbtCNV.mint(addressaddressuint256uint256bytes32[]) (crytic-export/etherscan-contracts/0x0000000012a0592c154d552c410030e724b2ea00-bbtCNV.sol#572-580)->MerkleProof._efficientHash(bytes32bytes32) (crytic-export/etherscan-contracts/0x0000000012a0592c154d552c410030e724b2ea00-bbtCNV.sol#381-387)allows merkle proof front run
"
0x6248e4118818c9075a142ef8a12e09d49888af58,T,"StakingRewardsClaim.stakeRewards(addressuint256bytes32[]) (contracts/staking-rewards/StakingRewardsClaim.sol#130-136)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts-4.6.0/utils/cryptography/MerkleProof.sol#58-64)allows merkle proof front run
"
0x97bec39b35341ec23cb6db04224c34bbb4757e50,T,"VengefulBeasts.mint(uint256bytes32[]bytes32) (crytic-export/etherscan-contracts/0x97bec39b35341ec23cb6db04224c34bbb4757e50-VengefulBeasts.sol#1488-1499)->MerkleProof.processProof(bytes32[]bytes32) (crytic-export/etherscan-contracts/0x97bec39b35341ec23cb6db04224c34bbb4757e50-VengefulBeasts.sol#764-777)allows merkle proof front run
"
0xb98454270065a31d71bf635f6f7ee6a518dfb849,F,"Bridge.withdraw(addressuint256bytes32uint256uint256uint256bytes32uint256uint256bytes32[]uint256) (contracts/bridges/Bridge.sol#175-214)->Lib_MerkleTree.verify(bytes32bytes32uint256bytes32[]uint256) (contracts/libraries/Lib_MerkleTree.sol#121-172)allows merkle proof front run
"
0x9c3dc67faea065777a4bb301eefecb80e54cfaab,T,"SpacegatePass.claim(addressuint256uint256bytes32[]) (crytic-export/etherscan-contracts/0x9c3dc67faea065777a4bb301eefecb80e54cfaab-SpacegatePass.sol#1005-1028)->MerkleProof.processProof(bytes32[]bytes32) (crytic-export/etherscan-contracts/0x9c3dc67faea065777a4bb301eefecb80e54cfaab-SpacegatePass.sol#42-55)allows merkle proof front run
"
0x0938e3f7ac6d7f674fed551c93f363109bda3af9,T,"NTItems.boxClaim(uint256uint256uint256bytes32[]) (crytic-export/etherscan-contracts/0x0938e3f7ac6d7f674fed551c93f363109bda3af9-NTItems.sol#1500-1518)->NTItems.whitelistValidated(stringuint256uint256bytes32[]) (crytic-export/etherscan-contracts/0x0938e3f7ac6d7f674fed551c93f363109bda3af9-NTItems.sol#1559-1583)allows merkle proof front run
"
0x000000005254e2780df608e16aa29538ee7a9ed9,T,"pCNV.mint(addressaddressuint256uint256bytes32[]) (crytic-export/etherscan-contracts/0x000000005254e2780df608e16aa29538ee7a9ed9-pCNV.sol#707-715)->MerkleProof._efficientHash(bytes32bytes32) (crytic-export/etherscan-contracts/0x000000005254e2780df608e16aa29538ee7a9ed9-pCNV.sol#448-454)allows merkle proof front run
"
0x8ec750eee372d90b3b96d52b4eb68ab3270b5419,T,"PetAirdrop.claim(uint256bytes32[]) (contracts/PetAirdrop.sol#37-54)->MerkleProof.verify(bytes32[]bytes32bytes32) (@openzeppelin/contracts/cryptography/MerkleProof.sol#15-32)allows merkle proof front run
"
0x3d4cc8a61c7528fd86c55cfe061a78dcba48edd1,F,"Bridge.withdraw(addressuint256bytes32uint256uint256uint256bytes32uint256uint256bytes32[]uint256) (contracts/bridges/Bridge.sol#175-214)->Lib_MerkleTree.verify(bytes32bytes32uint256bytes32[]uint256) (contracts/libraries/Lib_MerkleTree.sol#121-172)allows merkle proof front run
"
0x34fd51bb53ff37f18108e934fe4190cfe4c57ea2,T,"monster.whiteListMintMonster(bytes32bytes32[]string) (crytic-export/etherscan-contracts/0x34fd51bb53ff37f18108e934fe4190cfe4c57ea2-monster.sol#2050-2070)->monster.verify(bytes32bytes32bytes32[]) (crytic-export/etherscan-contracts/0x34fd51bb53ff37f18108e934fe4190cfe4c57ea2-monster.sol#1993-2018)allows merkle proof front run
"
0xf59bfeed034092e399cc43ff79edab15e2e18735,T,"WhalesGame.mintWithProof(uint256addressbytes32[]) (crytic-export/etherscan-contracts/0xf59bfeed034092e399cc43ff79edab15e2e18735-KRILL.sol#510-524)->WhalesGame._verify(bytes32[]bytes32) (crytic-export/etherscan-contracts/0xf59bfeed034092e399cc43ff79edab15e2e18735-KRILL.sol#911-923)allows merkle proof front run
"
0x6623884da17e2a0bff68773a5376292d5142aee4,F,"RecoveryVoteAggregator.votes(address[]uint256[]uint8[]) (src/recovery/RecoveryVoteAggregator.sol#7-11)->CheckpointsUpgradeable._unsafeAccess(CheckpointsUpgradeable.Checkpoint[]uint256) (lib/recovery-protocol/lib/openzeppelin-contracts-upgradeable/contracts/utils/CheckpointsUpgradeable.sol#208-213)allows merkle proof front run
"
0xb7de2ea4b1692a957e9b8070765617daa89fb5e9,T,"JesusCrypt.mintWhitelist(uint256bytes32bytes32[]) (contracts/JesusCrypt.sol#41-64)->JesusCrypt.verifyWhitelist(bytes32bytes32[]) (contracts/JesusCrypt.sol#163-188)allows merkle proof front run
"
0xd332a125ba3e5471980b7320e21884479143af92,T,"SpaceBapesCertificate.bapesFutureMint(uint256bytes32[]) (contracts/SpaceBapesCertificate.sol#95-111)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0x24103f6f965785972f0bdba638cda7a48b7ac232,T,"Zodiac.mintPresale(uint256bytes32[]bytes32) (crytic-export/etherscan-contracts/0x24103f6f965785972f0bdba638cda7a48b7ac232-Zodiac.sol#1496-1505)->MerkleProof.processProof(bytes32[]bytes32) (crytic-export/etherscan-contracts/0x24103f6f965785972f0bdba638cda7a48b7ac232-Zodiac.sol#764-777)allows merkle proof front run
"
0x822b6ecb40467f1d3f4779814f323e19168c6e29,T,"PetAirdrop.claim(uint256bytes32[]) (contracts/PetAirdrop.sol#37-54)->MerkleProof.verify(bytes32[]bytes32bytes32) (@openzeppelin/contracts/cryptography/MerkleProof.sol#15-32)allows merkle proof front run
"
0x0d7cbfa90a214fc0d8ea692779626fc3dfebbe08,T,"MegaKongs.publicMint(uint256bytes32[]stringuint256) (contracts/MegaKongs.sol#147-168)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0x9b004639b18d8203f722e795008e33cbdf02793b,T,"SpaceBapesCertificateDrop.mint(uint256bytes32[]) (contracts/SpaceBapesCertificateDrop.sol#47-63)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0x2870c0e17257934bd77b8a903d35e57a5bccc174,T,"NAT3.whitelistMint(uint256bytes32[]string) (crytic-export/etherscan-contracts/0x2870c0e17257934bd77b8a903d35e57a5bccc174-NAT3.sol#3689-3699)->MerkleProof.isWhitelisted(stringbytes32[]) (crytic-export/etherscan-contracts/0x2870c0e17257934bd77b8a903d35e57a5bccc174-NAT3.sol#2967-2973)allows merkle proof front run
"
0x5659ed70a0cedfd6e9a2f132dc37847d8b34e525,T,"BapesParentalCertificate.mint(uint256bytes32[]) (contracts/BapesParentalCertificate.sol#64-78)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0x5c76d8550e3ee731f1814c16e9726433f85adfe6,T,"MerkleMarket.purchase(Order[]) (contracts/MerkleMarket.sol#72-109)->MerkleProof.processProof(bytes32[]bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#38-51)allows merkle proof front run
"
0x53142464f2faece413aaf1886e9f21d6113d1257,F,"SolidarityBase.claimTokens(bytes32[]uint256) (contracts/SolidarityBase.sol#189-199)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0xf5b2081033de0b860fbb8a4f31e84e76fed42e90,T,"BapesGenesisKeyDrop2.mint(uint256bytes32[]) (contracts/BapesGenesisKeyDrop.sol#47-63)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0xe29a865298180140c5957b1d6ae7620a94e797f7,T,"CitizensOfHumania.mintPresale(uint256bytes32[]bytes32) (crytic-export/etherscan-contracts/0xe29a865298180140c5957b1d6ae7620a94e797f7-CitizensOfHumania.sol#1919-1939)->MerkleProof.processProof(bytes32[]bytes32) (crytic-export/etherscan-contracts/0xe29a865298180140c5957b1d6ae7620a94e797f7-CitizensOfHumania.sol#43-56)allows merkle proof front run
"
0x6e3565b525d5f80ec1f516319807a1df67760660,T,"Z3roIdentity.enterZ3rofl(uint256bytes32[]bytes32) (contracts/Z3roIdentity.sol#258-278)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#58-64)allows merkle proof front run
"
0xf90980ae7a44e2d18b9615396ff5e9252f1df639,T,"NTS2LandDeploy.landClaim(uint256uint256uint256bytes32[]) (crytic-export/etherscan-contracts/0xf90980ae7a44e2d18b9615396ff5e9252f1df639-NTS2LandDeploy.sol#1310-1322)->NTS2LandDeploy.whitelistValidated(uint256uint256uint256bytes32[]) (crytic-export/etherscan-contracts/0xf90980ae7a44e2d18b9615396ff5e9252f1df639-NTS2LandDeploy.sol#1349-1373)allows merkle proof front run
"
0xbda937f5c5f4efb2261b6fcd25a71a1c350fdf20,T,"Primes.crossBreed(uint16uint16uint256bytes32[]) (crytic-export/etherscan-contracts/0xbda937f5c5f4efb2261b6fcd25a71a1c350fdf20-Primes.sol#2267-2288)->MerkleProof.verify(bytes32[]bytes32bytes32) (crytic-export/etherscan-contracts/0xbda937f5c5f4efb2261b6fcd25a71a1c350fdf20-Primes.sol#1363-1384)allows merkle proof front run
"
0x8ee9614460e10f4b3fe66cdf557f35a2903fa9f7,T,"GalleryChosunCollection.safeMint(AppType.NFTuint256bytesbytes32[]) (contracts/Main.sol#30-38)->MerkleProof.verify(bytes32[]bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#21-42)allows merkle proof front run
"
0xf4f91e17e86486087eec955cc7d4e9fb2cb19faa,T,"Z3roIdentity.enterZ3ro(uint256bytes32[]bytes32bool) (contracts/Z3roIdentity.sol#265-293)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#58-64)allows merkle proof front run
"
0xa1c282e45f25a2af5c256cb36677018d3211cf95,T,"TreasuryBuy.buyTokens(uint256addressstringbytes32[]) (contracts/TreasuryBuy.sol#50-77)->MerkleProof.processProof(bytes32[]bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#38-51)allows merkle proof front run
"
0x3e4a3a4796d16c0cd582c382691998f7c06420b6,F,"Bridge.withdraw(addressuint256bytes32uint256uint256uint256bytes32uint256uint256bytes32[]uint256) (contracts/bridges/Bridge.sol#175-214)->Lib_MerkleTree.verify(bytes32bytes32uint256bytes32[]uint256) (contracts/libraries/Lib_MerkleTree.sol#121-172)allows merkle proof front run
"
0x8a93bc8ed29da1b090265137a9d201ebf1154626,T,"METAANIxKPP.privateSaleMint1(addressuint256bytes32[]uint256) (metaanikpp.sol#69-80)->MerkleProof._efficientHash(bytes32bytes32) (OpenZeppelinMerkleProof.sol#58-64)allows merkle proof front run
"
0xc186fa914353c44b2e33ebe05f21846f1048beda,T,"HubPool.executeRootBundle(uint256uint256uint256[]int256[]int256[]uint8address[]bytes32[]) (contracts/HubPool.sol#618-713)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0x3c54b798b3aad4f6089533af3bdbd6ce233019bb,T,"NTLandDeploy.landClaim(uint256uint256uint256uint256uint256bytes32[]) (crytic-export/etherscan-contracts/0x3c54b798b3aad4f6089533af3bdbd6ce233019bb-NTLandDeploy.sol#1334-1357)->NTLandDeploy.whitelistValidated(stringuint256uint256bytes32[]) (crytic-export/etherscan-contracts/0x3c54b798b3aad4f6089533af3bdbd6ce233019bb-NTLandDeploy.sol#1396-1420)allows merkle proof front run
"
0x7d4a3e21330f7daa01bb79172d4f5c8f7c6f5da3,T,"TheBlueTrips.claimDrop(bytes32[]addressuint256) (crytic-export/etherscan-contracts/0x7d4a3e21330f7daa01bb79172d4f5c8f7c6f5da3-TheBlueTrips.sol#651-660)->TheBlueTrips._checkProof(bytes32[]bytes32) (crytic-export/etherscan-contracts/0x7d4a3e21330f7daa01bb79172d4f5c8f7c6f5da3-TheBlueTrips.sol#617-629)allows merkle proof front run
"
0x6bb9910c5529cb3b32c4f0e13e8bc38f903b2534,T,"HubPool.executeRootBundle(uint256uint256uint256[]int256[]int256[]uint8address[]bytes32[]) (contracts/HubPool.sol#603-698)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0x8abcf1be1e0e7a618e835c540f3a6da5ff74a5c0,T,"FSCS2.mintWhitelist(uint8addressbytes32[]) (crytic-export/etherscan-contracts/0x8abcf1be1e0e7a618e835c540f3a6da5ff74a5c0-FSCS2.sol#1631-1651)->MerkleProof._efficientHash(bytes32bytes32) (crytic-export/etherscan-contracts/0x8abcf1be1e0e7a618e835c540f3a6da5ff74a5c0-FSCS2.sol#291-297)allows merkle proof front run
"
0xf07a16548485455c689d7bb16657689505aa4ca2,T,"Encantos.privilegedMint(uint256uint256uint256addressbytes32[]) (contracts/Ecantos-flattened.sol#1330-1352)->MerkleProof._efficientHash(bytes32bytes32) (contracts/Ecantos-flattened.sol#619-625)allows merkle proof front run
"
0x3788efc6481d9182fc4c7687f3b8ddd794e14cc5,T,"DedSo.freeMint(uint256bytes32[]) (contracts/DedSo.sol#66-82)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#58-64)allows merkle proof front run
"
0xa9b3a94a276e295878a3dd6d0854b116406b81f0,T,"Poppables.mintGiftNFTs(addressbytes32[]) (contracts/Poppables.sol#106-121)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0x2c11c90ba72ec4f0d494623dd1fa2a076d47dac7,T,"PetAirdrop.claim(uint256bytes32[]) (contracts/PetAirdrop.sol#37-54)->MerkleProof.verify(bytes32[]bytes32bytes32) (@openzeppelin/contracts/cryptography/MerkleProof.sol#15-32)allows merkle proof front run
"
0x57f0b53926dd62f2e26bc40b30140abea474da94,T,"PetAirdrop.claim(uint256bytes32[]) (contracts/PetAirdrop.sol#37-54)->MerkleProof.verify(bytes32[]bytes32bytes32) (@openzeppelin/contracts/cryptography/MerkleProof.sol#15-32)allows merkle proof front run
"
0xa30783603441e849d5731ff4d813cdfa948afaa5,T,"KingCrocodileClub.privateMint(addressbytes32[]uint256) (crytic-export/etherscan-contracts/0xa30783603441e849d5731ff4d813cdfa948afaa5-KingCrocodileClub.sol#1557-1580)->MerkleProof.processProof(bytes32[]bytes32) (crytic-export/etherscan-contracts/0xa30783603441e849d5731ff4d813cdfa948afaa5-KingCrocodileClub.sol#152-165)allows merkle proof front run
"
0x7ac66d40d80d2d8d1e45d6b5b10a1c9d1fd69354,T,"NTS2Items.identityClaim(uint256uint256uint256bytes32[]) (crytic-export/etherscan-contracts/0x7ac66d40d80d2d8d1e45d6b5b10a1c9d1fd69354-NTS2Items.sol#1336-1349)->NTS2Items.whitelistValidated(uint256uint256uint256bytes32[]) (crytic-export/etherscan-contracts/0x7ac66d40d80d2d8d1e45d6b5b10a1c9d1fd69354-NTS2Items.sol#1376-1400)allows merkle proof front run
"
0xc1f0cb1a9f5153c21c43339ee3ab723d558ff057,T,"GudGuys.freeMint(bytes32[]addressuint256) (contracts/GudGuys.sol#78-89)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0x39975fa960cf20f16aa080408cd0aaeae838d2e2,T,"CryptoBozosNFT.mintGenesis(uint8addressbytes32[]) (crytic-export/etherscan-contracts/0x39975fa960cf20f16aa080408cd0aaeae838d2e2-CryptoBozosNFT.sol#1640-1651)->MerkleProof._efficientHash(bytes32bytes32) (crytic-export/etherscan-contracts/0x39975fa960cf20f16aa080408cd0aaeae838d2e2-CryptoBozosNFT.sol#291-297)allows merkle proof front run
"
0xf9b0d42bd7dd5efa9142faadef945364fbc61137,T,"HillbillyHoller721LGG2.mint(stringbytes32[]uint256) (contracts/HillbillyHoller721-Ticketing-LowGas.sol#42-64)->MerkleProof.processProof(bytes32[]bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#38-51)allows merkle proof front run
"
0x3682802ccca40fd73b321dd4d3da466aebad5623,T,"TownOfSalem.ClaimAirdrop(bytes32bytes32[]) (TownOfSalem.sol#17-29)->MerkleProof.verify(bytes32[]bytes32bytes32) (MerkleProof.sol#41-58)allows merkle proof front run
"
0x3e058b6736fe0d40e0f6c3c283c1f6c870bd0903,T,"Nft_erc721.mint_WLTokenId(uint256bytes32[]) (crytic-export/etherscan-contracts/0x3e058b6736fe0d40e0f6c3c283c1f6c870bd0903-PrjFactory.sol#2003-2009)->MerkleProof.processProof(bytes32[]bytes32) (crytic-export/etherscan-contracts/0x3e058b6736fe0d40e0f6c3c283c1f6c870bd0903-PrjFactory.sol#1781-1794)allows merkle proof front run
"
0x6da8bbdc18bb14acec3269404763f0c13d0cf805,T,"RescueMission.rescue(uint256addressuint256bytes32[]) (crytic-export/etherscan-contracts/0x6da8bbdc18bb14acec3269404763f0c13d0cf805-RescueMission.sol#136-158)->RescueMission.verify(addressuint256bytes32bytes32[]) (crytic-export/etherscan-contracts/0x6da8bbdc18bb14acec3269404763f0c13d0cf805-RescueMission.sol#108-127)allows merkle proof front run
"
0xb6ca7399b4f9ca56fc27cbff44f4d2e4eef1fc81,T,"PetAirdrop.claim(uint256bytes32[]) (contracts/PetAirdrop.sol#37-54)->MerkleProof.verify(bytes32[]bytes32bytes32) (@openzeppelin/contracts/cryptography/MerkleProof.sol#15-32)allows merkle proof front run
"
0x1a300c5a5639c4605c1b47f6e079e8b4056a9376,T,"WhalesGame.mintWithProof(uint256addressbytes32[]) (crytic-export/etherscan-contracts/0x1a300c5a5639c4605c1b47f6e079e8b4056a9376-StakingRewards.sol#510-524)->WhalesGame._verify(bytes32[]bytes32) (crytic-export/etherscan-contracts/0x1a300c5a5639c4605c1b47f6e079e8b4056a9376-StakingRewards.sol#911-923)allows merkle proof front run
"
0x327befece9caa72aee7d563b4bb8d8ef7c34bc63,T,"UnitedNationsCryptostamp.mintClaimWithMerkleProof(addressuint256addressbytesbytes32bytes32[]) (crytic-export/etherscan-contracts/0x327befece9caa72aee7d563b4bb8d8ef7c34bc63-UnitedNationsCryptostamp.sol#1808-1837)->MerkleProof.verify(bytes32[]bytes32bytes32) (crytic-export/etherscan-contracts/0x327befece9caa72aee7d563b4bb8d8ef7c34bc63-UnitedNationsCryptostamp.sol#1529-1546)allows merkle proof front run
"
0xc5f919d729051d2bff3a71c159096828b0dd9f45,T,"BapesGenesisKey2.mint(uint256bytes32[]) (contracts/BapesGenesisKey2.sol#45-59)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0x8661cd0c4a3fd3dc6b31cd24b20368851749df00,T,"CubeXCard.mint(uint256bytes32[]) (contracts/CubeXCard.sol#46-62)->MerkleProof._efficientHash(bytes32bytes32) (@openzeppelin/contracts/utils/cryptography/MerkleProof.sol#53-59)allows merkle proof front run
"
0x45d3a7a9ed477a1b3351175b2868ce3d39502d35,T,"PetAirdrop.claim(uint256bytes32[]) (contracts/PetAirdrop.sol#37-54)->MerkleProof.verify(bytes32[]bytes32bytes32) (@openzeppelin/contracts/cryptography/MerkleProof.sol#15-32)allows merkle proof front run
"