Contract Address,TP/FP,Description
0x865afba536205d56ab0223de00647ae8b3817ca0,T,"Registry.submitProposal(stringstringuint8uint256uint8uint256addressaddress) (crytic-export/etherscan-contracts/0x865afba536205d56ab0223de00647ae8b3817ca0-Manager.sol#109-139) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hashIndex = keccak256(bytes)(abi.encodePacked(_name_symbol_proposer)) (crytic-export/etherscan-contracts/0x865afba536205d56ab0223de00647ae8b3817ca0-Manager.sol#125)
"
0x4e70cefb96a9d0f0dc674ec21cf8e42f82773dd4,T,"BaseChain.verifyProofForBlock(uint256bytes32[]bytesbytes) (contracts/BaseChain.sol#107-114) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:verifyProof(_proofblocks[_blockId].rootkeccak256(bytes)(abi.encodePacked(_key_value))) (contracts/BaseChain.sol#113)
"
0x7d256d82b32d8003d1ca1a1526ed211e6e0da9e2,T,"YAT._verifyRecordUpdate(uint256stringstringuint256bytes) (crytic-export/etherscan-contracts/0x7d256d82b32d8003d1ca1a1526ed211e6e0da9e2-YAT.sol#593-597) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:_hash = keccak256(bytes)(abi.encodePacked(_tokenId_key_value_nonce)) (crytic-export/etherscan-contracts/0x7d256d82b32d8003d1ca1a1526ed211e6e0da9e2-YAT.sol#594)
"
0xdf167ab023944105c2ba15b2098f00ac96a51067,T,"Ticket.activateTicket(addressuint256uint256uint8[]uint32[]uint32[]) (Ticket.sol#52-58) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:require(boolstring)(ticketToActivate.hashedData == keccak256(bytes)(abi.encodePacked(saltdata))The data does not match.) (Ticket.sol#55)
"
0x7b96eae24193302a31ce1fcf414ab76ff9d10d83,T,"SwapShop._validateSwap(uint256[]uint256[]bytes) (contracts/SwapShop.sol#324-330) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:messageHash = keccak256(bytes)(abi.encodePacked(tokenIdsoutgoingTokenIds)) (contracts/SwapShop.sol#325)
"
0xce73f0473a49807a92a95659c0b8dd883b29c252,T,"PixelRoyale.pseudoRandom(uint256string) (PixelRoyale.sol#151-154) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:number = uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.difficultymsg.sendersalt_specialSalt))) % _number (PixelRoyale.sol#152)
"
0x1485e9852ac841b52ed44d573036429504f4f602,T,"Bridge.addEthNativeToken(addressstringstringuint8bytes32uint8[]bytes32[]bytes32[]) (Bridge.sol#113-133) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:require(boolstring)(checkSignatures(keccak256(bytes)(abi.encodePacked(newTokentickernamedecimalstxHash_networkId))vrs)Peer signatures are invalid) (Bridge.sol#126-130)
"
0x4819dab28d11de83c20c75c7fa2a6eac9dc948d4,T,"MetaversePlayers._leaf(stringstring) (MetaversePlayers.sol#139-141) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(payloadallowance)) (MetaversePlayers.sol#140)
"
0x41cb0988aa0278edbcf97d4964dfdd58e4db5c74,F,"SignerVerification.getPrefixedHashMessage(string) (contracts/SignerVerification.sol#19-23) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(prefixconcatenatedParams)) (contracts/SignerVerification.sol#22)
"
0x073c4ea5a89d0e5aa0408a1b6dd8bbfcdba985c0,T,"SimplePriceFeed._updatePrices(address[]uint256[]) (crytic-export/etherscan-contracts/0x073c4ea5a89d0e5aa0408a1b6dd8bbfcdba985c0-Version.sol#1960-1972) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:PriceUpdated(keccak256()(ofAssetsnewPrices)) (crytic-export/etherscan-contracts/0x073c4ea5a89d0e5aa0408a1b6dd8bbfcdba985c0-Version.sol#1971)
"
0xffe844169bfc6da1b87c9157f684e18e7f1663ad,F,"AwooToken.hashTransaction(addressuint256) (crytic-export/etherscan-contracts/0xffe844169bfc6da1b87c9157f684e18e7f1663ad-AwooToken.sol#1248-1272) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hash = keccak256(bytes)(abi.encodePacked(Ethereum Signed Message:
"
0x5bb3d01f32687f92f8636799687e55cba0627704,T,"MurAllNFT.mint(addressuint256[]uint256[]uint256[]uint256[]uint256[]uint256[]uint256[2]) (crytic-export/etherscan-contracts/0x5bb3d01f32687f92f8636799687e55cba0627704-MurAllNFT.sol#2233-2265) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:dataHash = keccak256(bytes)(abi.encodePacked(colorIndexindividualPixelspixelGroupspixelGroupIndexestransparentPixelGroupstransparentPixelGroupIndexes)) (crytic-export/etherscan-contracts/0x5bb3d01f32687f92f8636799687e55cba0627704-MurAllNFT.sol#2244-2253)
"
0xc6daa750ac5881d32bde941df228b343552fcbd9,T,"PixelRoyale.pseudoRandom(uint256string) (PixelRoyale.sol#151-154) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:number = uint256(keccak256(bytes)(abi.encodePacked(block.timestampblock.difficultymsg.sendersalt_specialSalt))) % _number (PixelRoyale.sol#152)
"
0x9db30afc538815649047a4121884b123525503f0,T,"OmmuseNFT.hashSplitGenerator(address[]uint32[]uint32) (src/contracts/OmmuseNFT.sol#553-562) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(accountspercentAllocationsdistributorFee)) (src/contracts/OmmuseNFT.sol#558-561)
"
0xc8d4fb0c2fad42abf85d123381e92d81f97b3e03,T,"TWMStaking._validateSignature(bytesaddressuint256[]uint256[]) (contracts/TWMStaking.sol#347-361) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:dataHash = keccak256(bytes)(abi.encodePacked(contractAddresstokenIdstokenTraits)) (contracts/TWMStaking.sol#353-355)
"
0xc77ceefa6960174accca0c6fdecb5dbd95042cda,T,"RequestERC20.getRequestHash(bytesaddress[]uint256) (crytic-export/etherscan-contracts/0xc77ceefa6960174accca0c6fdecb5dbd95042cda-RequestERC20.sol#1663-1672) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256()(this_requestData_payeesPaymentAddress_expirationDate) (crytic-export/etherscan-contracts/0xc77ceefa6960174accca0c6fdecb5dbd95042cda-RequestERC20.sol#1671)
"
0x3adf71d5fbb59e32730ceb8e6605af958a204e6b,T,"GearPod.batchMint(bytesuint256[]uint256[]uint256[]uint256[]) (contracts/GearPod.sol#94-139) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hash = keccak256(bytes)(abi.encodePacked(msg.sender_validTokenIds_maxAmounts)) (contracts/GearPod.sol#106-108)
"
0x3d2da31a3253b54bfdc11561ecbabd42b15daf14,T,"TulipMania.getRandomUint(stringuint256) (src/TulipMania.sol#108-110) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:uint256(keccak256(bytes)(abi.encodePacked(secretdatatokenId))) (src/TulipMania.sol#109)
"
0x70f2202d85a4f0cad36e978976f84e982920a624,T,"DKGResultVerification.verify(DKGResultVerification.Storageuint256bytesbytesbytesuint256[]address[]uint256) (solidity/contracts/libraries/operator/DKGResultVerification.sol#47-95) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:resultHash = keccak256(bytes)(abi.encodePacked(groupPubKeymisbehaved)) (solidity/contracts/libraries/operator/DKGResultVerification.sol#83)
"
0x85470ac68b125dd21505fce9c75e6b3ffb279932,T,"BonesClubHeritageBridge.claim(uint256uint16bytes32bytes32[]) (crytic-export/etherscan-contracts/0x85470ac68b125dd21505fce9c75e6b3ffb279932-BonesClubHeritageBridge.sol#944-966) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:node = keccak256(bytes)((abi.encodePacked(_oldId.toString()_newId.toString()))) (crytic-export/etherscan-contracts/0x85470ac68b125dd21505fce9c75e6b3ffb279932-BonesClubHeritageBridge.sol#954)
"
0xf00172973000353b374eab318620f772f833a3e3,T,"LaLeyenda._leaf(stringstring) (src/LaLeyenda.sol#30-36) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(payloadtokenId)) (src/LaLeyenda.sol#35)
"
0x2b0bfa93beb22f44e7c1be88efd80396f8d9f1d4,T,"StateOfTheArt._generateHash(uint256[]stringaddress) (StateOfTheArt.sol#292-302) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(Ethereum Signed Message:
"
0x97fb1d26933fcd8f4522a652b78f1748205c1f15,F,"SignerVerification.getPrefixedHashMessage(string) (contracts/libs/SignerVerification.sol#19-23) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(prefixconcatenatedParams)) (contracts/libs/SignerVerification.sol#22)
"
0x702241c23f1add928c286e65b9e4adc993481702,T,"LegendsOfVenariPass.getPartnerSigningHash(addressuint256[]address[]uint256) (Users/jingsongdu/Documents/lov-smart-contracts/contracts/LegendsOfVenariPass.sol#287-297) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(senderfactionIdsaddressesnonce)) (Users/jingsongdu/Documents/lov-smart-contracts/contracts/LegendsOfVenariPass.sol#293-296)
"
0x059956483753947536204e89bfad909e1a434cc6,T,"MLTToken.addRoot(bytes32bytes32uint256stringMLTToken.Allocationbytes32[]bytes32[]bytes32[]bytes32[]MLTToken.VestingData[]) (contracts/MLTToken.sol#189-283) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:require(boolstring)(MerkleProof.verify(initialAllocationProof_root_keccak256(bytes)(abi.encodePacked(msg.senderallocation_.unlockingallocation_.monthlyallocation_.monthsallocation_.cliff))) && MerkleProof.verify(newAllocationProof_newRoot_keccak256(bytes)(abi.encodePacked(msg.senderallocation_.unlockingallocation_.monthlyallocation_.monthsallocation_.cliff)))Allocation type of the new Merkle tree is invalid) (contracts/MLTToken.sol#211-236)
"
0xcab0aee29be3b2e9556003e9d4a77e0e1ea07702,T,"AcrocalpyseStaking.stake(bytesuint256uint256[]uint256[]uint256[]) (contracts/AcrocalpyseStaking.sol#79-142) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hash = ECDSA.toEthSignedMessageHash(keccak256(bytes)(abi.encodePacked(_msgSender()stakePooltokenIdsrewardsPerDaypool1RewardsPerDay))) (contracts/AcrocalpyseStaking.sol#87-89)
"
0x4776defcf622c60c6419cccc9ee9e9042fadf3f7,T,"Coinage.networkMint(bytes32bytesstringuint256uint256) (contracts/Coinage.sol#119-158) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:msgHash = keccak256(bytes)(abi.encodePacked(msg.senderreferralCodeStrings.toString(networkGroupId)Strings.toString(coinageUserId))) (contracts/Coinage.sol#142-149)
"
0x0c162af6255d78c3074fb4dbe12635d5cf950b14,T,"BankCDramAlfa1.parseSignature(uint256uint256bytes) (contracts/BankCDramAlfa1.sol#144-149) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hash = keccak256(bytes)(abi.encodePacked(Strings.toString(ethValue)Strings.toString(cdValue))) (contracts/BankCDramAlfa1.sol#145)
"
0xe92c4a361a463fb74d288893d82a9623894ceaf1,T,"IntellectualPropertyValueChain.IntellectualPropertyValueChain(addressbytes32) (crytic-export/etherscan-contracts/0xe92c4a361a463fb74d288893d82a9623894ceaf1-IntellectualPropertyValueChain.sol#70-74) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:key = keccak256()(namesymbol) == _key (crytic-export/etherscan-contracts/0xe92c4a361a463fb74d288893d82a9623894ceaf1-IntellectualPropertyValueChain.sol#71)
"
0xf3f962d50501ecf4ac8463e48b623a5a6abf227a,T,"TrumpyDumpy._leaf(stringstring) (crytic-export/etherscan-contracts/0xf3f962d50501ecf4ac8463e48b623a5a6abf227a-TrumpyDumpy.sol#1199-1205) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(payloadallowance)) (crytic-export/etherscan-contracts/0xf3f962d50501ecf4ac8463e48b623a5a6abf227a-TrumpyDumpy.sol#1204)
"
0x3ca6accc609293724cf2867707bbe36a7065bffb,T,"DOGIUMExtraction._validateSignature(bytesaddressuint256[]uint256[]) (contracts/DogiumExtraction.sol#272-283) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:dataHash = keccak256(bytes)(abi.encodePacked(contractAddresstokenIdstokenTraits)) (contracts/DogiumExtraction.sol#278)
"
0x93fd29ff3b662c9e5e15681bb3b139d6ce2ca9c5,T,"BridgeEntrance._validateAssetRegistration(addressbytesbytes) (contracts/BridgeEntrance.sol#95-109) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:value = keccak256(bytes)(abi.encodePacked(_proxyAddress_fromAssetDenom)) (contracts/BridgeEntrance.sol#104-107)
"
0x0161b706371e0725e96c67cf55b2384540374cf1,T,"FlightTickets.generateMessageHash(addressuint256uint256uint256[]uint256[]uint16[]uint16[]) (contracts/FlightTickets.sol#217-248) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(Ethereum Signed Message:
"
0x4f6fe3bbefdb17e23d6e74a33482413c961569c3,T,"Cillionaire.chooseWinner(stringstring) (crytic-export/etherscan-contracts/0x4f6fe3bbefdb17e23d6e74a33482413c961569c3-Cillionaire.sol#137-150) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:require(bool)(keccak256()(_ownerRandomNumber_ownerRandomSecret) == ownerRandomHash) (crytic-export/etherscan-contracts/0x4f6fe3bbefdb17e23d6e74a33482413c961569c3-Cillionaire.sol#138)
"
0x8a54f54cf79a88347adde5ee51310d2535be5017,T,"VSPBlackCard.verifySignature(uint256[]uint256[]bytes) (contracts/VSPBlackCard.sol#212-218) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hash = keccak256(bytes)(abi.encodePacked(nftsnftValues)) (contracts/VSPBlackCard.sol#214)
"
0xedf8f131cf3e6418b3e6f8649566b457216b24c1,T,"InterstellarSamuraiNFT.hashRandomSeedFromVRF(uint256uint256) (crytic-export/etherscan-contracts/0xedf8f131cf3e6418b3e6f8649566b457216b24c1-InterstellarSamuraiNFT.sol#2192-2205) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(uint256(VRFResult).toString()_tokenId.toString()_traitId.toString())) (crytic-export/etherscan-contracts/0xedf8f131cf3e6418b3e6f8649566b457216b24c1-InterstellarSamuraiNFT.sol#2197-2204)
"
0xba79e64ef86503d6c7ba32dd6c80802d209a3137,T,"NFTNewsCert.isMintableCombination(stringstring) (contracts/NFTNewsCert.sol#94-97) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:convination = keccak256(bytes)(abi.encodePacked(_color_signature)) (contracts/NFTNewsCert.sol#95)
"
0x66287339fb0dd3f3a89d41cdf103ee8f1f90cbe7,T,"BackedFactory.deployToken(stringstringaddressaddressaddressaddressaddress) (contracts/BackedFactory.sol#80-103) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:salt = keccak256(bytes)(abi.encodePacked(namesymbol)) (contracts/BackedFactory.sol#84)
"
0x2580bcfee471807f75314baac8facb7f63d5b761,T,"NFTMarket.purchaseTokenByERC20(bytesuint256addressaddressuint256uint256addressaddress[]uint256[]) (crytic-export/etherscan-contracts/0x2580bcfee471807f75314baac8facb7f63d5b761-NFTMarket.sol#1407-1414) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:require(boolstring)(validateSignatureMessageToken(_signatureMessagetimestamp_erc721Address_erc20address_tokenId_fromvaluekeccak256(bytes)(abi.encodePacked(_receiveAddresses_receiveFees)))Signature message is invalid.) (crytic-export/etherscan-contracts/0x2580bcfee471807f75314baac8facb7f63d5b761-NFTMarket.sol#1412)
"
0xe777047ee330200775d7fb7e0051432f68c36821,T,"Broker.fillOffers(addressbytes32[]uint256[]addressuint256uint64uint8bytes32bytes32) (crytic-export/etherscan-contracts/0xe777047ee330200775d7fb7e0051432f68c36821-Broker.sol#805-859) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:msgHash = keccak256()(abi.encodePacked(fillOffers_filler_offerHashes_amountsToTake_feeAsset_feeAmount_nonce)) (crytic-export/etherscan-contracts/0xe777047ee330200775d7fb7e0051432f68c36821-Broker.sol#829-839)
"
0xa4741ca34692a45c20dcbb24dcdf51fa2ce3bdb8,F,"SignerVerification.getPrefixedHashMessage(string) (contracts/libs/SignerVerification.sol#19-23) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(prefixconcatenatedParams)) (contracts/libs/SignerVerification.sol#22)
"
0x970fbc3126e19dc57f6649133436c2def00051a8,T,"EterArt.mint(stringuint256uint256uint8bytes32bytes32) (crytic-export/etherscan-contracts/0x970fbc3126e19dc57f6649133436c2def00051a8-EterArt.sol#315-331) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:require(bool)(ecrecover(bytes32uint8bytes32bytes32)(keccak256()(Ethereum Signed Message:
"
0x5427fefa711eff984124bfbb1ab6fbf5e3da1820,T,"Signers._updateSigners(address[]uint256[]) (contracts/Signers.sol#125-134) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:ssHash = keccak256(bytes)(abi.encodePacked(_signers_powers)) (contracts/Signers.sol#132)
"
0xa87492ec6246c71a1e026b042beb78ec295e8f07,T,"QUOKKA_KIDS_STOREFRONT.parent(bool[]uint256[]address[]bool[]bytes) (contracts/QUOKKA_KIDS_STOREFRONT.sol#157-200) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:digestreal = keccak256(bytes)(encoded) (contracts/QUOKKA_KIDS_STOREFRONT.sol#162)
"
0x89ba842c76ca758e8f4c83921f514aa9bf68d3fb,T,"AssetBuyBack.isValidSignature(uint256addressuint256[]uint256[]stringbytes) (crytic-export/etherscan-contracts/0x89ba842c76ca758e8f4c83921f514aa9bf68d3fb-AssetBuyBack.sol#134-152) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:message = keccak256(bytes)(abi.encodePacked(timestamp_walletAddress_land_weapons_transactionId_)) (crytic-export/etherscan-contracts/0x89ba842c76ca758e8f4c83921f514aa9bf68d3fb-AssetBuyBack.sol#142-150)
"
0x53bea59b69bf9e58e0afeeb4f34f49fc29d10f55,T,"MTMLib.getItemRarity(uint16string) (crytic-export/etherscan-contracts/0x53bea59b69bf9e58e0afeeb4f34f49fc29d10f55-MTMCharactersController.sol#126-129) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:_rarity = uint256(keccak256(bytes)(abi.encodePacked(keyPrefix_Strings.toString(spaceCapsuleId_)))) % 21 (crytic-export/etherscan-contracts/0x53bea59b69bf9e58e0afeeb4f34f49fc29d10f55-MTMCharactersController.sol#127)
"
0xd8e5fc08a80e84bdf1d4c957c64122b049ac6c28,T,"Governor.getPredictedAddresses(IGovernor.TokenIGovernor.Safebytes) (contracts/implementations/Governor.sol#386-413) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:token = Clones.predictDeterministicAddress(erc20Singletonkeccak256(bytes)(abi.encodePacked(_tokenData.tokenName_tokenData.tokenSymbol_tokenData.maxSupply))) (contracts/implementations/Governor.sol#398-407)
"
0x8c4113c37cb19ac017a6ad85c791b9d5988732d9,T,"ERC20FactoryByMetadrop._createBytesParamsHash(IERC20ConfigByMetadrop.ERC20Config) (contracts/ERC20Factory/ERC20Factory/ERC20FactoryByMetadrop.sol#686-699) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:configHash_ = keccak256(bytes)(abi.encodePacked(erc20Config_.baseParameterserc20Config_.supplyParameterserc20Config_.taxParameterserc20Config_.poolParameters)) (contracts/ERC20Factory/ERC20Factory/ERC20FactoryByMetadrop.sol#689-696)
"
0x21819da7afa4089217c62f1d971fb1397b1f50e4,T,"Serums.batchClaim(uint256[]uint256[]bytes) (contracts/Serums.sol#80-92) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hash = keccak256(bytes)(abi.encodePacked(serumIdsclaimAmountsmsg.sender)) (contracts/Serums.sol#82)
"
0x6442bdfd16352726aa25ad6b3cbab3865c05ed15,T,"MurAllNFT.mint(addressuint256[]uint256[]uint256[]uint256[]uint256[]uint256[]uint256[2]) (crytic-export/etherscan-contracts/0x6442bdfd16352726aa25ad6b3cbab3865c05ed15-MurAll.sol#2682-2714) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:dataHash = keccak256(bytes)(abi.encodePacked(colorIndexindividualPixelspixelGroupspixelGroupIndexestransparentPixelGroupstransparentPixelGroupIndexes)) (crytic-export/etherscan-contracts/0x6442bdfd16352726aa25ad6b3cbab3865c05ed15-MurAll.sol#2693-2702)
"
0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0,T,"SignedTransferToken.calculateManyHash(addressaddress[]uint256[]uint256uint256) (crytic-export/etherscan-contracts/0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0-FourToken.sol#538-540) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256()(uint256(1)address(this)_from_tos_values_fee_nonce) (crytic-export/etherscan-contracts/0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0-FourToken.sol#539)
"
0xe44d5393cc60d67c7858aa75cf307c00e837f0e5,T,"RequestERC20.getRequestHash(bytesaddress[]uint256) (crytic-export/etherscan-contracts/0xe44d5393cc60d67c7858aa75cf307c00e837f0e5-RequestERC20.sol#1663-1672) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256()(this_requestData_payeesPaymentAddress_expirationDate) (crytic-export/etherscan-contracts/0xe44d5393cc60d67c7858aa75cf307c00e837f0e5-RequestERC20.sol#1671)
"
0x0bb502e1ac49dbba63783612804b4f03ea77520b,T,"StickyNFT.hashColor(stringstring) (crytic-export/etherscan-contracts/0x0bb502e1ac49dbba63783612804b4f03ea77520b-StickyNFT.sol#2085-2088) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(_bg_fg)) (crytic-export/etherscan-contracts/0x0bb502e1ac49dbba63783612804b4f03ea77520b-StickyNFT.sol#2087)
"
0x916deab80dfbc7030277047cd18b233b3ce5b4ab,T,"ArbitrableTokenList.requestStatusChange(stringstringaddressstring) (crytic-export/etherscan-contracts/0x916deab80dfbc7030277047cd18b233b3ce5b4ab-ArbitrableAddressList.sol#1338-1401) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:tokenID = keccak256()(abi.encodePacked(_name_ticker_addr_symbolMultihash)) (crytic-export/etherscan-contracts/0x916deab80dfbc7030277047cd18b233b3ce5b4ab-ArbitrableAddressList.sol#1347-1354)
"
0xc3f836d6bfa294fbb5899323619c9324fc0e25e3,T,"Broker.fillOffers(addressbytes32[]uint256[]addressuint256uint64uint8bytes32bytes32) (crytic-export/etherscan-contracts/0xc3f836d6bfa294fbb5899323619c9324fc0e25e3-AirDropper.sol#805-859) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:msgHash = keccak256()(abi.encodePacked(fillOffers_filler_offerHashes_amountsToTake_feeAsset_feeAmount_nonce)) (crytic-export/etherscan-contracts/0xc3f836d6bfa294fbb5899323619c9324fc0e25e3-AirDropper.sol#829-839)
"
0xa92ed7c28d1ef5a09e805365ac1d868c3326f3d3,T,"ForeverRugs.isSignedMint(bytesstringstring) (crytic-export/etherscan-contracts/0xa92ed7c28d1ef5a09e805365ac1d868c3326f3d3-ForeverRugs.sol#1323-1330) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hash = keccak256(bytes)(abi.encodePacked(paramsnonce)) (crytic-export/etherscan-contracts/0xa92ed7c28d1ef5a09e805365ac1d868c3326f3d3-ForeverRugs.sol#1325)
"
0x4510f35150d5202c2e86a57790861b67f27ba341,T,"MutantNotOkayBears.mintServer(uint256stringstringbytes) (crytic-export/etherscan-contracts/0x4510f35150d5202c2e86a57790861b67f27ba341-MutantNotOkayBears.sol#1589-1597) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:message = prefixed(keccak256(bytes)(abi.encodePacked(msg.valuemsg.sendercounturisalt))) (crytic-export/etherscan-contracts/0x4510f35150d5202c2e86a57790861b67f27ba341-MutantNotOkayBears.sol#1590)
"
0x63ac91d179afb27d0730e781a2461eb14aeee010,T,"NegativeEntropy.addressFromSignature(stringstringaddressuint8bytes32bytes32) (crytic-export/etherscan-contracts/0x63ac91d179afb27d0730e781a2461eb14aeee010-NegativeEntropy.sol#2592-2611) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:checkHash = keccak256(bytes)(abi.encodePacked(_contaccountseedtokenURI)) (crytic-export/etherscan-contracts/0x63ac91d179afb27d0730e781a2461eb14aeee010-NegativeEntropy.sol#2606)
"
0xc3e7aac0b4ecdc1fd904529f614bb54b41a4cbe3,T,"DAgoraMarketplace.listingForAuction(addressaddress[]uint256[]uint256uint256uint256) (crytic-export/etherscan-contracts/0xc3e7aac0b4ecdc1fd904529f614bb54b41a4cbe3-DAgoraMarketplace.sol#1594-1619) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:nftHash = keccak256(bytes)(abi.encodePacked(_tokenAddresses_tokenIds)) (crytic-export/etherscan-contracts/0xc3e7aac0b4ecdc1fd904529f614bb54b41a4cbe3-DAgoraMarketplace.sol#1599)
"
0x280067fbe9353dda81af538707ed42467f157beb,T,"HYB.mint(bytesuint256[]uint256[]) (contracts/HYB.sol#31-47) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:messagehash = keccak256(bytes)(message) (contracts/HYB.sol#33)
"
0xe19050a7d805029445417deec3a8873c5c9f4282,T,"CustomVoiceNFT.hashTransaction(addressstringstring) (contracts/CustomVoiceNFT.sol#94-104) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hash = keccak256(bytes)(abi.encodePacked(senderaddress(this)cidcustomNonce)) (contracts/CustomVoiceNFT.sol#99-101)
"
0xf1a46a67a8abb2adcfce4b2184646cfd8b134ce8,T,"BridgeSquishiverseItem.claim(addressuint256[]uint256[]uint256uint256bytes) (contracts/BridgeSquishiverseItem.sol#118-145) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:data = keccak256(bytes)(abi.encodePacked(recipientidsamountsoldBlocknewBlock)) (contracts/BridgeSquishiverseItem.sol#131-133)
"
0x9afb950948c2370975fb91a441f36fdc02737cd4,T,"HFILLogic.burnLogic(addressuint256stringstringbytes32addressuint256) (HFILLogic.sol#50-69) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:require(boolstring)(taskHash == keccak256(bytes)((abi.encodePacked(fromvaluefilAddressproof)))taskHash is wrong) (HFILLogic.sol#57)
"
0x1e90662a2c3a3369eef84ceb9e2e8a045573a412,T,"GameToken.hashTransaction(addressstringstringuint256) (contracts/GameToken.sol#35-42) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hash = keccak256(bytes)(abi.encodePacked(Ethereum Signed Message:
"
0xc578cbaf5a411dfa9f0d227f97dadaa4074ad062,T,"Signers.verifySigs(bytesbytes[]address[]uint256[]) (contracts/Signers.sol#31-40) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:h = keccak256(bytes)(abi.encodePacked(_signers_powers)) (contracts/Signers.sol#37)
"
0x2401d75bf6e88ef211e51bd3e15415860025fdb9,T,"AdvancedOToken.getProofBulkTransfer(bytes32uint256addressaddress[]uint256[]bool) (OToken.sol#888-905) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:proof = keccak256(bytes)(abi.encodePacked(getChainID()bytes4(methodWord_transfer)address(this)tokennetworkFeebroadcaster_addressArr_amountArr_includingFees)) (OToken.sol#893-903)
"
0x4a10307e221781570e4b7e409eb315f11e8d0385,T,"HXTZLogic.burnLogic(addressuint256stringstringbytes32addressuint256) (HXTZLogic.sol#50-69) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:require(boolstring)(taskHash == keccak256(bytes)((abi.encodePacked(fromvaluextzAddressproof)))taskHash is wrong) (HXTZLogic.sol#57)
"
0x7f031ce5df8b397680fe025c9a9a15bcb2bdabf1,T,"ValidatorManagerContract.rotateValidators(address[]uint64[]uint256[]uint8[]bytes32[]bytes32[]) (crytic-export/etherscan-contracts/0x7f031ce5df8b397680fe025c9a9a15bcb2bdabf1-Gateway.sol#282-304) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:message = createMessage(keccak256(bytes)(abi.encodePacked(_newValidators_newPowers))) (crytic-export/etherscan-contracts/0x7f031ce5df8b397680fe025c9a9a15bcb2bdabf1-Gateway.sol#294-296)
"
0x9a0720c0926d9d436bd69fc9a51ddb7698193623,T,"CertificationRegistry.toCertificateKey(stringstring) (crytic-export/etherscan-contracts/0x9a0720c0926d9d436bd69fc9a51ddb7698193623-CertificationRegistry.sol#391-397) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(_CertID_organizationID)) (crytic-export/etherscan-contracts/0x9a0720c0926d9d436bd69fc9a51ddb7698193623-CertificationRegistry.sol#396)
"
0xdab189b6de4d458c9ee8ef7201719fb9e74b7481,F,"ART._createString(string) (crytic-export/etherscan-contracts/0xdab189b6de4d458c9ee8ef7201719fb9e74b7481-ART.sol#966-978) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:d = uint256(keccak256()(abi.encodePacked(_title_titlerandNonce))) % characterQuantity (crytic-export/etherscan-contracts/0xdab189b6de4d458c9ee8ef7201719fb9e74b7481-ART.sol#970)
"
0x27e1d539cb59518bf14e4525b1c3b4721aaa9080,T,"SignedTransferToken.calculateManyHash(addressaddress[]uint256[]uint256uint256) (crytic-export/etherscan-contracts/0x27e1d539cb59518bf14e4525b1c3b4721aaa9080-FourCrowdsale.sol#538-540) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256()(uint256(1)address(this)_from_tos_values_fee_nonce) (crytic-export/etherscan-contracts/0x27e1d539cb59518bf14e4525b1c3b4721aaa9080-FourCrowdsale.sol#539)
"
0x0212fc2a0e2f5573155359c80f87318d926561b3,T,"Laurea.addCertificado(stringstringstringstringstringuint8) (crytic-export/etherscan-contracts/0x0212fc2a0e2f5573155359c80f87318d926561b3-Laurea.sol#39-46) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hashCertificado = keccak256(bytes)(abi.encodePacked(_cpf_codigoCurso)) (crytic-export/etherscan-contracts/0x0212fc2a0e2f5573155359c80f87318d926561b3-Laurea.sol#41)
"
0x467439207d53530505e5eb40edd6debbaff3e063,T,"MarsGenesisCore.mintLand(boolstringstringbytesstringstringuint256address) (Users/mario/Development/MarsGenesis/Contract/contracts/MarsGenesisCore.sol#91-113) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hash = keccak256(bytes)(abi.encodePacked(topLeftLatLongbottomRightLatLongaddress(this)cardId)) (Users/mario/Development/MarsGenesis/Contract/contracts/MarsGenesisCore.sol#100)
"
0x6eda86e10bada428d48d6ae5855f827832c90614,T,"CryptoCard.mintCard(stringstringstringaddress) (contracts/CryptoCard.sol#50-69) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:_seed[mintId] = uint256(keccak256(bytes)(abi.encodePacked(block.timestamp_msgSender()tofromheaderfootermintIdmsg.value))) (contracts/CryptoCard.sol#62-65)
"
0xb221ac6622ae5348375d0048dcff0049ebb97d89,T,"Escrow_v1_0._verifySignatures(uint8[]bytes32[]bytes32[]bytes32address[]uint256[]) (crytic-export/etherscan-contracts/0xb221ac6622ae5348375d0048dcff0049ebb97d89-Escrow_v1_0.sol#585-634) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:txHash = keccak256()(abi.encodePacked(Ethereum Signed Message:
"
0xbc02634d369bf7d4a8d3597bc84077e31c778339,T,"Grimbogs.claimYourGrimbog(bytes32[]stringbytesuint256[]uint256[]uint256[]) (contracts/Grimbogs.sol#137-210) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:require(boolstring)(isValidSignature(keccak256(bytes)(abi.encodePacked(msg.sender_nonce_warpyIds_555Ids_euphoricWorldIds))_signature)Invalid signature) (contracts/Grimbogs.sol#148-158)
"
0x9c91c5f24fd494487d09c42f7a81818f8f558761,T,"SmartWallet.sendMultiSigBatch(address[]uint256[]uint256uint256bytes) (contracts/SmartWallet.sol#238-276) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:operationHash = keccak256(bytes)(abi.encodePacked(getBatchNetworkId()recipientsvaluesexpireTimesequenceId)) (contracts/SmartWallet.sol#253-261)
"
0xb77f0b25af126fce0ea41e5696f1e5e9102e1d77,T,"ThreeWords.wordsToPhraseId(stringstringstring) (contracts/ThreeWords.sol#77-79) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:keccak256(bytes)(abi.encodePacked(_word1_word2_word3)) (contracts/ThreeWords.sol#78)
"
0xea968e6ac95a95c68bf66decc803a1b2848cdc4a,T,"Chocofactory.verifySig(addressaddressstringstringbytes) (contracts/Chocofactory.sol#61-73) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:digest = keccak256(bytes)(abi.encodePacked(block.chainidaddress(this)implementationnamesymbol)).toEthSignedMessageHash() (contracts/Chocofactory.sol#68-70)
"
0x592418a8171d46083a5a6ae8c9541c728c618d8a,T,"Props721.fusion(uint256[]uint256[]bytes) (contracts/Props721.sol#203-221) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:require(boolstring)(ECDSA.recover(keccak256(bytes)(abi.encodePacked(msg.sender__inputTokenIDs__outputTokenIDs)).toEthSignedMessageHash()signature) == allowedAddresses[1]Invalid Signature) (contracts/Props721.sol#209)
"
0x6913ff46b5c0919d99980a4d6001963eb37051da,T,"BurnAuction1155.verifySignature(uint256[]uint256[]uint256[]bytes) (contracts/RaffleTest.sol#228-240) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:hash = keccak256(bytes)(abi.encodePacked(nftsnftValuesnftAmounts)) (contracts/RaffleTest.sol#235)
"
0xc170583fee9fc7e03f15ddc2544b582c05eddb05,T,"AuctionManager.buyAuctionItem(AuctionManager.Auctionbytesuint256) (contracts/AuctionManager.sol#45-104) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:messageHash = keccak256(bytes)(abi.encodePacked(auction.orderIdauction.buyerIdauction.editionIdauction.itemIdauction.ownerWalletauction.artistWalletauction.artistRoyaltydeadline)) (contracts/AuctionManager.sol#55-66)
"
0x000047203100a45635029ec21bbbec5ec53cb6f6,T,"SaleManager.newSale(bytes32uint256uint256uint256uint256uint160stringstringuint256uint8) (contracts/SaleManager.sol#280-350) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:saleId = keccak256(bytes)(abi.encodePacked(merkleRootmsg.sendersaleBuyLimituserBuyLimitstartTimeendTimenamesymbolpricedecimals)) (contracts/SaleManager.sol#302-313)
"
0x3875151e877cb7c048d9b8f5045debf46babe02b,T,"SimplePriceFeed._updatePrices(address[]uint256[]) (crytic-export/etherscan-contracts/0x3875151e877cb7c048d9b8f5045debf46babe02b-CanonicalPriceFeed.sol#808-820) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:PriceUpdated(keccak256()(ofAssetsnewPrices)) (crytic-export/etherscan-contracts/0x3875151e877cb7c048d9b8f5045debf46babe02b-CanonicalPriceFeed.sol#819)
"
0xd665215893ce709b72951a816d157be616899cd2,T,"WastedWorld._validateSignature(bytesaddressuint256[]uint256[]) (crytic-export/etherscan-contracts/0xd665215893ce709b72951a816d157be616899cd2-WastedWorld.sol#877-888) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:dataHash = keccak256(bytes)(abi.encodePacked(contractAddresstokenIdstokenTraits)) (crytic-export/etherscan-contracts/0xd665215893ce709b72951a816d157be616899cd2-WastedWorld.sol#883)
"
0x40a0f793ccfd9bc6f2532d06d022be0f978ecbf3,T,"LaidBackLlamas.setProvenance(stringstring) (contracts/LaidBackLlamas.sol#288-301) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:mintStartID = uint256(keccak256(bytes)(abi.encodePacked(block.timestampmsg.sender_images_jsonblock.difficulty))) % MINT_SIZE (contracts/LaidBackLlamas.sol#296)
"
0x1e2c4fb7ede391d116e6b41cd0608260e8801d59,T,"BackedFactory.deployToken(stringstringaddressaddressaddressaddressaddress) (contracts/BackedFactory.sol#79-102) calls keccak256(abi.encodePacked()) with multiple dynamic arguments. It could result in hash collisions:salt = keccak256(bytes)(abi.encodePacked(namesymbol)) (contracts/BackedFactory.sol#83)
"
