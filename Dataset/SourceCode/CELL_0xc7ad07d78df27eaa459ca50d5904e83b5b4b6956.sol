{{

  "language": "Solidity",

  "sources": {

    "contracts/CELL.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @title: Cellscapes\n/// @author: manifold.xyz\n\nimport \"./manifold/ERC721Creator.sol\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                                                                                                                //\n//                                                                                                                                                                                                                //\n//                                                                                                                                                                                                                //\n//    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~^^^^^^^^^^^^^^~~~~^^~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~~~^~^^^^^^^^^^^^^^^^^^^^^^^~^^^^^^^^^^^^^    //\n//    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    //\n//    ^^^^^^~~^^^^^~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    //\n//    ^^^^~~~^~^~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^:^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~~~~~~~~~~~~~~~~~    //\n//    ^^^^~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^:::^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~~^^^^^^^^^^^^^^^^    //\n//    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^:^^^^^^^:^::^^::^^^^^^^^^^^^^^^^^^^^^^^^^^^:::::^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^::^::::    //\n//    ~~~~~~~~^^^^^^^^^^^^^^^^:^^^^^^^^^^^^^~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^::::::^^^:^^^:::^::^^^^^^^^^^^^^^^^^:::^^^^^:::^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^::::    //\n//    ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^:^:::^^^^^^^^^:::::::::::^:::^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^::^^^^^^^^^^^^^^^^^^^^^^^^^^^^^:::^^^^^^^^::::::^^^    //\n//    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^:::::^^^^^^^^^^^^^^::^^^^^^^^^^^^^^^^^^^^^^^^^^^:::^^^^^^^^^^^^^^^^^^^^::^^::^^^^:^^^^^^^:::::::::^^^^:::^^^::::::^^^^:::::^^^^^    //\n//    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^:::^:^^^^^^^^^^^^^^^^^^^^^^^^^^^^^:^^::::^^^^^:::^^^^^^^^^^^^^^^^:::::::::^^^^^^^^^^:::::^:^^^^^^^^:^^^^^^^^^    //\n//    ~~~^^^^^^^~~~~~~~~~!!!!!~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^::^:::^^^^^^^^^^^^^^^^:::^^^^:^::::::^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^:::^^^^^^^^^^^^^^^^^^^    //\n//    ^^~~^~~~~~~~~~!!!?JJJJJJ????7~~~~~^^^^^^^^^^^^^^^^^^^^^^^~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    //\n//    ~~~~!7777777!!JJJYYYJJYYJJYYJJ7!!~~~~~~^^^^^^^^^~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^:::::^^^    //\n//    ~~!?YYYYYYJJ?YYYYYYYYYYYYYYYYYYYJ?7!~~~^^^^^^^^^^~~~!7????7!!!~~~~~~~~~~~~~~^^^^^^^^^~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^:^^^^:^^^^^^^^^^^^~~~~~~~~~^^~!~~~~~^^^^~~~~!!!    //\n//    ~7Y555555Y5YY55YYYYYYJ55YYY55YY5YYYJ?!~^^^^^^^^^^~!7JYYYYYYYJJ?77!~~~~~~~~~~~~~^~~!7?J?777!~~^^^^^^^^^^^^^^^^^^^~~!!7???77!!77!!~~^^~^^^^^^^^^^^^:::::::::::::^^^^^^^^~!77!77??777777!!!!!!~~^^^~!77??77    //\n//    !J555555555555YYYYY5YJ55YY55555J?JYYJJ7~^^^^^^^~~~7JYYY55YY55YYYJ?7~~~~~~~~~~~~7JJYYYYJJJYJJ?7!~^^^^^^^^^^^^^^^~JYJJYY5555YYYYJJ?7!~~~~~~^^^^^^^^^^^^^^:::^^::^^^^^^^^~!!77????????????7777!!~^~!77!!?7?    //\n//    Y55555P5555555555YY55555Y555555Y777JJJJ7!~~~~~~~~!!?YYJ?JJ55555YYJ?7!~~~~7J!~~7JYY55555YYYYYYJJ7!77!~^^^^^~~~^^~JJYY5YYYYYYYYYYYYY5J????7!^^^^^^^^^^^^^^::^::^^^^~~~~~!77???7!!!????JJJJJ????77777777???    //\n//    YJYJJY5555555555555YY5555555555YJ?7?JJJJJJ???????????J?!755P5555YYJ?7!!!755J77?JY5YYYYYYYYYYJJJYYYYYJ7!^~7JJJ?JYYYY5YYY??JYYYYYYYYYYJJJJJ?7~~~^^^^^^^^^^^^^^:^~!7777777???????7?JJJJJJ??JJJJJ???????????    //\n//    YYYYYYYY555555555555555555555Y?YJJJJJJJJJJJJJJJJJJ?JJ?????JY55555YYJ7!7?JYYYYY55555YYYYY5555Y5P5P55YYJJ~7JJ?JYYYYYY5YYYYYY5Y5Y5YYY5YYYYJJ?J?!~~~!!!!!~^^^^^^^~!!7???????JJJJJJJJYJYJ7???JYJJJJJJJJ??JJJJ    //\n//    YYY5555555PP55PPP55P55PPP55555J5YYJJJJJJJJJJJJJJJJJJJJJJJJ??J555P555J?7?JJY5YYY55555555PPPPPPPP5555YYJ?7??JJ?77YYYY5555555555555555YY55YJJJ?7!7????JJJ7~^^^^~!77???????JJYJJYJYYYYYJJJJJYYJJJJYYJYJJJJJJ    //\n//    YY5P55PP55PPPPPPGGPP5PPGG55555555YYJJYYJJJJJJJJJJJJJJJJJJJJ??YPPPP5YYYJJJYY555555555PPP5PPPPPPP5P555555YYYYY?7Y55555555555555555555Y5Y5YYYJYJYJJJJJJYYJ?7^^^~!77777??JJJY5YYYY5Y5YYYYYY5YYYYYYYYJJYYYYYJ    //\n//    55PPP55P5PPPPPPGGGGPPPPBB5YYY555555YYYYJJJJJJJYYJJJJJJJJJJJJJJPGGGPPGGGPP5555555555P5555555PPP55555PPG5Y55555555555555555555555555555555555YYYYYYY5YYYJJ7~!!77777!7???JJJJYJJY5YYJYYYYYYYYYY??JJJJYYY5YY    //\n//    55PPP55P5PPGGGGBGGPPPGGBBP5PP555Y555YYYYYYYYYYYYYJJJJJJJJJJJJJJPBGGGBBGGGPPPPPPPPPPPP5555PPGGPPPPPPPG555555555555555555555P5555PP5PP555555555555Y555YYJJ77?JJJJ????J?JJY55YYYY55JJJYYJJJYYYYYYYYYYYYYYYY    //\n//    P55PPP5Y55PBGGGGGGGGGGBGGGP555555YY55YYYYYYYYYYYYYYYJJJJJJJJJJJJPBBGGGPPPPPPPPPPPPPPPPP55PPPPPPPPPPGG555555555555555555PP5P5PP5PPPPPPP5555555555555555YYJJJJJJJJJJJYYYYY5P555YY55YJYJJJJYYYYYPP5555YYYYY    //\n//    GPPPPGP5PPPGBBBGGGGGPPGGBP555555555555YYYYYYYYYYYYYJJJJJJJJJJJJJJ5GGGGGGGGGGGGPPPPPPGPGGPPGGGGGPP5PGGP5555P555555P5555PGPPPPPPPPPPPPPPPPP5555PP5555555YYYYYYJJJJYY5YYY5YYPP5555555YYYYYYY5555PPP555555YY    //\n//    GGP55PGGBGGPPGBBBBGGGBBBG55555555555555YYYYYYYYYYYJJJJJJJJJJJJJJJ?YGGGGGGGGGGGGGGGGGGGGGGGGGGGGGPPPPP55555P5PP55555555PPGBGPPPPGGGPPPPPPPPPPPPP5555555YY555YJYYYY55Y55555Y5555P555555555Y555555555555555    //\n//    GGPPPPPGPGGP5GBBBBBBBBBP5555555555Y555YYYYYYYYYYYYYJJJJJJJJJJJJJJJ?YGGBBBBGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPP5PPP55555555PPPGBGPPGGGGGGGGGGGGGPPPPP55555555555JJJYYYYY55555555P5PPPP555555Y5555555PPGGPP555    //\n//    PGGGP5YPPP55GBBB#BB###P55YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYJJJJJJJJJJJYGBGBBGGGGGGBGBGBBGGGBBGGGGGGGGGGGGGPGPPPPPP555555PPGBBGGPGGPPGGGGGGGGGGPPP5555555555555YYYYJY5555PP5555Y5P55555555Y55PPPPPGGGGPPP55    //\n//    5PPGGPPPPPPG#BB#B#BBBBGGG5YYYYYYYYYYYYYYYJ??????7?????J??J?JJJ??7?GBBBBBGBBBBBBBBBBBBBBBBGGBBBBGGGGBGGP5PPPPPPPPPP55PPPPGBGGGGGGGGGGGGGGGGGGGPPPPPPPP55P5PPPP5YYY5555GP55555PPP55P5555555555P5PGGGGGPP5P    //\n//    PGGGGGGPP55P##B#BBBBBBBBBPYYYYYYYYYYYYYYYJ7!!!!!!!!!!!!!!!!!!!!!!7GBBBBBBBBBBBGBBBBGBBBBBBBBBBBBBBB#GPGGPPPPPPP55PPPPPPPGGGBGGGGGGGGGGGGGGGPGGPGGPPPPPPGPPPP55Y555555PGPGGGGBBGP555555PPP55555PGGPPGPPPP    //\n//    PGGGGGGPP5PG#####BBB#BBBBGYYYYYYYYYYYYYYY?7!!!!!77!!!!!!!!!!!!!!!!5#BBBBBBBBBBBBB#BGBBBBB#BBBBBBBBB#BGGPPPPPPPP5PPPPPGPPPPGBBGGGGGBGBBBBBBGPGGGGGPGGGGGPGPPP5YY5P55PPGGGGGBBBBGGPGGPP55GPPPGGGGBBBBBBBGP    //\n//    PGGBBGBBGGB#######B5GGGGPPYYYYYYYYYYYYJJJ?77777!!!!!!!!!!!!!!!!!!!75PGBB##########B########B##BBBB#####BBBBBBGPGGGGBGGGGPP5GBGGBBBB#BBBBBBBBBBBBBGBBBGGGGGBBGP5555PGBBBBBGPGGGGGBGP55P5PP5PGBBGGGGG55PY5    //\n//    5555PGGGP555YYYJYYYYYYY??JYJJJJJJJJJJJJJ?77777!!!!!7777777!777777777??JJYY55PPG5YJ?JY55JJ5PGBBBBBBBGGBBBBB##BP5###BPPPP555YYYYY5GGGPP5PPGGGBBBGY5555YYYYYY55555PY7J5YYYJ??77???JJJ????????J??77?????????    //\n//    YYJ?JJJJJJJJJJJJJJJJJJYYYYYYJJJJJJ??JJJJJJ?7777???JJJJ??J???JJJJJJJJJJ?????????7?????????7??JYJJJJJJJJJJJJJYJ?JYYYJJJJJJJJJJ?J??????JJ???JJ????77??????????77777777777777777777777???7???7????????77????    //\n//    JJJJJJJJJJJJJJYYYJJYYYYYYYYYYY?!7?JJJJJJJYJJJYYYYJYJJJJ?7JJJYJYY?7?J?J???77?J?JJJJYYYYYJJJJJJJYYYYYYYYYYY?JJJJJJJ??JJJJYYJJJJJJJJYYYYYYYJYJ?JJ?????????????????77?7777???????????????J?JJJJJJJJJYYYJYYYY    //\n//    JJJJJJJ???7777?JJJYYYYYYYYYYJ?7777?JJJ??7?JJJYYYJ?77?77??JJJ??7777777777777?JJJJYYYYYYYYYYYYYYYYYJJYJYYJJJJJJJJJJ??7!7YYJ?JJJJJJYYJJJJJJJ?????JJJJJJJJJJYYYYYYYJ???JJJJJJJJJJJJJJJJJJJJYJJYYYYYYYJJJJJJJ    //\n//    ??J?J???????????????????????????????????77??????77!77777??7777?777777777777777?7???????????????????????77777777777777???7777????????????????????JJJJJJJJJJ???????????????????J??????????????????????????    //\n//    ??????????????7??????J???7777777777777777777777777??????7???JJJJJJJ????????????????????????JJ???????????JJJJJJJ?????J?????JJ?????JJJJJJJJ??JJJJJJJ????????J?J????JJ???JJJ?J??J?JJJJJJJJ???????JJYJJYJYYY    //\n//    77????????????????????7???????????7?777?????????JJ?J????7J??YYYYYYYJJ??JJJJJJJJJJJ???JJJ????JJJJ?????JJJYYYYYJJ????JJJJJJ??????JJJJ????J????JJJJJJJJJJ?JJJJJJ?????????????J???????????J?????????JJ???JJ?    //\n//    ?????J?????????7777777777???????????????J????????JJJ????J???JJJJJJJJ???????????JJ?JJJJJJJJJJJJJJJ?JJJJJJJJJJ??????????????????????????????????????????J??????????????JJJJ??JJJJ?????????7777????????????    //\n//    ??????????????????????7???????????????JJJJJJJJJJJJJYYYYYYYYYJJJJJJJJYYYYYYYY5555555555555YYYYYYYYYYYYYYYJJJYY55555555YY555555555555P55555YYYYYYYYYYYY555YYJJJJ?????JJJJ????JYYYYYYYYYYYYJJJJJJJJJJJJJJJJ    //\n//    JJJJJJJJJJJYYYYYYYYYYY55555JJJJ???JJJJJYYYYYJJJJJJ?JJJJJYYJ??!!!7!!!7??77??7?????JJJJ?J77777???7??!!!!!~~~~~!777?Y555P55PPPGGGGPPPP5YYJ7777????J?7???JJJJ???77!7???JJJYJ??JYYYYYYYJYYYJ??JJJJJY55555YYYJ    //\n//    JYYY5555PPPPPPPPP5YYJJJJ??7!!!!7777777??????????J?!!!!!7777!!!!777????7!777777?7!7?J??JJYY55JJJJJJJJJYYY5555PPPGGBBBBBBGGGBBBBGPP5P55YYYY5J7???JYYYYYYY555Y555YYYYYY55PPPP555555555555YJJYYY5Y555P5YJJJ?    //\n//    77?JPBBBP5YJJYYJJ7777777!!!!!7777777!!!!!7777777!!!!!!!!!!777777YPGBBBGGBGBBGBBBBB#BBBB#########BBBBBBBBBBBBBBBBGPGGGGBGGGBBGGGGBBBBB##GBBBGGGBBGGGGGGGGGGGGGPPPPPPPPPPPPPPPPPP55555PPPPPPPPPPPPPPPPPPPP    //\n//    BGGB####BGP55YY5PGGPPP55YYYYJJJJJJJJJJJJJJ?????????????????????7Y#####################BBBBGPGGPPG5555YY55YY55Y5JJ555555Y5GGP5PPPPP5PPGBGBBBBBGGGGGGGGGGGGGGGPPP5PPGGGGGGGGGGGPPPPPPPPPPPGGGGGGGGGGGGGGGG    //\n//    ###########BBB###########BBBBPYYYYYYYYYYYJ??????J??????J???????7?B#################B##########################BBB####BBBBBBBBBBBBBBBBBBBBBBBBGGGGGPPPPPGPGGGPPP55PPPPPPPPPGGGGGGGGPPPPPPPGGGGGGGGGGGGGGG    //\n//    #BBB####BBBBBBBBBBBBB#######BYYYYYYYYYYYYY?????????????????JJJJJ?5#########BBBBB#####BBBBBB################BB####BB#BBBBBBBBBBBBBBBBBBBBGGGGGGPPPPPPPPPPPPPPPPP55PPPPPPPPPPPPPPPGGPPPPPPPPGGGGGGGGGGGGGG    //\n//    BB#####BBBBBBB##BBBBBBBBBBBBGP5PP555YYYYYYYJJJJJJYJYYYYYYYYYYYYYYP##BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBGGGBGGGGGGGGGGGGGGGPPPPPPPPPPPGGGPP555Y55555555555YY555PGGGPPPPP5PPPGGGGGGGGGGGG    //\n//    BB###BBBBBBBBBBBBBBBBBBGGGGGGGGGGGGGPPPP555555555YYYY5YYYYYYYYYYYBBBBBBBBBBBBBBBBBBBBGBBBBBBBBBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGPPPPPPPPPGPPPPPPGGGGGPPPYJJ???777???J?7!77?JYJ?J????7?JJJ5YJ77??77??Y    //\n//    B###BB#BBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGPP5555555555YYY5YYY5YYYYJPBBBBBBBBBBBBGGBGGGGGGGGGGGBBGGGGGGGGGGGGGGGGGGGPGGGGGGGPGPPPPPPPPPPPPPPPPPPPPPP5PPPPP5555555555555PPPPPPPPPPP5P5YYJJJ??????JY55YY555555    //\n//    BBB#BBBBBBBBBBBBBBBBBBBGGBGGGGGGGGGGGGGGP555555555YYYYYYY555YYY5BGGGGGGGGGGGGGGGGGGGGGGGPPGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGPPPPPPPPP555PPPPPPPPPPP555555555YYYYYY5555PPPPPGGGGGGGGPGPGGPPPPPPPPGGGGGPPPPPPP    //\n//    BBB#BBBBBBBBBBBBBBGBGGGGGGGGGGGGGGGGGGGGP555555555YY5YY5YYYYYY5GBGGPPPPPPGGGGGGGGPPPPPPPPPGGPPGGGGGGGGGPGGGPGPGGGGGGPPPPPPPPPGGGGP5PGPPPPPP555YYYYJJJJJJ??7?YY5555PPPPPPPPPPPPPPPPPPPGPPPPPPPPPPP555PPPP    //\n//    BBBBBBBGBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGP55555555555555YYYYYYY5GGGGGPP55555PPPPPPP5555555PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP5555P55555555555J77777777!!!!7?JYY5555PPPPPPPPPPPPPPPPGGPPPPPGPPPPPPPPPPP    //\n//    BBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGG555Y55555555555YYYYYY5PPPPP55Y55555YYY5555555555555555555PPPPPPPPPPPP555PPP5555555PPPP55555555555YYYYYJ7!!!!!!!!~~~~~~!JYJJJYYYYY555555PPPPPPPPPPPPPPGPPPPPPPPPYJ    //\n//    GGGGGBGGGBGGGGPGGGPGGGGGGGGGGGGGGGGGGG5555Y5555YYYY55YY55555PPPPPP555YYYY555Y5YY555555YYYY55555PPPPP555555555YYYYYYYYY55YYYYYYYYJYJJJYJJ?77!~~~~~~~~~~~~~~~~~~!777777??JYYYJJY555555555PPP555555PPPPPP55    //\n//    YYYYY555PGGGGGGGGGGGGGGGGGGGPGGGGPGPP5YYYY5YYYYYYYJYYYYPPPPPPPP555555YYJJJJJJJJJJJYYYYJJJJJJJYY5555YYYYJYJJJJJJ???JJYYYYYYYYY55YYYYJJ??77~~~~~~~~~~~~~~~~~~~~~~!!7??JJYYYYYYYYYYYYYYYYYYJJYY?????7777777    //\n//    YYYJYY5PPGBGGGGGGGGGGGGGGGGGGPPPPPP5YYYJYYJ??7JYYYYY55Y55555555555Y55YJJJJJJJJJJJJJ????77777?JJYYYYYYYJJJJJJJJJ?77777??JJYYYYYYYYJJ?7~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~!!!77??????JJYJJJJ?77!!??7!!!~!!!!~~    //\n//    BGBBBBBBBBBGGGGGGGGGGGGGGGGGGGP555YYJ?77777!!!7?JY555YY5555YYYYYYJYYYJ??JJJJJJJJ??7777!!~~~~!!77?JJJYYJJ???77!!~~~~~~~~!7777???777!~~~^^^^^^^^^~~~~~~~~~~~~~~~~~~~~~~~~~!!77?????JJ?7!~~~~~~~~~~~~~~~~~~    //\n//    GBBBBBGBBBBBBGGGGGGGGGPPPPGGGGPGPP555Y77!!!!!!!!77??JYYYJJJJ????7!777!!!!!!!777777!~~~~~~~~~~~~~~!!77?77!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^~~~~^~~~~~~~~~~~~~~~~~~~~~~~~!~~~~~~~~~~~~~~~~~~~~~~~~~~~    //\n//    55YYY5Y555PGGGGGGGGGGPPPPPGGGPPPPP5YJJ!!!!!!!!!!!!!!!7777777!!!!!~~~~~~~~~^~~~~~~~~~~^^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    //\n//    5YY555PPPPGGGGGGGGGGGPPPPPPGPPP555YJ7!!!~~!!!!~~~~~~~~~~!~~~~~~~~~~~~~~~~~~~~~^~~^^^^^^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    //\n//    GGGGBBBGGGGGPPPPPPPPPPPPPPPPP555Y?777!!!!!~~~!~~~~~~~~~!!!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    //\n//                                                                                                                                                                                                                //\n//                                                                                                                                                                                                                //\n//                                                                                                                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\ncontract CELL is ERC721Creator {\n    constructor() ERC721Creator(\"Cellscapes\", \"CELL\") {}\n}\n"

    },

    "contracts/manifold/ERC721Creator.sol": {

      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/// @author: manifold.xyz\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\ncontract ERC721Creator is Proxy {\n    \n    constructor(string memory name, string memory symbol) {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6;\n        (bool success, ) = 0x5133522ea5A0494EcB83F26311A095DDD7a9D4b6.delegatecall(abi.encodeWithSignature(\"initialize(string,string)\", name, symbol));\n        require(success, \"Initialization failed\");\n    }\n        \n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n     function implementation() public view returns (address) {\n        return _implementation();\n    }\n\n    function _implementation() internal override view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }    \n\n}\n"

    },

    "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/Address.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"

    },

    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {

      "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"

    }

  },

  "settings": {

    "remappings": [

      "@openzeppelin/=node_modules/@openzeppelin/"

    ],

    "optimizer": {

      "enabled": true,

      "runs": 300

    },

    "metadata": {

      "bytecodeHash": "ipfs"

    },

    "outputSelection": {

      "*": {

        "*": [

          "evm.bytecode",

          "evm.deployedBytecode",

          "devdoc",

          "userdoc",

          "metadata",

          "abi"

        ]

      }

    },

    "evmVersion": "london",

    "libraries": {}

  }

}}