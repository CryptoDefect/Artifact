{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "checkAddressIfExists",
            "source_mapping": {
              "start": 1582,
              "length": 337,
              "filename_relative": "crytic-export/etherscan-contracts/0xbc79719636ec60bc3d98901af82b278f17a58037-OracleWrapperInverse/OracleWrapperInverse.sol",
              "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xbc79719636ec60bc3d98901af82b278f17a58037-OracleWrapperInverse/OracleWrapperInverse.sol",
              "filename_short": "OracleWrapperInverse.sol",
              "is_dependency": false,
              "lines": [
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57
              ],
              "starting_column": 5,
              "ending_column": 6
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OracleWrapperInverse",
                "source_mapping": {
                  "start": 323,
                  "length": 2673,
                  "filename_relative": "crytic-export/etherscan-contracts/0xbc79719636ec60bc3d98901af82b278f17a58037-OracleWrapperInverse/OracleWrapperInverse.sol",
                  "filename_absolute": "/mnt/c/Users/zzs/Desktop/CrySol_Static/crytic-export/etherscan-contracts/0xbc79719636ec60bc3d98901af82b278f17a58037-OracleWrapperInverse/OracleWrapperInverse.sol",
                  "filename_short": "OracleWrapperInverse.sol",
                  "is_dependency": false,
                  "lines": [
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30,
                    31,
                    32,
                    33,
                    34,
                    35,
                    36,
                    37,
                    38,
                    39,
                    40,
                    41,
                    42,
                    43,
                    44,
                    45,
                    46,
                    47,
                    48,
                    49,
                    50,
                    51,
                    52,
                    53,
                    54,
                    55,
                    56,
                    57,
                    58,
                    59,
                    60,
                    61,
                    62,
                    63,
                    64,
                    65,
                    66,
                    67,
                    68,
                    69,
                    70,
                    71,
                    72,
                    73,
                    74,
                    75,
                    76,
                    77,
                    78,
                    79,
                    80,
                    81,
                    82,
                    83
                  ],
                  "starting_column": 1,
                  "ending_column": 2
                }
              },
              "signature": "checkAddressIfExists(string[],string)"
            }
          }
        ],
        "description": "OracleWrapperInverse.checkAddressIfExists(string[],string) (OracleWrapperInverse.sol#50-57) uses keccak256(bytes)\n",
        "markdown": "[OracleWrapperInverse.checkAddressIfExists(string[],string)](crytic-export/etherscan-contracts/0xbc79719636ec60bc3d98901af82b278f17a58037-OracleWrapperInverse/OracleWrapperInverse.sol#L50-L57) uses keccak256(bytes)\n",
        "first_markdown_element": "crytic-export/etherscan-contracts/0xbc79719636ec60bc3d98901af82b278f17a58037-OracleWrapperInverse/OracleWrapperInverse.sol#L50-L57",
        "id": "a79dd8788d9f3274653db1496761eac4affc60da6dda6901109a79e633fc2fc5",
        "check": "crypto",
        "impact": "High",
        "confidence": "High"
      }
    ]
  }
}